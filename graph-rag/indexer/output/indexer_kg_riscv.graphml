<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d0" for="edge" attr.name="relationship" attr.type="string"/>
<graph edgedefault="directed"><node id="1032 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="A JOURNAL VOLUME"/>
<node id="1034 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="VOL."/>
<node id="IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="1038 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="1040 IEEE TRANSACTIONS"/>
<node id="VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="1042 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="1044 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS"/>
<node id="A JOURNAL"/>
<node id="PROCESSORS"/>
<node id="OPEN RISC-V INSTRUCTION SET ARCHITECTURE (ISA)"/>
<node id="FINDING INCREASING ADOPTION"/>
<node id="EMBEDDED WORLD"/>
<node id="WE"/>
<node id="A CLIC FOR THE CV32E40P"/>
<node id="CV32E40P"/>
<node id="AN INDUSTRIALLY SUPPORTED OPEN-SOURCE 32-BIT MICROCONTROLLER UNIT (MCU)-CLASS RISC-V CORE"/>
<node id="IT WITH FASTIRQ"/>
<node id="FASTIRQ"/>
<node id="A CUSTOM EXTENSION"/>
<node id="INTERRUPT LATENCY AS LOW AS SIX CYCLES"/>
<node id="CV32RT"/>
<node id="A 32-BIT RISC-V CORE"/>
<node id="THE INTERRUPT HANDLING CAPABILITIES OF CV32E40P"/>
<node id="AN INDUSTRIALLY SUPPORTED OPEN-SOURCE CORE"/>
<node id="BEST-IN-CLASS INTERRUPT LATENCY"/>
<node id="FAST CONTEXT SWITCHING"/>
<node id="THE ROAD FOR RISC-V ARCHITECTURES IN TIME-CRITICAL SYSTEMS"/>
<node id="FULL-SYSTEM PLATFORM"/>
<node id="PROPOSED INTERRUPT EXTENSION"/>
<node id="SECTION II-A"/>
<node id="RELEVANT TARGET METRICS"/>
<node id="SECTION II-B3"/>
<node id="CURRENT STATUS OF INTERRUPT HANDLING IN RISC-V"/>
<node id="SECTION II-C"/>
<node id="CV32E40P CORE"/>
<node id="CV32"/>
<node id="AN OPEN-SOURCE, INDUSTRY-GRADE, 32-BIT, IN-ORDER, FOUR-STAGE RISC-V CORE"/>
<node id="IMPLEMENTING OUR EXTENSIONS"/>
<node id="CV32 CORE AS THE BASELINE"/>
<node id="CV32 CORE"/>
<node id="CLINT INTERRUPT CONTROLLER"/>
<node id="CLINT INTERRUPT CONTROLLER WITH CLIC"/>
<node id="CLIC"/>
<node id="CV32RTCLIC"/>
<node id="FASTIRQ INTO THE CORE MICROARCHITECTURE"/>
<node id="THE EXTENSION PROPOSED IN THIS WORK"/>
<node id="CV32RTFASTIRQ"/>
<node id="CLIC FAST INTERRUPT CONTROLLER"/>
<node id="CLIC INTERRUPT CONTROLLER IN CV32RTCLIC 15"/>
<node id="CLIC INTERRUPT CONTROLLER"/>
<node id="DRAFT SPECIFICATION"/>
<node id="RISC-V PRIVILEGED SPECIFICATION 14"/>
<node id="FASTIRQ EXTENSION"/>
<node id="WEAKNESSES OF RISC-V CORE-SPECIFIC INTERRUPT CONTROLLERS"/>
<node id="CLIC BASE CAPABILITIES"/>
<node id="INTERRUPT LATENCY"/>
<node id="HW VECTORED INTERRUPTS"/>
<node id="SKIPPING OF REDUNDANT CONTEXT RESTORE OPERATIONS"/>
<node id="A FAST INTERRUPT EXTENSION"/>
<node id="RISC-V EMBEDDED SYSTEMS"/>
<node id="THE EXTENSION"/>
<node id="A 32-BIT, IN-ORDER, SINGLE-ISSUE CORE"/>
<node id="THE RISC-V CLIC FAST INTERRUPT CONTROLLER"/>
<node id="27 B. MAO, N. TAN, T. CHONG, AND L. LI"/>
<node id="A CLIC EXTENSION BASED FAST INTERRUPT SYSTEM FOR EMBEDDED RISC-V PROCESSORS"/>
<node id="A CLIC EXTENSION BASED FAST INTERRUPT SYSTEM"/>
<node id="EMBEDDED RISC-V PROCESSORS"/>
<node id="PROC."/>
<node id="MANY EMBEDDED USE CASES"/>
<node id="REAL-TIME CONSTRAINTS"/>
<node id="FLEXIBLE, PREDICTABLE, AND FAST REACTIVE HANDLING OF INCOMING EVENTS"/>
<node id="RISC-V PROCESSORS"/>
<node id="THIS AREA"/>
<node id="MORE MATURE PROPRIETARY ARCHITECTURES"/>
<node id="ARM CORTEX-M"/>
<node id="TRICORE"/>
<node id="ARM CORTEX-M AND TRICORE"/>
<node id="TUNED FOR YEARS"/>
<node id="THE DEFAULT INTERRUPT CONTROLLER"/>
<node id="RISC-V"/>
<node id="THE CORE LOCAL INTERRUPTOR (CLINT)"/>
<node id="CONFIGURABILITY IN PRIORITIZATION AND PREEMPTION OF INTERRUPTS"/>
<node id="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) SPECIFICATION"/>
<node id="THIS CONCERN"/>
<node id="PREEMPTIBLE, LOW-LATENCY VECTORED INTERRUPTS"/>
<node id="OPTIONAL EXTENSIONS TO IMPROVE INTERRUPT LATENCY"/>
<node id="THE RISC-V COMMUNITY"/>
<node id="AN EXTENSION TO THE PRIVILEGED SPECIFICATIONS 14"/>
<node id="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) 15"/>
<node id="CURRENTLY UNDER RATIFICATION BY THE COMMUNITY"/>
<node id="REAL-TIME SCENARIOS"/>
<node id="CLICS"/>
<node id="LOCAL TO EACH HARDWARE THREAD (HART)"/>
<node id="PLATFORM LEVEL INTERRUPT CONTROLLERS (PLICS)"/>
<node id="CENTRALIZED INTERRUPT CONTROLLERS"/>
<node id="MANAGING MULTIPLE HARTS"/>
<node id="PLATFORM-LEVEL INTERRUPT CONTROLLERS"/>
<node id="THIS CATEGORY"/>
<node id="RISC-V PLIC"/>
<node id="PLATFORM-LEVEL INTERRUPT CONTROLLER"/>
<node id="ADVANCED PLIC (APLIC)"/>
<node id="RISC-V INCOMING MESSAGE SIGNALED INTERRUPT CONTROLLER (IMSIC)"/>
<node id="RISC-V PLIC AND ADVANCED PLIC (APLIC)"/>
<node id="WIRE-BASED INTERRUPT COMMUNICATION"/>
<node id="MESSAGE-SIGNALED INTERRUPT COMMUNICATION"/>
<node id="DISTRIBUTE TIME-CRITICAL INTERRUPTS TO THE RUNNING HARTS"/>
<node id="B. CORE-LOCAL INTERRUPT CONTROLLERS CLICS"/>
<node id="PROVIDING FAST INTERRUPT-HANDLING CAPABILITIES"/>
<node id="REAL-TIME EMBEDDED APPLICATION DOMAINS"/>
<node id="RISC-V SMCLIC CORE-LOCAL INTERRUPT CONTROLLER (CLIC)"/>
<node id="RISC-V PRIVILEGED ARCHITECTURE EXTENSION"/>
<node id="DOCUMENT"/>
<node id="HTTP://WWW2.EECS.BERKELEY.EDU/PUB/STECHRPTS/2016/EECS-2016-129.HTML"/>
<node id="CV32RT OUR ENHANCED CORE"/>
<node id="THE FIRST FULLY OPEN-SOURCE RV32 CORE"/>
<node id="COMPETITIVE INTERRUPT-HANDLING FEATURES"/>
<node id="ARM CORTEX-M SERIES"/>
<node id="CV32RT WITHIN AN OPEN-SOURCE SYSTEM ON CHIP (SOC)"/>
<node id="CV32RT INTERRUPT HANDLING CAPABILITIES"/>
<node id="NEGLIGIBLE AREA OVERHEAD IN A MODERN TECHNOLOGY NODE"/>
<node id="PERFORMANCE BENEFITS"/>
<node id="VARIOUS CV32RT VERSIONS"/>
<node id="INTERRUPT LATENCY AND CONTEXT SWITCH TIMES"/>
<node id="HOW THE VARIOUS CV32RT VERSIONS PERFORM IN TERMS OF INTERRUPT LATENCY AND CONTEXT SWITCH TIMES"/>
<node id="THESE ADDITIONS"/>
<node id="OVERHEAD IN TERMS OF AREA AND TIMING"/>
<node id="THE OVERHEAD THESE ADDITIONS INCUR IN TERMS OF AREA AND TIMING"/>
<node id="THE PROPOSED EXTENSIONS"/>
<node id="TASK CONTEXT SWITCHING IN REAL-TIME OPERATING SYSTEMS (RTOSS)"/>
<node id="INDEX TERMS"/>
<node id="CONTEXT SWITCHING"/>
<node id="EMBEDDED"/>
<node id="MICROCONTROLLER UNIT (MCU)"/>
<node id="REAL-TIME"/>
<node id="SEVERAL MARKETS"/>
<node id="REAL-TIME AN SW-BASED SOLUTION"/>
<node id="THE AUTOMOTIVE INDUSTRY"/>
<node id="HUNDREDS OF ELECTRONIC CONTROL UNITS (ECUS)"/>
<node id="ELECTRONIC CONTROL UNITS (ECUS)"/>
<node id="REAL-TIME APPLICATIONS"/>
<node id="ELECTRONIC ENGINE CONTROL"/>
<node id="GEARBOX CONTROL"/>
<node id="CRUISE CONTROL"/>
<node id="ANTI-LOCK BRAKE SYSTEMS"/>
<node id="MANY OTHER TASKS"/>
<node id="GENERAL-PURPOSE OPERATING SYSTEMS (GPOSS)"/>
<node id="AVERAGE THROUGHPUT"/>
<node id="THIS WORK"/>
<node id="THE HORIZON KEY DIGITAL TECHNOLOGIES JOINT UNDERTAKING (KDT JU) PROGRAMME"/>
<node id="THE TRISTAN PROJECT"/>
<node id="101095947"/>
<node id="ROBERT BALAS"/>
<node id="CORRESPONDING AUTHOR"/>
<node id="INTEGRATED SYSTEMS LABORATORY (IIS)"/>
<node id="ALESSANDRO OTTAVIANO"/>
<node id="ETH ZURICH"/>
<node id="8092 ZURICH"/>
<node id="SWITZERLAND"/>
<node id="LUCA BENINI"/>
<node id="THE INTEGRATED SYSTEMS LABORATORY (IIS)"/>
<node id="ZURICH, SWITZERLAND"/>
<node id="THE DEPARTMENT OF ELECTRICAL, ELECTRONIC AND INFORMATION ENGINEERING (DEI)"/>
<node id="UNIVERSITY OF BOLOGNA"/>
<node id="40126 BOLOGNA, ITALY"/>
<node id="COLOR VERSIONS OF ONE OR MORE FIGURES IN THIS ARTICLE"/>
<node id="HTTPS:DOI.ORG10.1109TVLSI.2024.3377130"/>
<node id="DIGITAL OBJECT IDENTIFIER"/>
<node id="10.1109TVLSI.2024.3377130"/>
<node id="THE DEVELOPMENT OF LINUX"/>
<node id="AVERAGE PERFORMANCE"/>
<node id="LINUX"/>
<node id="POPULAR OPEN-SOURCE GPOS KERNEL"/>
<node id="EXTENSIONS AND MODIFICATIONS"/>
<node id="IMPROVING DETERMINISM AND LATENCIES OF CRITICAL OPERATIONS IN LINUX"/>
<node id="PROPOSED AND IMPLEMENTED"/>
<node id="STRICT BOUNDS ON MAXIMUM LATENCIES OF OPERATIONS"/>
<node id="INDUSTRY-GRADE MATURITY"/>
<node id="EMPLOYED IN HARD REAL-TIME SCENARIOS"/>
<node id="REAL-TIME OPERATING SYSTEMS (RTOSS) KERNELS"/>
<node id="SPECIAL-PURPOSE OPERATING SYSTEMS (OSS)"/>
<node id="REAL-TIME GUARANTEES"/>
<node id="TASK SCHEDULING ACCORDING TO A GIVEN EXPECTED COMPLETION DEADLINE"/>
<node id="DETERMINISTIC LATENCIES OF VARIOUS OPERATIONS"/>
<node id="A. STANKOVIC"/>
<node id="SCHEDULING ALGORITHMS AND OPERATING SYSTEMS SUPPORT FOR REAL-TIME SYSTEMS"/>
<node id="THE RTOS SCHEDULER"/>
<node id="A SIGNIFICANT OVERHEAD"/>
<node id="THE SIGNIFICANT OVERHEAD"/>
<node id="THE COMBINED EFFECT OF BOTH THE CONTEXT SWITCHES REQUIRED TO HANDLE THE TRANSITION FROM A FOREGROUND TO A BACKGROUND TASK AND THE AMOUNT OF TIME ELAPSED FROM THE SOURCE EVENT THAT CAUSES THE PREEMPTION AND THE FIRST INSTRUCTION OF THE AWAKENED TASK"/>
<node id="THE FIRST INSTRUCTION OF THE AWAKENED TASK"/>
<node id="INTERRUPT LATENCY 7"/>
<node id="THE WORST CASE EXECUTION TIME (WCET) 2, 8, 9"/>
<node id="THE COST OF SAVING AND RESTORING THE TASK STATE DURING A CONTEXT SWITCH"/>
<node id="A SIGNIFICANT CONCERN"/>
<node id="RELATIVELY HIGH"/>
<node id="LONG CONTEXT SWITCH TIMES"/>
<node id="AVAILABLE TASK UTILIZATION"/>
<node id="THE MINIMUM VIABLE SWITCHING GRANULARITY"/>
<node id="PROCESS STATE"/>
<node id="CONTEXT SWITCH"/>
<node id="PROGRAM COUNTER"/>
<node id="REGISTER FILES (RFS)"/>
<node id="STATUS REGISTERS"/>
<node id="ADDRESS SPACE MAPPING"/>
<node id="MEMORY ACCESS OPERATIONS"/>
<node id="STORE THE STATE OF THE PREEMPTED TASK"/>
<node id="RESTORE THE STATE OF THE NEW TASK TO BE EXECUTED"/>
<node id="A SWITCH INTO AN INTERRUPT CONTEXT"/>
<node id="NORMAL PROGRAM EXECUTION"/>
<node id="AN ASYNCHRONOUS EVENT IS TRIGGERED"/>
<node id="AN ASYNCHRONOUS EVENT"/>
<node id="AN IO PERIPHERAL DEVICE"/>
<node id="HW-INDUCED INTERRUPT LATENCY"/>
<node id="ONLY ONE PART OF THE PROBLEM"/>
<node id="SW-INDUCED INTERRUPT LATENCY"/>
<node id="PART OF THE PROBLEM"/>
<node id="SW-DEPENDENT CONTRIBUTIONS"/>
<node id="HW-DEPENDENT CONTRIBUTIONS"/>
<node id="PERSONAL USE"/>
<node id="PERMITTED"/>
<node id="REPUBLICATIONREDISTRIBUTION"/>
<node id="IEEE PERMISSION"/>
<node id="HTTPS://WWW.IEEE.ORG/PUBLICATIONS/RIGHTS/INDEX.HTML"/>
<node id="MORE INFORMATION"/>
<node id="IEEE"/>
<node id="39TH INT."/>
<node id="AUTHORIZED LICENSED USE"/>
<node id="CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO"/>
<node id="THE CLIC DESIGN"/>
<node id="AUTHORIZED LICENSED USE LIMITED TO CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO"/>
<node id="INTERRUPT STATE"/>
<node id="PUSHED"/>
<node id="THE LATTER"/>
<node id="THE EXECUTION TIME OF THE AUTHORIZED LICENSED USE LIMITED TO CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO"/>
<node id="DATA"/>
<node id="MAY 28, 2025 AT 17:50:39 UTC"/>
<node id="IEEE XPLORE"/>
<node id="MAY 28, 2025"/>
<node id="17:50:39 UTC"/>
<node id="FAST INTERRUPT AND CONTEXT SWITCHING"/>
<node id="GPOSRTOS SCHEDULER AND THE USER CODE"/>
<node id="CAPABILITY OF THE SYSTEM TO PROVIDE TIMELY RESPONSES TO ASYNCHRONOUS EVENTS"/>
<node id="TABLE I"/>
<node id="NESTED INTERRUPT PREEMPTION SCHEME"/>
<node id="RISC-V CLIC"/>
<node id="THE NON-NESTED INTERRUPT CASE"/>
<node id="BANK SWITCHING AND THE NESTED INTERRUPT CASE"/>
<node id="AN AUTOMATIC CONTEXT-SAVING MECHANISM IN THE BACKGROUND"/>
<node id="C. CV32RTFASTIRQ"/>
<node id="FAST INTERRUPT EXTENSION"/>
<node id="A BLOCK DIAGRAM OF CV32RTFASTIRQ"/>
<node id="FIG."/>
<node id="SW INTERRUPT"/>
<node id="WRITING TO CLICS MEMORY MAP"/>
<node id="POINTER"/>
<node id="APPROPRIATELY BEFORE TRIGGERING AN SW INTERRUPT"/>
<node id="FAST INTERRUPT AND CONTEXT SWITCHING 1043 INSTRUCTION IN MACHINE MODE"/>
<node id="EMRET"/>
<node id="REDUNDANT CONTEXT SAVING AND RESTORING SEQUENCES"/>
<node id="DIRECTLY JUMPING TO THE NEXT AVAILABLE INTERRUPT HANDLER"/>
<node id="LOW INTERRUPT LATENCY"/>
<node id="CRUCIAL METRICS"/>
<node id="CONTEXT SWITCH TIME"/>
<node id="A WIDE RANGE OF PLATFORMS"/>
<node id="PLATFORMS"/>
<node id="COMMODITY MCU-CLASS EMBEDDED SYSTEMS"/>
<node id="MORE ADVANCED AND COMPLEX APPLICATION-CLASS MIXED CRITICALITY SYSTEMS (MCSS)"/>
<node id="TIMESAFETY-CRITICAL AND NON-CRITICAL APPLICATIONS"/>
<node id="DIFFERENT ISOLATED PARTITIONS"/>
<node id="THE SAME HW PLATFORM 12"/>
<node id="RESPONSE AND CONTEXT SWITCH TIME MINIMIZATION"/>
<node id="A CHALLENGE TO BE TACKLED AT THE HWSW INTERFACE"/>
<node id="SW PROGRAMMING TECHNIQUES AND HW INTERRUPT CONTROLLER ARCHITECTURES"/>
<node id="TO ENSURE MINIMAL RESPONSE TIME"/>
<node id="COMMERCIAL VENDORS AND IP PROVIDERS"/>
<node id="SUCH FEATURES AS IN-HOUSE SOLUTIONS"/>
<node id="OFTEN PROPRIETARY"/>
<node id="TIGHTLY COUPLED WITH THE VENDORS INSTRUCTION SET ARCHITECTURE (ISA)"/>
<node id="TIGHTLY COUPLED WITH THE VENDORS TARGET HW FAMILY"/>
<node id="TIGHTLY COUPLED WITH THE VENDORS ASSOCIATED SW STACK"/>
<node id="RISC-V ECOSYSTEM 13"/>
<node id="A MODULAR, FREE, AND OPEN-SOURCE ISA"/>
<node id="THE DE FACTO LINGUA FRANCA OF COMPUTING"/>
<node id="RISC-V SUPPORT FOR FAST INTERRUPT AND CONTEXT SWITCH HANDLING"/>
<node id="INCUMBENT PROPRIETARY ARCHITECTURES"/>
<node id="FLEXIBLE INTERRUPT PRIORITIZATION"/>
<node id="PREEMPTION MECHANISMS"/>
<node id="MODULAR RISC-V ISA"/>
<node id="DEVELOPING ORTHOGONAL CUSTOM EXTENSIONS"/>
<node id="FEW PUBLISHED WORKS"/>
<node id="THE PROBLEM OF MINIMIZING INTERRUPT LATENCY AND CONTEXT SWITCH TIME FROM A HOLISTIC (HW AND SW) VIEWPOINT FOR RISC-V"/>
<node id="THE GAP WITH MORE ESTABLISHED PROPRIETARY SOLUTIONS"/>
<node id="CLOSING THE GAP WITH MORE ESTABLISHED PROPRIETARY SOLUTIONS"/>
<node id="RISC-V AS A VALUABLE CANDIDATE FOR TIME- AND SAFETY-CRITICAL APPLICATION DOMAINS SUCH AS AUTOMOTIVE AND AEROSPACE"/>
<node id="AN OPEN-SOURCE SOLUTION TO BE SHARED WITH THE COMMUNITY"/>
<node id="VARIOUS FLAVORS OF RISC-V CORE-SPECIFIC INTERRUPT CONTROLLERS"/>
<node id="INTERRUPT HANDLERS"/>
<node id="NESTING"/>
<node id="CALLING OF C-FUNCTIONS WITHIN IT"/>
<node id="CALLING OF C-FUNCTIONS"/>
<node id="SAVING AND RESTORING STATE FOLLOWING THE C-ABI"/>
<node id="OUR DESIGN"/>
<node id="INTERRUPT LATENCIES OF SIX CLOCK CYCLES"/>
<node id="EFFICIENT BACK-TO-BACK INTERRUPT HANDLING IN 12 CYCLES"/>
<node id="INTERRUPT LATENCIES OF SIX CLOCK CYCLES AND EFFICIENT BACK-TO-BACK INTERRUPT HANDLING IN 12 CYCLES"/>
<node id="THE FASTEST AVAILABLE APPROACHES CURRENTLY IMPLEMENTED IN THE RISC-V LANDSCAPE"/>
<node id="THE FASTEST AVAILABLE APPROACHES"/>
<node id="FULLY OPEN-SOURCE"/>
<node id="COMPETITIVE AGAINST CLOSED-SOURCE AND PROPRIETARY COMMERCIAL SOLUTIONS"/>
<node id="THE IMPLEMENTATION AVAILABLE UNDER A PERMISSIVE OPEN-SOURCE LICENSE"/>
<node id="A FAST INTERRUPT EXTENSION (FASTIRQ)"/>
<node id="FAST INTERRUPT EXTENSION (FASTIRQ)"/>
<node id="BOTH NESTED INTERRUPT CASE SCENARIOS"/>
<node id="NON-NESTED INTERRUPT CASE SCENARIOS"/>
<node id="HIDING THE LATENCY THROUGH MEMORY BANKS"/>
<node id="A BACKGROUND-SAVING MECHANISM"/>
<node id="CLINT AND CLIC"/>
<node id="ABOUT 33 CYCLES INTERRUPT LATENCY"/>
<node id="INTERRUPT LATENCY TO SIX CYCLES"/>
<node id="THE SAME MECHANISM"/>
<node id="ONE TO ACCELERATE CONTEXT SWITCHING THROUGH HWSW COOPERATION"/>
<node id="THE PROPOSED SOLUTION"/>
<node id="RISC-V AS A COMPETITIVE CANDIDATE FOR BUILDING THE NEXT GENERATION OF TIME-CRITICAL SYSTEMS"/>
<node id="THIS CORE"/>
<node id="CONTROLPULP 19"/>
<node id="A SOC"/>
<node id="RUNNING REAL-TIME WORKLOADS"/>
<node id="THE SYSTEM"/>
<node id="A CV32 MANAGER CORE"/>
<node id="A PROGRAMMABLE ACCELERATOR SUBSYSTEM"/>
<node id="EIGHT CV32 CORES"/>
<node id="A SET OF STANDARD PERIPHERALS"/>
<node id="QUAD SERIAL PERIPHERAL INTERFACE (QSPI)"/>
<node id="INTER-INTEGRATED CIRCUIT (I2C)"/>
<node id="UNIVERSAL ASYNCHRONOUS RECEIVER-TRANSMITTER (UART)"/>
<node id="THE MANAGER CORE"/>
<node id="SCHEDULING TASKS"/>
<node id="COMMUNICATING WITH THE PERIPHERALS"/>
<node id="OFFLOADING TASKS TO THE ACCELERATOR SUBSYSTEM"/>
<node id="ASYNCHRONOUS EXTERNAL EVENTS"/>
<node id="INTERRUPTS"/>
<node id="CONTROLPULP"/>
<node id="A SET OF SCRATCHPAD MEMORIES (SPMS)"/>
<node id="SCRATCHPAD MEMORIES (SPMS)"/>
<node id="SINGLE-CYCLE ACCESS TIME"/>
<node id="THE CV32 MANAGER CORE"/>
<node id="THIS DESIGN CHOICE"/>
<node id="DETERMINISTIC MEMORY ACCESS LATENCY FOR BOTH DATA LOAD, STORE, AND INSTRUCTION FETCH"/>
<node id="THE WORST CASE LATENCY WHEN HANDLING UNPREDICTABLE EVENTS"/>
<node id="APPLICATIONS"/>
<node id="FREERTOS 20"/>
<node id="AN OPEN-SOURCE PRIORITY-BASED PREEMPTIVE RTOS"/>
<node id="TASKS"/>
<node id="DATE"/>
<node id="6 JUNE 2024"/>
<node id="INTERRUPT SOURCES"/>
<node id="LEVEL CHANGE OF THE INTERRUPT LINE"/>
<node id="EDGE-TRIGGERED INTERRUPT"/>
<node id="LOGIC LEVEL ITSELF"/>
<node id="LEVEL-TRIGGERED INTERRUPT"/>
<node id="NESTED INTERRUPTS"/>
<node id="PREEMPTION OF A LOW-LEVEL INTERRUPT BY A HIGH-LEVEL INTERRUPT"/>
<node id="TRANSITION"/>
<node id="DIFFERENT INTERRUPT LEVELS"/>
<node id="THE RECEIVING SIDE OF THE INTERRUPT TO CLEAR THE SOURCE OFTEN THROUGH ACCESSING APPROPRIATE HW REGISTERS"/>
<node id="THE FORMER"/>
<node id="UNIDIRECTIONAL NOTIFICATION WITHOUT CONFIRMATION"/>
<node id="ASYNCHRONOUS EVENTS"/>
<node id="THE NORMAL PROGRAM ORDER EXECUTION"/>
<node id="A SWITCH TO A DIFFERENT CONTEXT TO HANDLE THE EVENT"/>
<node id="A PROCESSOR"/>
<node id="VECTORED INTERRUPTS"/>
<node id="EACH INTERRUPT"/>
<node id="A SPECIFIC INTERRUPT SERVICE ROUTINE (ISR)"/>
<node id="AN INTERRUPT VECTOR TABLE"/>
<node id="FAST INTERRUPT RESPONSE"/>
<node id="INCREASED CODE SIZE"/>
<node id="INTERRUPT VECTORING"/>
<node id="IMPROVE INTERRUPT LATENCIES"/>
<node id="NON-VECTORED OR DIRECT INTERRUPTS"/>
<node id="A SHARED ISR"/>
<node id="THE LATTER APPROACH"/>
<node id="CODE SIZE OFF FOR A SLOWER INTERRUPT RESPONSE"/>
<node id="THE OVERHEAD OF RESOLVING THE INTERRUPTION CAUSE AND JUMPING TO THE CORRECT ISR"/>
<node id="EXPLICIT INSTRUCTIONS"/>
<node id="THE INTERRUPT TABLE"/>
<node id="MUCH MORE COMPACT"/>
<node id="MULTIPLE SOURCES"/>
<node id="INTERRUPT LATENCY IN A SYSTEM"/>
<node id="UNDERLYING HW"/>
<node id="SCHEDULER OR OS"/>
<node id="APPLICATION RUNNING ON TOP"/>
<node id="MINIMIZING THE LATENCY IMPOSED BY THE HW"/>
<node id="ITS HW-CONTRIBUTED PART"/>
<node id="RESTORING THE INTERRUPT CONTEXT AND THE REGULAR INTERRUPT LATENCY"/>
<node id="THIS BREAKDOWN"/>
<node id="THE TIME IT TAKES FROM AN INTERRUPT EDGE ARRIVING AT THE HW TO THE EXECUTION OF THE FIRST INSTRUCTION OF THE CORRESPONDING INTERRUPT HANDLER ROUTINE"/>
<node id="INTERRUPT EDGE"/>
<node id="THE HW"/>
<node id="HW"/>
<node id="THE INTERRUPT CONTROLLER"/>
<node id="NUMBER OF CYCLES IT TAKES FOR AN INTERRUPT TO ARRIVE AT THE INTERRUPT CONTROLLER INPUT TO THE FIRST INSTRUCTION OF AN INTERRUPT HANDLER THAT ALLOWS THE CALLING OF A C-FUNCTION"/>
<node id="TO MAKE A FAIR COMPARISON BETWEEN SW-BASED AND MORE HW-ORIENTED INTERRUPT SOLUTIONS"/>
<node id="WHAT EXACTLY CONSTITUTES THE FIRST INSTRUCTION OF THE INTERRUPT HANDLER"/>
<node id="EACH HW CONFIGURATION"/>
<node id="A HANDWRITTEN OPTIMIZED INTERRUPT HANDLER"/>
<node id="HANDWRITTEN OPTIMIZED INTERRUPT HANDLER"/>
<node id="ALL REQUIRED GENERAL-PURPOSE AND MACHINE-SPECIFIC REGISTERS FOR NESTING INTERRUPTS"/>
<node id="THE FIRST INSTRUCTION"/>
<node id="THE ONE AFTER ALL NECESSARY INTERRUPT CONTEXT HAS BEEN SAVED ON THE STACK TO BE ABLE TO CALL A FUNCTION"/>
<node id="WHAT EXACTLY ENTAILS A FUNCTION CALL"/>
<node id="THE USED APPLICATION BINARY INTERFACE (ABI)"/>
<node id="ITS CALLING CONVENTION"/>
<node id="INTERRUPT HANDLER AND INTERRUPT CONTEXT SAVING CODE"/>
<node id="TRUE"/>
<node id="SOME OF THE CONTEXT SAVING CODE"/>
<node id="REDUNDANT"/>
<node id="THE ACTIVE INTERRUPT HANDLERS CONTEXT"/>
<node id="RESTORED ON INTERRUPT RETURN"/>
<node id="IMMEDIATELY SAVED AGAIN"/>
<node id="THE NEXT PENDING INTERRUPT FIRING"/>
<node id="RESTORING THE PRE-INTERRUPT CONTEXT"/>
<node id="SW FOR THE NESTED INTERRUPT CASE"/>
<node id="CONTEXT SWITCHING TIME"/>
<node id="THE RESPONSIVENESS OF THE ARCHITECTURE IN SWAPPING FROM ONE EXECUTION CONTEXT TO ANOTHER"/>
<node id="THE EXECUTION CONTEXT"/>
<node id="THE OS BEING USED"/>
<node id="THE STATE OF THE ARCHITECTURAL REGISTERS OF THE ISA"/>
<node id="THE CHOSEN ABI"/>
<node id="PREEMPTION"/>
<node id="AN EVENT"/>
<node id="AN INTERRUPT REQUEST"/>
<node id="A CURRENT TASK"/>
<node id="PURPOSE OF PREEMPTION"/>
<node id="RESUMING ITS EXECUTION LATER"/>
<node id="THE SIMPLEST CASE FOR PREEMPTION"/>
<node id="NON-NESTED INTERRUPT HANDLERS"/>
<node id="GLOBALLY DURING THE EXECUTION OF AN ISR"/>
<node id="A MORE COMPLEX CASE FOR PREEMPTION"/>
<node id="NESTED INTERRUPT HANDLERS"/>
<node id="THE CASE OF MULTIPLE INTERRUPTS AT A TIME"/>
<node id="THIS SITUATION"/>
<node id="PENDING INTERRUPTS TO BE SERVICED IN SEQUENCE ACCORDING TO INCREASING PRIORITY"/>
<node id="LEVELPRIORITY ARBITRATION"/>
<node id="SW-DRIVEN"/>
<node id="PRIORITY SIMPLESTANDARD INTERRUPT HANDLERS"/>
<node id="HIGHEST PRIORITY INTERRUPT IDENTIFICATION CODE"/>
<node id="NOT EXECUTED"/>
<node id="LEVELPRIORITY ARBITRATION LOGIC"/>
<node id="INTERRUPT CONTROLLER"/>
<node id="HIGHEST LEVELPRIORITY INTERRUPT"/>
<node id="PENDING BUT DISABLED"/>
<node id="CORE"/>
<node id="LEVELPRIORITY INTERRUPT SCHEME"/>
<node id="ADDITIONAL MASKING OF INCOMING INTERRUPTS OF EQUAL OR LOWER LEVELPRIORITY THAN THE EXECUTING ISR"/>
<node id="ADDITIONAL MASKING OF INCOMING INTERRUPTS SOMETIMES LARGER THAN A CONFIGURABLE LEVELPRIORITY THRESHOLD"/>
<node id="THIS SCENARIO"/>
<node id="REAL-TIME AND COMPLEX EMBEDDED SYSTEMS"/>
<node id="SEQUENTIALLY"/>
<node id="ATTEMPTS TO HANDLE A MORE COMPLEX INTERRUPT SCHEME"/>
<node id="SW EMULATION"/>
<node id="UNTENABLE INTERRUPT LATENCIES"/>
<node id="A HIGH-PRIORITY INTERRUPT"/>
<node id="A LOWER-PRIORITY INTERRUPT TO FINISH"/>
<node id="GLOBALLY ENABLED"/>
<node id="THE SCOPE OF AN EXECUTING ISR"/>
<node id="GLOBAL INTERRUPTS"/>
<node id="DISABLED WHENEVER AN INTERRUPT HANDLER IS ENTERED"/>
<node id="THE ISR"/>
<node id="CARE DESIGNED TO ENSURE THEY ARE REENTRANT"/>
<node id="THE NESTING"/>
<node id="HIGHER PRIORITY INTERRUPTS TO PREEMPT A CURRENT LOWER PRIORITY ISR EXECUTING"/>
<node id="REDUNDANT INTERRUPT CONTEXT"/>
<node id="BACK-TO-BACK INTERRUPTS"/>
<node id="INTERRUPTS THAT NEED TO BE SERVED SEQUENTIALLY"/>
<node id="WHENEVER THERE ARE MULTIPLE INTERRUPTS PENDING"/>
<node id="THE TRANSITION FROM ONE INTERRUPT TO THE NEXT ONE"/>
<node id="A REDUNDANT SEQUENCE OF CONTEXT RESTORES AND CONTEXT SAVES"/>
<node id="REDUNDANT CONTEXT RESTORE SEQUENCES"/>
<node id="HIGHER INTERRUPT LOADS"/>
<node id="REDUNDANT CONTEXT RESTORE"/>
<node id="UNWANTED ADDITIONAL INTERRUPT LATENCY"/>
<node id="NON-NESTED OR NESTED HORIZONTAL INTERRUPTS"/>
<node id="TWO NON-PREEMPTIVE INTERRUPTS"/>
<node id="TWO INTERRUPTS WITH SAME LEVEL BUT DIFFERENT PRIORITIES"/>
<node id="TAIL-CHAINING"/>
<node id="OPTIMIZE IT"/>
<node id="INTERRUPT CONTEXT RESTORE AND STORE SEQUENCE BETWEEN BACK-TO-BACK INTERRUPTS"/>
<node id="THE REDUNDANT CONTEXT RESTORING SEQUENCES"/>
<node id="THE FULL INTERRUPT EXIT CODE SEQUENCE"/>
<node id="REDUNDANT CONTEXT RESTORE WITH NON-NESTED INTERRUPTS"/>
<node id="CHAINING TWO BACK-TO-BACK INTERRUPTS"/>
<node id="BYPASSING THE SUPERFLUOUS RESTORESAVE OPERATION"/>
<node id="SECTION III-D"/>
<node id="THE OPTIMIZATIONS IMPLEMENTED IN THIS WORK TO ADDRESS THIS SCENARIO"/>
<node id="THE PRIVILEGED SPECIFICATION 14"/>
<node id="A SIMPLE INTERRUPT SCHEME"/>
<node id="A SET OF TIMER AND INTER-PROCESSOR INTERRUPTS"/>
<node id="THE RISC-V ECOSYSTEM"/>
<node id="PENDING AND ENABLED INTERRUPTS"/>
<node id="A THRESHOLD VALUE REPRESENTING AN INTERRUPT LEVEL"/>
<node id="THRESHOLD VALUE"/>
<node id="A CSR"/>
<node id="COMPARED TO STANDARD RISC-V PRIVILEGED SPECIFICATIONS"/>
<node id="PLATFORM-LEVEL INTERRUPT CONTROLLER SPECIFICATION"/>
<node id="A FIXED PRIORITY INTERRUPT SCHEME"/>
<node id="16 PREDEFINED OR RESERVED INTERRUPTS"/>
<node id="16 IMPLEMENTATION-DEFINED INTERRUPTS"/>
<node id="OPTIONALLY VECTORED"/>
<node id="THE CLINT"/>
<node id="PRIORITIZATION OF INTERRUPTS BASED ON PRIVILEGE MODE"/>
<node id="THE INFLEXIBLE INTERRUPT SCHEME OF THE CLINT-MODE"/>
<node id="MUCH MORE WORK TO BE DONE IN MANAGING INTERRUPT MASK (SOMEIRQMASK) AND OTHER MACHINE STATE"/>
<node id="INTERRUPTS WITH LOWER PRIORITY THAN THE CURRENT INTERRUPT RUNNING"/>
<node id="IN CLINT-MODE WHEN GLOBAL INTERRUPTS ARE RE-ENABLED"/>
<node id="FINE-GRAINED CONTROL OVER INTERRUPT PRIORITIZATION"/>
<node id="PLIC 22"/>
<node id="CLINT"/>
<node id="NUMBER OF CUSTOM INTERRUPTS"/>
<node id="ACTIVE INTERRUPT HANDLER"/>
<node id="IRQ2"/>
<node id="IRQ1"/>
<node id="PENDING"/>
<node id="PRIVILEGE MODE (VERTICAL INTERRUPTS)"/>
<node id="INTERRUPT LEVEL WHEN THE PRIVILEGE MODE IS THE SAME (HORIZONTAL INTERRUPTS)"/>
<node id="NUMBER OF INTERRUPTS"/>
<node id="FLEXIBLE (AT DESIGN TIME)"/>
<node id="ONE OR MORE TARGETS"/>
<node id="INTERRUPTS THAT ARE ASSIGNED A HIGHER LEVEL"/>
<node id="LOWER-LEVEL INTERRUPTS"/>
<node id="A PRIORITY"/>
<node id="EACH TARGET"/>
<node id="A THRESHOLD"/>
<node id="BELOW THE THRESHOLD"/>
<node id="INTERRUPT SELECTION"/>
<node id="THE CLIC IN HW"/>
<node id="THE HIGHEST LEVEL, HIGHEST PRIORITY PENDING INTERRUPT TO THE CORES INTERFACE"/>
<node id="INTERRUPT PRIORITY"/>
<node id="TIE-BREAKER"/>
<node id="THE CASE OF MULTIPLE INTERRUPTS PENDING WITH THE SAME LEVEL"/>
<node id="SELECTING THE INTERRUPT WITH MAXIMUM LEVEL AND PRIORITY"/>
<node id="THREE BINARY TREES"/>
<node id="ENABLED INTERRUPTS AND THEIR LEVEL AND PRIORITY INFORMATION"/>
<node id="PRIORITIZATION LOGIC"/>
<node id="BINARY ARBITRATION TREE"/>
<node id="HIGHEST-LEVEL INTERRUPT"/>
<node id="A LEVEL"/>
<node id="THE PRIORITIES"/>
<node id="CONCURRENT PENDING INTERRUPTS TO BE TAKEN IN THE ORDER PREFERRED BY THE PROGRAMMER"/>
<node id="THE LEVEL INFORMATION"/>
<node id="PRE-EMPTION OF SAME-PRIVILEGE LEVEL INTERRUPTS"/>
<node id="SAME-PRIVILEGE LEVEL INTERRUPTS"/>
<node id="HORIZONTAL INTERRUPTS"/>
<node id="THIS SCHEME"/>
<node id="INTERRUPTS TO BE DIVIDED ACCORDING TO THEIR PRIORITIES ON THE PLIC-LEVEL"/>
<node id="SOME FLEXIBILITY IN TERMS OF PRIORITIZATION"/>
<node id="THE FLEXIBILITY PROBLEM ON THE CORE LOCAL-LEVEL"/>
<node id="CLIC 15"/>
<node id="THESE LIMITATIONS"/>
<node id="INTERRUPTS TO BE PRIORITIZED"/>
<node id="SO-CALLED LEVELS AND PRIORITIES"/>
<node id="MULTIPLE HORIZONTAL INTERRUPTS"/>
<node id="EQUAL LEVELS AND PRIORITIES"/>
<node id="THE CASE WHERE MULTIPLE HORIZONTAL INTERRUPTS HAVE EQUAL LEVELS AND PRIORITIES"/>
<node id="THE CLIC SELECTING THE HIGHEST NUMBERED INTERRUPT 15"/>
<node id="INTERRUPT 15"/>
<node id="AN ARBITRARY ASSIGNMENT"/>
<node id="DECIDED AT DESIGN TIME"/>
<node id="THIS FEATURE"/>
<node id="RTOSS THAT ONLY WANT TO DISABLE A SUBSET OF ALL INTERRUPTS DURING CRITICAL SECTIONS"/>
<node id="ONLY A SUBSET OF INTERRUPTS"/>
<node id="DISABLED"/>
<node id="INTERRUPTS THAT DO NOT INTERFERE WITH THE DATA ACCESSED IN SUCH A CRITICAL SECTION"/>
<node id="STILL FIRE"/>
<node id="PRIV1"/>
<node id="L1"/>
<node id="P1"/>
<node id="PRIV2"/>
<node id="L2"/>
<node id="P2"/>
<node id="IRQ1 LEVEL"/>
<node id="INTERRUPT THRESHOLD"/>
<node id="IRQ2 LEVEL"/>
<node id="INTERRUPTS FIRED FROM DIFFERENT PRIVILEGE MODES"/>
<node id="VERTICAL INTERRUPTS"/>
<node id="INTERRUPTS FIRED FROM THE SAME PRIVILEGE MODE"/>
<node id="PREEMPTION CONDITIONS OF TWO NESTED INTERRUPTS IRQ2 AND IRQ1"/>
<node id="PREEMPTION CONDITIONS"/>
<node id="CLIC SPECIFICATION"/>
<node id="THE CLIC SPECIFICATION"/>
<node id="THE CASE OF REDUNDANT CONTEXT RESTORE"/>
<node id="XNXTI"/>
<node id="A CSR SHORT FOR NEXT INTERRUPT HANDLER ADDRESS"/>
<node id="AN INTERRUPT-ENABLE CSR"/>
<node id="NON-VECTORED INTERRUPTS"/>
<node id="READING FROM THIS CSR"/>
<node id="TO FAST-TRACK INTERRUPTS THAT ARRIVE LATE"/>
<node id="TO AVOID REDUNDANT CONTEXT SAVERESTORE"/>
<node id="REDUNDANT CONTEXT SAVERESTORE"/>
<node id="RUNNING THROUGH PENDING INTERRUPTS BACK-TO-BACK"/>
<node id="AN ACTIVE HANDLER"/>
<node id="ARCHITECTURE"/>
<node id="HW TO STORE ENOUGH INFORMATION"/>
<node id="ENOUGH INFORMATION"/>
<node id="RESUME OPERATION CORRECTLY AFTER RETURNING FROM THE AFOREMENTIONED CONTEXT"/>
<node id="CONTROLLING THE AMOUNT OF STATE THAT NEEDS TO BE PRESERVED TO ENTER AND LEAVE AN INTERRUPT CONTEXT"/>
<node id="INCREASING THE BANDWIDTH AND DECREASING THE LATENCY TO MEMORY"/>
<node id="RELYING ON LATENCY-HIDING TECHNIQUES THAT DEFER THE EFFECTIVE SAVING OF THE STATE TO A LATER POINT IN TIME"/>
<node id="ARCHITECTURAL FEATURES AND HWSW CODESIGN OF CV32RT"/>
<node id="TYPICAL CASE SCENARIOS"/>
<node id="THE BACKGROUND-SAVING MECHANISM"/>
<node id="THE STACK POINTER"/>
<node id="THE BANK-SWITCHED CONTENTS IN MEMORY"/>
<node id="THE EXECUTION OF THE CORE"/>
<node id="IN PARALLEL"/>
<node id="2"/>
<node id="AN OVERVIEW OF THE DESIGN"/>
<node id="INCOMING INTERRUPTS"/>
<node id="A GATEWAY MODULE"/>
<node id="THERE IS A PENDING AND ENABLED REQUEST FOR EACH INTERRUPT SOURCE I (IRQ I)"/>
<node id="THE GATEWAY"/>
<node id="PROGRAMMABLE CONFIGURATION INFORMATION"/>
<node id="EACH INTERRUPT LINE"/>
<node id="LEVEL"/>
<node id="PRIORITY"/>
<node id="ENABLE STATUS"/>
<node id="SENSITIVITY (LEVELEDGE)"/>
<node id="THE INTERRUPT PRIORITIZATION MODULE"/>
<node id="THE TREE FROM LEAVES TO THE ROOT"/>
<node id="THE SOUGHT-AFTER MAXIMUM LEVEL AND PRIORITY INTERRUPT"/>
<node id="EACH TREE"/>
<node id="LOW OVERHEAD IN TERMS OF AREA AND DELAY"/>
<node id="OVERHEAD"/>
<node id="O(N) AND O(LOG(N)) RESPECTIVELY"/>
<node id="THE INTERRUPT"/>
<node id="THE CORE"/>
<node id="A HANDSHAKE-BASED INTERFACE"/>
<node id="THE ADDITIONAL KILL SIGNAL"/>
<node id="A HANDSHAKE TO RESTART"/>
<node id="A POTENTIALLY MORE IMPORTANT INTERRUPT CAN BE PRESENTED TO THE CORE"/>
<node id="N 4096 LOCAL INTERRUPT SOURCES"/>
<node id="ADDITIONAL PIPELINE STAGES"/>
<node id="THE ARBITRATION TREE"/>
<node id="RELAX TIMING"/>
<node id="OUR VERSION OF THE CLIC"/>
<node id="SHV"/>
<node id="THE XNXTI CSR"/>
<node id="THE CLIC"/>
<node id="THIS WITH THE LEVELPRIORITY SCHEME"/>
<node id="BY MOVING THE INTERRUPT STATE SAVING LOGIC IN HW"/>
<node id="EMRET TO HANDLE REDUNDANT INTERRUPT CONTEXT SEQUENCES"/>
<node id="A WRAPPER AROUND THE CORES RF"/>
<node id="THE RF BY AN ADDITIONAL READ PORT FOR THE BACKGROUND-SAVING MECHANISM"/>
<node id="REGISTERS FOR LATCHING THE ADDITIONAL PROCESSOR STATE"/>
<node id="THE ADDITIONAL PROCESSOR STATE"/>
<node id="PROPER INTERRUPT NESTING"/>
<node id="A NEW INTERRUPT AT THE CLIC"/>
<node id="THE INTERRUPT LEVEL EXCEEDS THE CONFIGURED THRESHOLD"/>
<node id="THE SAVING LOGIC FINITE STATE MACHINE (FSM)"/>
<node id="THE EXTENDED RF"/>
<node id="THE CORES STATE MACHINE"/>
<node id="THE PIPELINE"/>
<node id="THE PROGRAM COUNTER"/>
<node id="THE VECTOR TABLE ENTRY"/>
<node id="SAVING LOGIC"/>
<node id="BANK SWITCH"/>
<node id="INTERRUPT CONTEXT TO HAVE A FRESH SET OF REGISTERS"/>
<node id="OTHER BANK CONTENTS"/>
<node id="SEPARATE PORT TO THE MAIN MEMORY"/>
<node id="RF BANKS"/>
<node id="ON AN INTERRUPT"/>
<node id="STACK POINTER"/>
<node id="DURING A BANK SWITCH"/>
<node id="A DEDICATED ADDER BETWEEN THE TWO RFS"/>
<node id="THE RISC-V EMBEDDED AND INTEGER ABI"/>
<node id="THAT THE STACK POINTER POINTS BELOW THE LAST SAVED REGISTER ON THE STACK"/>
<node id="APPROPRIATELY TO MAINTAIN ABI INVARIANTS"/>
<node id="THE PROGRAM CODE RUNNING IN THE INTERRUPT HANDLER"/>
<node id="THE VALUES ON THE STACK"/>
<node id="THIS MECHANISM FOR LEAF-TYPE INTERRUPTS"/>
<node id="INTERACTIONS"/>
<node id="BACKGROUND-SAVING MECHANISM AND REGULAR LOADSTORE INSTRUCTIONS OF THE CORE"/>
<node id="INCORRECT EXECUTION"/>
<node id="LOAD INSTRUCTION"/>
<node id="ARCHITECTURAL REGISTER"/>
<node id="BACKGROUND-SAVING MECHANISM"/>
<node id="SAME REGISTER"/>
<node id="NO CONFLICT"/>
<node id="INTERRUPTS ARE INJECTED INTO THE PIPELINE"/>
<node id="WRITE-BACK STAGE OF THE CORE"/>
<node id="UPDATES TO THE RF"/>
<node id="RESOLVED"/>
<node id="BANK SWITCHING OPERATION"/>
<node id="AT THIS POINT"/>
<node id="CORRECTNESS OF THE EXECUTION"/>
<node id="INTERRUPT HANDLER"/>
<node id="ALREADY EXECUTING"/>
<node id="LOADS OR STORES"/>
<node id="STACK MEMORY REGIONS"/>
<node id="LOADS OR STORES ACCESSING STACK MEMORY REGIONS WHERE THE BACKGROUND-SAVING MECHANISM IS WRITING TO"/>
<node id="PROPERLY RESOLVED"/>
<node id="EXECUTION OF THE HANDLER"/>
<node id="IF THIS HAPPENS WHILE THE BACKGROUND-SAVING MECHANISM IS STILL AT WORK"/>
<node id="STALE DATA"/>
<node id="DATA THAT IS IMMEDIATELY OVERWRITTEN"/>
<node id="A STRAIGHTFORWARD SOLUTION"/>
<node id="TO STALL THE CORES PIPELINE WHILE THE BACKGROUND-SAVING MECHANISM IS AT WORK"/>
<node id="A LOAD SOON IN THE INTERRUPT HANDLER"/>
<node id="SPACE AVAILABLE"/>
<node id="INTERRUPT STATE WORD BY WORD"/>
<node id="ADDRESS OFFSET OF THE LAST WORD PUSHED OUT BY THE BACKGROUND-SAVING MECHANISM"/>
<node id="ANY INCOMING LOAD AND STORES"/>
<node id="ADDRESS OFFSET OF THE LAST WORD"/>
<node id="LOAD-STORE UNIT"/>
<node id="LOAD AND STORES THAT TRY TO ACCESS DATA THAT IS NOT YET PUSHED TO MEMORY"/>
<node id="THE CORES PIPELINE TO STALL"/>
<node id="THIS MECHANISM"/>
<node id="THE CORRECTNESS OF LOADS AND STORES ISSUED BY THE CORE"/>
<node id="A SYSTEM CALL HANDLER"/>
<node id="THE ECALL INSTRUCTION IN RISC-V"/>
<node id="USER-PROVIDED ARGUMENTS"/>
<node id="MOST"/>
<node id="GENERAL-PURPOSE REGISTERS"/>
<node id="SOME"/>
<node id="THE STACK"/>
<node id="SHORT INTERRUPT HANDLERS"/>
<node id="THE FULL INTERRUPT STATE HAS BEEN SAVED"/>
<node id="EACH OF THESE CASES"/>
<node id="THE STALLING LOGIC OUTLINED IN SECTION III-C3"/>
<node id="HIGHER INTERRUPT LATENCIES"/>
<node id="SOME REGISTER VALUES"/>
<node id="BECAUSE THEY MIGHT NOT HAVE REACHED THE LOAD-STORE UNIT YET"/>
<node id="THE APPROACH"/>
<node id="HW COMPLEXITY"/>
<node id="A DYNAMIC ADDRESS LOOKUP INTO A QUEUE-LIKE BUFFER"/>
<node id="AN SW-BASED SOLUTION"/>
<node id="ANY KIND OF STALLING"/>
<node id="THE PIPELINE STALLING LOGIC"/>
<node id="ORDERING THE LOADS TO ACCESS THE ALREADY STORED INTERRUPT STATE FIRST"/>
<node id="AN ANALYSIS OF THE FUNCTIONAL IMPROVEMENTS"/>
<node id="THE CV32S RF"/>
<node id="ADDITIONAL LOGIC FOR THE BACKGROUND-SAVING MECHANISM"/>
<node id="PARTS OF THE OLD MEMORY BANK (THE INTERRUPT CONTEXT)"/>
<node id="THE CORES STACK LOCATION"/>
<node id="EXECUTION"/>
<node id="THE NEW BANK"/>
<node id="THIS DESIGN"/>
<node id="A DEDICATED MEMORY PORT FOR THE BACKGROUND-SAVING MECHANISM"/>
<node id="THE MEMORY PORT"/>
<node id="THE PORT FROM THE LOAD-STORE UNIT"/>
<node id="THE GENERAL-PURPOSE REGISTERS X1, X2"/>
<node id="USE THE SAME ORDER TO LOAD WORDS BACK IN THE INTERRUPT HANDLER"/>
<node id="THE PROGRAMMER"/>
<node id="THAT TO ACHIEVE THE BEST POSSIBLE LATENCY"/>
<node id="PROGRAMMER"/>
<node id="COMPILER-SPECIFIC ATTRIBUTES TO WRITE INTERRUPT HANDLERS"/>
<node id="ATTRIBUTE((INTERRUPT))"/>
<node id="GCC"/>
<node id="COMPILER"/>
<node id="THE FACT THAT PROGRAMMER USES COMPILER-SPECIFIC ATTRIBUTES"/>
<node id="INTERRUPT HANDLER ROUTINES"/>
<node id="IN FIG."/>
<node id="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR THE BASIC CLINT-MODE"/>
<node id="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR THE BASELINE CLIC"/>
<node id="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR OUR FASTIRQ EXTENSION"/>
<node id="ROUTINES"/>
<node id="SAVING STATE FOR VECTORED NESTING INTERRUPTS"/>
<node id="(A) CLINT"/>
<node id="(B) CLIC"/>
<node id="(C) PROPOSED FASTIRQ EXTENSION"/>
<node id="RV32E AS A VARIANT OF RV32I"/>
<node id="RV32E"/>
<node id="16 REGISTERS"/>
<node id="RV32I"/>
<node id="32 REGISTERS"/>
<node id="REDUCING THE RF SIZE"/>
<node id="CONTEXT SWITCH TIMES"/>
<node id="THE SET OF CALLER-SAVE REGISTERS"/>
<node id="THE SAME"/>
<node id="WHEN USING THE EMBEDDED-APPLICATION BINARY INTERFACE (EABI)"/>
<node id="OUR IMPLEMENTATION"/>
<node id="THE CORE TO DYNAMICALLY SWITCH BETWEEN RV32I AND RV32E WITH FASTIRQ DEPENDING ON THE WORKLOAD"/>
<node id="INCREASED PRESSURE ON THE RF"/>
<node id="NOT ACCEPTABLE"/>
<node id="ONE"/>
<node id="ADDITIONAL REGISTERS FOR THE SEVEN CALLER-SAVE REGISTERS TO SAVE AREA"/>
<node id="DOUBLING THE RF SIZE FOR THE BANKING LOGIC"/>
<node id="ALTERNATIVE TO ADDING ADDITIONAL REGISTERS"/>
<node id="THE INTERRUPT STATE"/>
<node id="SIMPLY SWITCHING REGISTER BANKS"/>
<node id="TO DIFFERENTIATE BETWEEN A REGULAR RETURN FROM AN INTERRUPT HANDLER USING MRET"/>
<node id="MRET"/>
<node id="THE INTERRUPT STATE HAS BEEN RESTORED BY SW"/>
<node id="THIS INSTRUCTION"/>
<node id="THE SAME FUNCTION AS MRET"/>
<node id="SWITCHING REGISTER BANKS"/>
<node id="DIRECTLY CHECKING FOR OTHER INTERRUPTS PENDING ON THE SAME LEVEL BEFORE RESTORING THE EXECUTIONS INTERRUPT CONTEXT"/>
<node id="AN HW-ASSISTED SOLUTION"/>
<node id="SUCH A SCENARIO"/>
<node id="THE HW-ASSISTED SOLUTION"/>
<node id="THE XNXTI CSRS"/>
<node id="NUCLEIS ENHANCED CLIC (ECLIC) 18"/>
<node id="THE JUMP TO THE QUEUING INTERRUPT HANDLER IN THE XNXTI HW (JALXNXTI)"/>
<node id="NUCLEI SYSTEM TECHNOLOGY ECLIC 39"/>
<node id="TRADITIONAL XNXTI"/>
<node id="A NOVEL CSR FOR MACHINE PRIVILEGE MODE"/>
<node id="JALMNXTI 18"/>
<node id="THIS WORK IN SECTION IV"/>
<node id="THE CONTROL FLOW TO THE PENDING INTERRUPTS HANDLER"/>
<node id="SOME HW"/>
<node id="THIS CONCEPT OF REMOVING REDUNDANT CONTEXT RESTORES AS TAIL-CHAINING 23"/>
<node id="LATENCY"/>
<node id="INTERRUPT RESPONSE TIME"/>
<node id="MINIMIZED"/>
<node id="RE-ENABLING GLOBAL INTERRUPTS"/>
<node id="A HIGH-LEVEL INTERRUPT"/>
<node id="THE CURRENT RUNNING INTERRUPT HANDLER"/>
<node id="THIS COMBINATION OF LATENCY HIDING AND BACKGROUND SAVING"/>
<node id="THE CORE TO QUICKLY ENTER A FIRST-LEVEL INTERRUPT HANDLER"/>
<node id="MIE"/>
<node id="TO PREVENT THAT"/>
<node id="LOWER-PRIORITY INTERRUPTS"/>
<node id="THIS RETURN PATH"/>
<node id="HW BY ADDING AN ADDITIONAL WRITE PORT TO THE CORES RF"/>
<node id="EXITING AN INTERRUPT HANDLER"/>
<node id="LESS TIME-CRITICAL"/>
<node id="HOW QUICKLY AN EXTERNAL EVENT IS ADDRESSED"/>
<node id="CONTEXT SWITCHES"/>
<node id="OS-SPECIFIC PARTS"/>
<node id="HW-SPECIFIC PARTS"/>
<node id="THE OS PART"/>
<node id="ALL CONTRIBUTIONS TO THE CONTEXT SWITCH TIME THAT IS SPECIFIC TO THE OS ITSELF"/>
<node id="COMPUTING THE NEXT TASK TO BE SCHEDULED"/>
<node id="BOOKKEEPING OPERATIONS"/>
<node id="THE REMAINDER"/>
<node id="THE HW-DEPENDENT SAVING AND RESTORING OF THE STATE BELONGING TO THE NEW CONTEXT"/>
<node id="THE IDEA"/>
<node id="THE STATE SAVING AND RESTORING PART OF CONTEXT FIG"/>
<node id="SWITCHES"/>
<node id="INTERLEAVING THE LOADING OF A NEW STATE WITH THE AUTOMATIC SAVING HW"/>
<node id="THE PREVIOUS REGISTER STATE TO MEMORY IN THE BACKGROUND"/>
<node id="THE HW MECHANISM"/>
<node id="THE REGISTERS"/>
<node id="THEM IN THE BACKGROUND"/>
<node id="THE REST OF THE CONTEXT SWITCH ROUTINE"/>
<node id="THE INITIAL PART OF THE CONTEXT SWITCH ROUTINE"/>
<node id="FOR THAT"/>
<node id="ANY"/>
<node id="THE CURRENT RUNNING TASKS STATE TO MEMORY"/>
<node id="ADDITIONAL RISC-V EXTENSIONS"/>
<node id="MORE CONTEXT SWITCHING STATE"/>
<node id="CONTRARY TO THE GOALS OF FASTIRQ REGARDING LATENCIES"/>
<node id="ADDING MORE STATE TO FASTIRQ"/>
<node id="NO TECHNICAL LIMITATIONS"/>
<node id="THE RESULTING DESIGN"/>
<node id="A SIGNIFICANT INCREASE IN AREA AND POWER"/>
<node id="A DIRTY BIT"/>
<node id="KEEP THE FAST PATH COMPETITIVE"/>
<node id="CONTEXT LAZY SWITCHABLE"/>
<node id="A SPECIFIC EXTENSION"/>
<node id="REQUIRED"/>
<node id="THIS SECTION"/>
<node id="A FUNCTIONAL AND QUANTITATIVE EVALUATION"/>
<node id="THE VARIOUS FLAVORS OF THE CV32RT"/>
<node id="INTERRUPT LINES"/>
<node id="A HARDWIRED PRIORITIZATION SCHEME"/>
<node id="THE BASELINE CLIC"/>
<node id="THESE WEAKNESSES"/>
<node id="A LEVEL THRESHOLD REGISTER PER PRIVILEGE LEVEL (XINTTHRESH)"/>
<node id="THE SET OF ALLOWED HORIZONTAL INTERRUPTS"/>
<node id="THE LEVEL THRESHOLD REGISTER PER PRIVILEGE LEVEL (XINTTHRESH)"/>
<node id="THE SET OF ALLOWED HORIZONTAL INTERRUPTS TO THOSE WHOSE LEVEL EXCEEDS THE GIVEN VALUE IN THE REGISTER"/>
<node id="VECTORING"/>
<node id="SELECTIVELY ENABLED OR DISABLED PER INTERRUPT LINE"/>
<node id="THIS SOLUTION"/>
<node id="BOTH VECTORED AND NON-VECTORED INTERRUPTS"/>
<node id="THE REGULAR CLINT"/>
<node id="STORING AND RESTORING THE INTERRUPT CONTEXT"/>
<node id="SW"/>
<node id="THE OPTIONAL XNXTI EXTENSION"/>
<node id="MULTIPLE HORIZONTAL INTERRUPTS TO BE SERVICED IN SEQUENCE WITHOUT REDUNDANT CONTEXT-RESTORING OPERATIONS IN BETWEEN"/>
<node id="THE FIRST INTERRUPT"/>
<node id="THE FULL LATENCY COST"/>
<node id="THE INTERRUPT CONTEXT STORING PART ITSELF"/>
<node id="READING THE XNXTI CSR"/>
<node id="A POINTER TO THE VECTOR TABLE ENTRY FOR THE NEXT PENDING AND QUALIFYING INTERRUPT"/>
<node id="THE POINTER"/>
<node id="A DIRECT JUMP THERE"/>
<node id="THIS APPROACH"/>
<node id="THE LATENCY ADVANTAGE OF HW VECTORING"/>
<node id="AN SW EMULATION THEREOF"/>
<node id="THE DISCUSSED DIFFERENCES"/>
<node id="TABLE II"/>
<node id="MEASUREMENTS"/>
<node id="RUNNING RTL SIMULATIONS"/>
<node id="RTL SIMULATIONS"/>
<node id="DIFFERENT VERSIONS OF CV32RT"/>
<node id="THE MEMORY BANK WE ARE USING"/>
<node id="OTHER BUS MASTERS"/>
<node id="ADDITIONAL LATENCIES"/>
<node id="ON INTERRUPT LINES BETWEEN INTERRUPT SOURCES AND THE CLIC"/>
<node id="HW CONTRIBUTED INTERRUPT LATENCY"/>
<node id="HW CONTRIBUTED INTERRUPT LATENCY OF OUR FASTIRQ EXTENSION"/>
<node id="HW CONTRIBUTED INTERRUPT LATENCY OF OUR FASTIRQ EXTENSION TO THE CV32 AND CV32RT VARIATIONS"/>
<node id="CV32 AND CV32RT VARIATIONS"/>
<node id="STANDARD CLIC, XNXTI, JALXNXTI"/>
<node id="9"/>
<node id="THE AREA BREAKDOWN COMPARISON OF CV32RT WITH BASELINE CLIC (INCLUDING MNXTI AND JALMNXTI CSRS) AND FASTIRQ EXTENSIONS WITH 256 INPUT INTERRUPTS"/>
<node id="ALL CALLER-SAVE REGISTERS"/>
<node id="SAVED"/>
<node id="ALL CALLER-SAVE REGISTERS NEED TO BE SAVED"/>
<node id="THE GENERAL CASE"/>
<node id="THE SAVED GENERAL-PURPOSE REGISTERS"/>
<node id="THE RESPECTIVE ABI"/>
<node id="INTERRUPT HANDLER ROUTINES THAT SAVE THE INTERRUPT CONTEXT IN SW"/>
<node id="THE MINIMUM STATE"/>
<node id="THE COMPILER"/>
<node id="FULLY INLINE THE HANDLERS FUNCTION BODY"/>
<node id="SW-BASED MECHANISMS TO SAVE AND RESTORE INTERRUPT STATE"/>
<node id="THE HANDLER CODE"/>
<node id="FULLY INLINE THE HANDLER CODE"/>
<node id="SOME CALLER-SAVE REGISTERS"/>
<node id="THE INTERRUPT LATENCY IN THE OPTIMAL CASE"/>
<node id="ONLY ONE CALLER-SAVE REGISTER"/>
<node id="SAVING FOR SW-BASED INTERRUPT HANDLERS"/>
<node id="THE DESIGN AT THE INTERRUPT CONTROLLER INPUTS"/>
<node id="BOTH THE EABI AND REGULAR INTEGER ABI OF RISC-V"/>
<node id="THIS AMOUNT OF STATE"/>
<node id="FOR OUR FASTIRQ EXTENSION"/>
<node id="A PRIORI WHICH CALLER-SAVE REGISTERS NEED TO BE SAVED"/>
<node id="TABLE III"/>
<node id="THE MAIN TECHNIQUES FOR OPTIMIZING INTERRUPT CONTEXT AND TASK CONTEXT SAVE-RESTORE WITH NESTED AND NON-NESTED INTERRUPTS"/>
<node id="THE MAIN TECHNIQUES"/>
<node id="INDUSTRY AND ACADEMIA"/>
<node id="EMBEDDED AND REAL-TIME APPLICATION DOMAINS"/>
<node id="THE RESULTS"/>
<node id="SEVERAL DESIGNS"/>
<node id="THE INTERRUPT CONTEXT"/>
<node id="THE INTERRUPT CONTEXT DIRECTLY IN HW"/>
<node id="AUTOMATIC INTERRUPT CONTEXT SAVERESTORE"/>
<node id="SW HOUSEKEEPING OVERHEAD BEFORE AND AFTER HANDLING THE INTERRUPT ROUTINE"/>
<node id="ACCELERATION OF THE COMPLETE TASK CONTEXT SWITCH"/>
<node id="PRESENTED SOLUTIONS"/>
<node id="OPTIMIZING CONTEXT"/>
<node id="SAVERESTORE WITH HW AND SW COOPERATION"/>
<node id="A COHESIVE APPROACH TO ADDRESS BOTH INTERRUPT CONTEXT AND TASK CONTEXT SWITCH ACCELERATION"/>
<node id="EXISTING RISC-V-BASED APPROACHES"/>
<node id="THE GAP WITH WELL-ESTABLISHED INDUSTRY VENDORS"/>
<node id="INTERRUPT CONTEXT SAVERESTORE"/>
<node id="XNXTI AND JALXNXTI"/>
<node id="EVEN WORSE"/>
<node id="42 AND 35 CYCLES RESPECTIVELY"/>
<node id="ADDITIONAL INSTRUCTIONS IN THE CODE PATH BETWEEN THE HANDLER AND INTERRUPT EVENT"/>
<node id="PENDING INTERRUPTS"/>
<node id="THE RESPECTIVE HANDLERS"/>
<node id="A POINTER TO THE ADDRESS OF THE NEXT HANDLER"/>
<node id="A SMALL CODE SEQUENCE"/>
<node id="THE SMALL CODE SEQUENCE"/>
<node id="LOAD, JUMP, AND RETRY LOOP"/>
<node id="JALXNXTI"/>
<node id="THESE OPERATIONS INTO ONE INSTRUCTION"/>
<node id="FUSING THESE OPERATIONS INTO ONE INSTRUCTION"/>
<node id="SAVING NINE CYCLES"/>
<node id="ARM CORTEX-M4"/>
<node id="INTERRUPT LATENCY OF 12 CYCLES"/>
<node id="A SINGLE-CYCLE MEMORY 24"/>
<node id="THE ARM CORTEX-M4"/>
<node id="THE SAME TASK IN SIX CYCLES"/>
<node id="SINGLE-CYCLE MEMORY 24"/>
<node id="THE COST IN CLOCK CYCLES OF SUCH SEQUENCES"/>
<node id="BASELINE CLIC"/>
<node id="68 CYCLES WHEN USING INTEGER ABI"/>
<node id="50 CYCLES WHEN USING EMBEDDED ABI"/>
<node id="THE EMRET MECHANISM OF FASTIRQ"/>
<node id="SIMILARLY"/>
<node id="EIGHT CLOCK CYCLES"/>
<node id="THE CONTEXT SWITCH TIME IN NUMBER OF CLOCK CYCLES BETWEEN TWO FREERTOS DUMMY TASKS"/>
<node id="THE CONTEXT SWITCH TIME"/>
<node id="THE BASELINE CV32RT AGAINST CV32RTFASTIRQ"/>
<node id="AVERAGE CONTEXT SWITCH TIME"/>
<node id="FREERTOS"/>
<node id="TWO TASKS"/>
<node id="VARIOUS FLAVORS OF CV32RT"/>
<node id="ALL COMPILE TIME OPTIONS SUCH AS TRACING, STACK OVERFLOW SIGNALING, AND THE MORE GENERIC TASK SELECTION MECHANISM"/>
<node id="TURNED OFF"/>
<node id="MINIMIZE THE CONTEXT SWITCH CODE"/>
<node id="CONFIGURATIONS THAT DO NOT HAVE FIG"/>
<node id="GENERIC CORTEX-M4 CORE"/>
<node id="SINGLE-CYCLE ACCESS TO MEMORY"/>
<node id="16 CORE REGISTERS"/>
<node id="US TO SKIP AHEAD THE SAVING OF THE GENERAL-PURPOSE REGISTERS"/>
<node id="AN SW INTERRUPT"/>
<node id="THE SAVE SEQUENCE"/>
<node id="THE SW INTERRUPT"/>
<node id="THE FASTIRQ MECHANISM"/>
<node id="SAVING THE GENERAL-PURPOSE REGISTERS TO MEMORY"/>
<node id="USING THE I-EXTENSION"/>
<node id="31 CYCLES FOR A CONTEXT SWITCH"/>
<node id="USING THE E-EXTENSION"/>
<node id="16 CYCLES FOR A CONTEXT SWITCH"/>
<node id="NOT TO USE REGISTERS THAT ARE STILL BEING SAVED BY THE BACKGROUND-SAVING MECHANISM"/>
<node id="SAVING CYCLES FOR A CONTEXT SWITCH"/>
<node id="SOME SOCS SUCH AS THE STM32L476RG"/>
<node id="HIGHER LATENCIES"/>
<node id="MEMORY ACCESS STALLS AND OTHER IMPLEMENTATION CHOICES IN THE MEMORY SUBSYSTEM"/>
<node id="THE RISC-V E-EXTENSION"/>
<node id="THE AVAILABLE GENERAL-PURPOSE REGISTERS FROM 32 TO 16"/>
<node id="THE CONTEXT SWITCH STATE THAT NEEDS TO BE SAVED AND RESTORED"/>
<node id="RISC-V CLIC AREA"/>
<node id="VARYING NUMBERS OF INTERRUPT SOURCES"/>
<node id="REPORTS"/>
<node id="THE CLIC IMPLEMENTED"/>
<node id="THE PROPOSED"/>
<node id="DIFFERENT INTERRUPT SOURCES"/>
<node id="AREA OVERHEAD"/>
<node id="AREA OVERHEAD OF CV32RT"/>
<node id="THE TWO MAIN CONFIGURATIONS"/>
<node id="THE OVERHEAD OF FASTIRQ IN CV32RTFASTIRQ CORE"/>
<node id="A MINIMAL 10 AREA INCREASE"/>
<node id="THE ID STAGE"/>
<node id="THE DESIGN"/>
<node id="GF12LP TECHNOLOGY"/>
<node id="500 MHZ"/>
<node id="TT CORNER"/>
<node id="25 C"/>
<node id="0.8 V"/>
<node id="SUPER LOW VT STANDARD CELLS"/>
<node id="CV32E40PRT ID STAGE"/>
<node id="AREA BREAKDOWN WITH THE PROPOSED HW EXTENSIONS"/>
<node id="MORE THAN HALF OF THE RESOURCES"/>
<node id="THE CONFIGURATION REGISTERS REQUIRED TO CONTROL THE CLIC"/>
<node id="THE SIZE"/>
<node id="LINEARLY WITH THE NUMBER OF INPUT INTERRUPTS"/>
<node id="THE REMAINING AREA"/>
<node id="THE GATEWAY AND BINARY TREE ARBITRATION LOGIC AT THE CORE OF THE CLIC WORKING PRINCIPLE"/>
<node id="THE GATEWAY AND BINARY TREE ARBITRATION LOGIC"/>
<node id="SECTION III-B"/>
<node id="ADDITIONAL HOUSEKEEPING CONTROL LOGIC"/>
<node id="LINEARLY WITH THE NUMBER OF INTERRUPT SOURCES"/>
<node id="THE FRACTION OF THE DESIGN OCCUPIED BY THE ARBITRATION TREE"/>
<node id="WHEN INCREASING THE NUMBER OF SOURCES"/>
<node id="A LARGER AREA OVERHEAD COMPARED TO TRADITIONAL RISC-V CLINT 14"/>
<node id="THE GAIN IN FLEXIBILITY"/>
<node id="A BROADER APPLICATION SCOPE WITH TIME-CRITICAL SYSTEMS"/>
<node id="INSTRUCTION DECODE (ID) STAGE"/>
<node id="AN AREA OVERHEAD OF 21 COMPARED TO CV32RTCLIC"/>
<node id="OTHER HW BLOCKS OF THE CORE"/>
<node id="PRIMARILY UNAFFECTED"/>
<node id="THE HW BLOCK WHERE THE ADDITIONAL REGISTERS AND THE AUTOMATIC STACKING-UNSTACKING LOGIC ARE LOCALIZED"/>
<node id="A BREAKDOWN OF THE ID STAGE"/>
<node id="ADDITIONAL STORAGE SPACE FOR AUTOMATIC CONTEXT SAVE AND RESTORE IN HW"/>
<node id="AREA OF THE RF BY ABOUT 36 IN THE PROPOSED IMPLEMENTATION"/>
<node id="THE LOGIC FOR MANAGING THE SHADOW REGISTERS"/>
<node id="AN OVERHEAD OF 40 ON THE BASELINE ID STAGE CONTROLLER"/>
<node id="HW OVERHEAD"/>
<node id="NEGLIGIBLE"/>
<node id="ADDITIONAL EMRET INSTRUCTION"/>
<node id="SECTION IV"/>
<node id="INCREASED SIZE OF THE ID STAGE"/>
<node id="BENEFITS OF A SIMPLIFIED PROGRAMMING MODEL THAT MOVES SEVERAL SW OPERATIONS IN HW"/>
<node id="BENEFITS OF SIGNIFICANTLY LOWERED INTERRUPT LATENCY THAN STANDARD RISC-V"/>
<node id="CRITICAL PATH OF THE BASE CORE DESIGN"/>
<node id="TIME-CRITICAL SYSTEMS"/>
<node id="AREA EFFICIENCY"/>
<node id="SAFETY, SECURITY, AND RELIABILITY"/>
<node id="THE LEADING SOLUTIONS TO OPTIMIZE HANDLING ASYNCHRONOUS EVENTS IN STATE-OF-THE-ART EMBEDDED AND REAL-TIME MCUS"/>
<node id="EXISTING PLICS AND CLICS AS INTRODUCED IN SECTION II-C"/>
<node id="SOLUTIONS ACROSS VARIOUS PLATFORMS IN INDUSTRY AND ACADEMIA"/>
<node id="SOLUTIONS"/>
<node id="INTERRUPT CONTEXT SAVERESTORE TECHNIQUES"/>
<node id="CONTEXT SWITCH TECHNIQUES"/>
<node id="DEDICATED STRATEGIES TO OPTIMIZE REDUNDANT CONTEXT RESTORE WITH BACK-TO-BACK INTERRUPTS"/>
<node id="RETURN AUTHORIZED LICENSED USE"/>
<node id="THE OVERVIEW"/>
<node id="DEFINITION PRESENTED IN SECTION II-B"/>
<node id="DIFFERENT VARIANTS ADOPTED BY SOTA"/>
<node id="REFERENCES"/>
<node id="ARMS GENERIC INTERRUPT CONTROLLER (GIC)"/>
<node id="INCOMING ASYNCHRONOUS EVENTS"/>
<node id="NON-CRITICAL (IRQ) OR CRITICAL INTERRUPTS (FAST IRQ, OR FIQ)"/>
<node id="DEDICATED REGISTER BANK"/>
<node id="UP TO EIGHT REGISTERS"/>
<node id="MINIMIZE CONTEXT SWITCHING"/>
<node id="A REFERENCE EXAMPLE IN THE FIELD"/>
<node id="NESTED VECTORED INTERRUPT CONTROLLER (NVIC)"/>
<node id="STATE MACHINE 32"/>
<node id="CALLER-SAVE REGISTER STACKING IN THE BACKGROUND"/>
<node id="THE LINK REGISTER A VALUE (EXCRETURN)"/>
<node id="THE VALUE (EXCRETURN)"/>
<node id="THE CORE TO START UNWINDING THE STACK TO RETURN TO NORMAL PROGRAM EXECUTION"/>
<node id="INTERRUPT CONTROL UNIT (ICU) 33, 34, 35"/>
<node id="INFINEON AURIX MCU-CLASS TRICORE FAMILYS"/>
<node id="THE CONTEXT OF THE CALLING ROUTINE"/>
<node id="MEMORY AUTONOMOUSLY"/>
<node id="RESTORING THE CONTEXT"/>
<node id="THE RET INSTRUCTION"/>
<node id="THE RETURN JUMP 36"/>
<node id="27"/>
<node id="EXTENSIONS FOR THE RISC-V CLIC"/>
<node id="INTERRUPT HANDLING"/>
<node id="AUTOMATIC STACKING IN HW"/>
<node id="CORES HARVARD ARCHITECTURE"/>
<node id="SIMULTANEOUS DATA AND INSTRUCTION MEMORY ACCESS"/>
<node id="REGISTER BANKING"/>
<node id="A TECHNIQUE"/>
<node id="SEVERAL ARCHITECTURES"/>
<node id="TASKS CONTEXT"/>
<node id="REGISTER VALUES TO THE STACK"/>
<node id="ADDITIONAL AREA OVERHEAD IN THE DESIGN"/>
<node id="A TASKS CONTEXT SWITCH"/>
<node id="QUICKLY TRANSFERRING THE SUSPENDED CONTEXT TO THE DEDICATED REGISTER BANK"/>
<node id="ALREADY RESTORING THE NEXT TASK TO BE EXECUTED"/>
<node id="A SIMILAR APPROACH"/>
<node id="THE RENESAS M32C80 SERIES 30"/>
<node id="A DUAL REGISTER BANK"/>
<node id="QUICKLY SWAPPING THE CONTEXT WITHOUT SAVING OR RESTORING TO OR FROM THE STACK"/>
<node id="THE SECOND REGISTER BANK"/>
<node id="HIGH-SPEED INTERRUPTS"/>
<node id="THE AURIX FAMILY"/>
<node id="AN SW MANAGED SOLUTION"/>
<node id="THE SW MANAGED SOLUTION"/>
<node id="A SPECIFIC ORGANIZATION OF THE CONTEXT LAYOUT IN THE SYSTEM MEMORY"/>
<node id="THE CONTEXT LAYOUT IN THE SYSTEM MEMORY"/>
<node id="CONTEXT SAVE AREA (CSA) CHAINED IN A LINKED LIST FASHION"/>
<node id="A MORE COMPLEX APPROACH"/>
<node id="THE INTUITION THAT OFTEN THE CONTENT OF SOME REGISTER REMAINS UNTOUCHED AFTER A CONTEXT SWITCH"/>
<node id="HUANG ET AL."/>
<node id="28"/>
<node id="A VALID-BASED MECHANISM IN HW TO BLOCK CONTEXT SWITCH ON SELECTED REGISTERS"/>
<node id="VALID-BASED MECHANISM IN HW"/>
<node id="CONTEXT SWITCH ON SELECTED REGISTERS"/>
<node id="REGISTER MOVEMENT BY ALMOST 50"/>
<node id="SEMI-SHADOWING"/>
<node id="THE TOP (FLIP) AND BOTTOM (FLOP) HALVES OF THE RF AS RF COPIES"/>
<node id="LEVERAGING RISC-VS RV32E BASE INSTRUCTION SET"/>
<node id="THE LOWER 16 ARCHITECTURAL REGISTERS OF THE RF"/>
<node id="THE LOWER 16 ARCHITECTURAL REGISTERS"/>
<node id="THE RF"/>
<node id="THE EVALUATION IN 28"/>
<node id="HW IMPLEMENTATION"/>
<node id="AREA OVERHEAD ASSESSMENT"/>
<node id="CONTEXT SWITCHING OVERHEAD"/>
<node id="24"/>
<node id="THE DSPSTONE BENCHMARK"/>
<node id="THESE APPROACHES"/>
<node id="HW- AND SW-INDUCED LATENCIES WHEN HANDLING ASYNCHRONOUS EVENTS"/>
<node id="26"/>
<node id="A FULL HW SOLUTION BASED ON A HARDWARE SCHEDULING ENGINE (HSE)"/>
<node id="HARDWARE SCHEDULING ENGINE (HSE)"/>
<node id="INTERRUPTS TO RUNNING TASKS"/>
<node id="WITHOUT THE NEED FOR A SPECIALIZED INTERRUPT CONTROLLER"/>
<node id="LOWERING INTERRUPT LATENCY AND TASK CONTEXT SWITCHES DRAMATICALLY"/>
<node id="FLEXIBILITY"/>
<node id="ITS AREA OVERHEAD"/>
<node id="A HIGH NUMBER OF TASKS"/>
<node id="REPLICATING HARDWARE RESOURCES PER TASK"/>
<node id="ARCHITECTURES SUCH AS SUPERSCALAR CENTRAL PROCESSING UNITS (CPUS)"/>
<node id="HIDE LATENCY IN GRAPHIC PROCESSING UNITS (GPUS)"/>
<node id="SUCH WORKS"/>
<node id="RF CACHING"/>
<node id="REGISTER SHADOWING OR BANKING"/>
<node id="PERFORMANCE REASONS"/>
<node id="LOWER ACCESS LATENCY TO THE RF"/>
<node id="HIGHER THREAD-LEVEL PARALLELISM (TLP)"/>
<node id="SUCH TECHNIQUES"/>
<node id="THE SYSTEMS PRE-DICTABILITY"/>
<node id="RISC-V AIA WITHOUT APLIC"/>
<node id="MNXTI WITH THE XTOPI CSR"/>
<node id="XTOPI CSR"/>
<node id="THE HIGHEST-PRIORITY, PENDING, AND ENABLED INTERRUPT"/>
<node id="A SPECIFIC PRIVILEGE MODE"/>
<node id="BOTH LATE ARRIVAL AND REDUNDANT CONTEXT RESTORE MECHANISMS"/>
<node id="A COMBINATION OF THE BACKGROUND-SAVING WITH A REGISTER BANKING APPROACH"/>
<node id="TASK CONTEXT SWITCH TIMES IN FREERTOS TO 104 CLOCK CYCLES USING FASTIRQ"/>
<node id="20 FASTER THAN AN SW-ONLY APPROACH"/>
<node id="THE AUTHORS"/>
<node id="SOME RESEARCH DIRECTIONS FOR FUTURE WORK"/>
<node id="SOME RESEARCH DIRECTIONS"/>
<node id="ANALYZING FASTIRQS IMPACT ON TIMING CHANNELS"/>
<node id="ITS INTEGRATION WITH DIFFERENT RISC-V EXTENSIONS"/>
<node id="C. ROCHANGE, S. UHRIG, AND P. SAINRAT"/>
<node id="TIME-PREDICTABLE ARCHITECTURES (FOCUS COMPUTER ENGINEERING SERIES)"/>
<node id="WILEY"/>
<node id="IN 2014"/>
<node id="HOBOKEN, NJ, USA"/>
<node id="L. M. PINHO ET AL."/>
<node id="HIGH-PERFORMANCE AND TIME-PREDICTABLE EMBEDDED COMPUTING"/>
<node id="HTTP:EU.WILEY.COMWILEYCDA WILEYTITLEPRODUCTCD-1848215932.HTML"/>
<node id="RIVER"/>
<node id="WHARTON, TX, USA"/>
<node id="2018"/>
<node id="3 F. REGHENZANI, G. MASSARI, AND W. FORNACIARI"/>
<node id="THE REAL-TIME LINUX KERNEL: A SURVEY ON PREEMPT"/>
<node id="136"/>
<node id="FEB. 2019"/>
<node id="DOI"/>
<node id="10.11453297714"/>
<node id="10.11453419973"/>
<node id="136, JAN. 2021"/>
<node id="M. LIU, D. LIU, Y. WANG, M. WANG, AND Z. SHAO"/>
<node id="ON IMPROVING REAL-TIME INTERRUPT LATENCIES OF HYBRID OPERATING SYSTEMS WITH TWO-LEVEL HARDWARE INTERRUPTS"/>
<node id="IEEE TRANS"/>
<node id="P. MANTEGAZZA, E. L. DOZIO, AND S. PAPACHARALAMBOUS"/>
<node id="RTAI: REAL TIME APPLICATION INTERFACE"/>
<node id="6 K. RAMAMRITHAM AND J."/>
<node id="TEXT"/>
<node id="J. VALVANO"/>
<node id="INTRODUCTION TO EMBEDDED SYSTEMS"/>
<node id="PDF"/>
<node id="HTTP:WEB.ENGR.OREGONSTATE.EDU/TRAYLORECE473 PDFSMINIMIZEINTERRUPTRESPONSETIME.PDF"/>
<node id="CREATESPACE"/>
<node id="SCOTTS VALLEY, CA, USA"/>
<node id="AUG. 2016"/>
<node id="9 Y. HUANG, L. SHI, J. LI, Q. LI, AND C. J. XUE"/>
<node id="WCET-AWARE RE-SCHEDULING REGISTER ALLOCATION FOR REAL-TIME EMBEDDED SYSTEMS WITH CLUSTERED VLIW ARCHITECTURE"/>
<node id="IEEE TRANS."/>
<node id="VERY LARGE SCALE INTEGR"/>
<node id="X. ZHOU AND P. PETROV"/>
<node id="RAPID AND LOW-COST CONTEXT-SWITCH THROUGH EMBEDDED PROCESSOR CUSTOMIZATION FOR REAL-TIME AND CONTROL APPLICATIONS"/>
<node id="ASSOCIATION FOR COMPUTING MACHINERY"/>
<node id="NEW YORK, NY, USA"/>
<node id="2006"/>
<node id="352"/>
<node id="10.11451146909.1147001"/>
<node id="I. BEHNKE, L. PIRL, L. THAMSEN, R. DANICKI, A. POLZE, AND O. KAO"/>
<node id="INTERRUPTING REAL-TIME IOT TASKS: HOW BAD CAN IT BE TO CONNECT YOUR CRITICAL EMBEDDED SYSTEM TO THE INTERNET?"/>
<node id="12 F. REHM ET AL."/>
<node id="THE ROAD TOWARDS PREDICTABLE AUTOMOTIVE HIGH PERFORMANCE PLATFORMS"/>
<node id="TEST"/>
<node id="EUR"/>
<node id="13 K. ASANOVIC AND D. A. PATTERSON"/>
<node id="INSTRUCTION SETS SHOULD BE FREE: THE CASE FOR RISC-V, DEPT."/>
<node id="A. WATERMAN, Y. LEE, R. AVIZIENIS, D. A. PATTERSON, AND K. ASANOVIC"/>
<node id="THE RISC-V INSTRUCTION SET MANUAL VOLUME II: PRIVILEGED ARCHITECTURE VERSION 1.9"/>
<node id="DEPT."/>
<node id="EECS"/>
<node id="UNIV."/>
<node id="CALIFORNIA"/>
<node id="BERKELEY"/>
<node id="CA"/>
<node id="USA"/>
<node id="TECH"/>
<node id="ACCESSED"/>
<node id="JUN."/>
<node id="RISCV-FAST-INTERRUPT-BLOB"/>
<node id="HTTPS://GITHUB.COM/RISCV/RISCV-FAST-INTERRUPT-BLOB/MASTER/CLIC"/>
<node id="ADOC 16 M. GAUTSCHI ET AL."/>
<node id="NEAR-THRESHOLD RISC-V CORE WITH DSP EXTENSIONS FOR SCALABLE IOT ENDPOINT DEVICES"/>
<node id="17"/>
<node id="D. SCHIAVONE"/>
<node id="OPENHW GROUP"/>
<node id="CV32E40P USER MANUAL"/>
<node id="ORGANIZATION"/>
<node id="HTTPS"/>
<node id="AVAILABLE AT CV32E40P"/>
<node id="READTHEDOCS.IOEN"/>
<node id="18 NUCLEI SYSTEM TECHNOLOGY"/>
<node id="39 NUCLEI SYSTEM TECHNOLOGY CO. LTD."/>
<node id="ECLIC UNIT"/>
<node id="INTRODUCTION"/>
<node id="NUCLEI"/>
<node id="SPEC"/>
<node id="CONTROL PULP"/>
<node id="A RISC-V ON-CHIP PARALLEL POWER CONTROLLER"/>
<node id="MANY-CORE HPC PROCESSORS"/>
<node id="FPGA-BASED HARDWARE-IN-THE-LOOP POWER AND THERMAL EMULATION"/>
<node id="HTTPS:DOC.NUCLEISYS.COMNUCLEISPECISAINTRODUCTION.HTML"/>
<node id="PARALLEL PROGRAM."/>
<node id="FEB. 2024"/>
<node id="10.1007S10766-024-00761-4"/>
<node id="20"/>
<node id="R. BARRY"/>
<node id="REAL-TIME OPERATING SYSTEM FOR MICROCONTROLLERS"/>
<node id="REAL TIME ENGINEERS LTD."/>
<node id="ONLINE"/>
<node id="HTTPS://WWW.FREERTOS.ORG/INDEX.HTML"/>
<node id="AVAILABLE"/>
<node id="C.-M. LIN"/>
<node id="NESTED INTERRUPT ANALYSIS OF LOW COST AND HIGH PERFORMANCE EMBEDDED SYSTEMS USING GSPN FRAMEWORK"/>
<node id="IEICE TRANS."/>
<node id="HTTPS:GITHUB.COMRISCVRISCV-PLIC-SPECBLOBMASTERRISCV-PLIC-1.0.0.PDF"/>
<node id="J. YIU"/>
<node id="THE DEFINITIVE GUIDE TO ARM CORTEX-M3 CORTEX-M4 PROCESSORS"/>
<node id="3RD ED."/>
<node id="NEWNES"/>
<node id="BOSTON, MA, USA"/>
<node id="2013"/>
<node id="ARM"/>
<node id="CORTEX-M4"/>
<node id="DOCUMENTATION"/>
<node id="HTTPS://DEVELOPER.ARM.COM/DOCUMENTATION/1001660001"/>
<node id="ARM CORTEX-M PROCESSORS"/>
<node id="CIRCUITS MICROSYSTEMS (ICICM)"/>
<node id="OCT. 2021"/>
<node id="PP."/>
<node id="LI AND J. K. LEE"/>
<node id="PAGED REGISTER FILES"/>
<node id="EMBEDDED PROCESSORS"/>
<node id="29 R. BALAS AND L. BENINI"/>
<node id="RISC-V FOR REAL-TIME MCU SOFTWARE OPTIMIZATION AND MICROARCHITECTURAL GAP ANALYSIS"/>
<node id="30"/>
<node id="RENESAS"/>
<node id="HARDWARE MANUAL"/>
<node id="RENESAS MCU M16C"/>
<node id="HTTPS://WWW.RENESAS.COM/US/ENDOCUMENT/MAHM32C87-GROUP-M32C87-M32C87A-M32C87B-HARDWARE-MANUAL"/>
<node id="SIFIVE INC."/>
<node id="2021"/>
<node id="SIFIVE E21 CORE COMPLEX"/>
<node id="MANUAL"/>
<node id="HTTPS:SIFIVE.CDN.PRISMIC.IOSIFIVE7C22C2EC-8AF4-4B6C-A5FE-9327D91E7808E21CORECOMPLEXMANUAL21G1.PDF"/>
<node id="STMICROELECTRONICS"/>
<node id="MENTIONED"/>
<node id="STM32L5-SYSTEM-NESTEDVECTORED INTERRUPTCONTROLNVIC.PDF"/>
<node id="HTTPS://WWW.ST.COM/CONTENT/CCC/RESOURCE/TRAINING/TECHNICAL/PRODUCTTRAINING/GROUP16135D207346F4E83/STM32L5-SYSTEM-NESTEDVECTOREDINTERRUPTCONTROLNVICFILES/STM32L5-SYSTEM-NESTEDVECTOREDINTERRUPTCONTROLNVIC.PDF"/>
<node id="INFINEON TECHNOLOGIES AG"/>
<node id="POWERTRAIN MICROCONTROLLER"/>
<node id="FAST"/>
<node id="HC163TUE6HC16SESS7PRES1BW.PDF"/>
<node id="HTTPS://OLD.HOTCHIPS.ORG/WP-CONTENT/UPLOADS/HCARCHIVES/HC163TUE6HC16SESS7PRES1BW.PDF"/>
<node id="FILE"/>
<node id="HTTPS:HITEX.CO.UKFILEADMINUK-FILESDOWNLOADSSHIELDBUDDYTC27XDUMV2.2.PDF"/>
<node id="35"/>
<node id="TC27X D-STEP"/>
<node id="32-BIT SINGLE-CHIP MICROCONTROLLER"/>
<node id="TRICORE V1.6"/>
<node id="CORE ARCHITECTURE"/>
<node id="U.S. PATENT 7 434 222 B2"/>
<node id="TASK CONTEXT SWITCHING RTOS"/>
<node id="OCT. 2008"/>
<node id="H. ZENG AND K. GHOSE"/>
<node id="REGISTER FILE CACHING FOR ENERGY EFFICIENCY"/>
<node id="ISLPED PROC"/>
<node id="LOW POWER"/>
<node id="ELECTRON"/>
<node id="DESIGN"/>
<node id="OCT. 2006"/>
<node id="38 M. SADROSADATI ET AL."/>
<node id="HIGHLY CONCURRENT LATENCY-TOLERANT REGISTER FILES FOR GPUS"/>
<node id="ACM TRANS."/>
<node id="AUG. 4, 2023"/>
<node id="GRADUATE STUDENT MEMBER OF IEEE"/>
<node id="B.SC."/>
<node id="DEGREE"/>
<node id="THE DIGITAL CIRCUITS AND SYSTEMS GROUP OF PROF. BENINI"/>
<node id="HIS RESEARCH INTERESTS"/>
<node id="REAL-TIME COMPUTING"/>
<node id="COMPILERS"/>
<node id="OPERATING SYSTEMS"/>
<node id="POWER MANAGEMENT OF HPC PROCESSORS"/>
<node id="ENERGY-EFFICIENT PROCESSOR ARCHITECTURE"/>
<node id="THE B.SC."/>
<node id="FELLOW OF IEEE"/>
<node id="PH.D."/>
<node id="PHYSICAL ENGINEERING"/>
<node id="POLITECNICO DI TURINO"/>
<node id="TURIN"/>
<node id="ITALY"/>
<node id="ELECTRICAL ENGINEERING"/>
<node id="GRENOBLE INP-PHELMA"/>
<node id="GRENOBLE, FRANCE"/>
<node id="EPFL LAUSANNE"/>
<node id="LAUSANNE, SWITZERLAND"/>
<node id="2020"/>
<node id="STANFORD UNIVERSITY"/>
<node id="STANFORD, CA, USA"/>
<node id="1997"/>
<node id="DR. BENINI"/>
<node id="THE ACM"/>
<node id="THE ACADEMIA EUROPAEA"/>
<node id="MCCLUSKEY AWARD"/>
<node id="AWARD"/>
<edge source="1032 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="A JOURNAL VOLUME">
  <data key="d0">IS</data>
</edge>
<edge source="1034 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="VOL.">
  <data key="d0">IS</data>
</edge>
<edge source="IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="VOL.">
  <data key="d0">HAS VOLUME</data>
</edge>
<edge source="1038 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="VOL.">
  <data key="d0">IS</data>
</edge>
<edge source="1040 IEEE TRANSACTIONS" target="VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS">
  <data key="d0">IS ON</data>
</edge>
<edge source="1040 IEEE TRANSACTIONS" target="VOL.">
  <data key="d0">IS</data>
</edge>
<edge source="1042 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="VOL.">
  <data key="d0">IS</data>
</edge>
<edge source="1044 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="A JOURNAL">
  <data key="d0">IS</data>
</edge>
<edge source="1044 IEEE TRANSACTIONS ON VERY LARGE SCALE INTEGRATION (VLSI) SYSTEMS" target="VOL.">
  <data key="d0">HAS VOLUME</data>
</edge>
<edge source="PROCESSORS" target="OPEN RISC-V INSTRUCTION SET ARCHITECTURE (ISA)">
  <data key="d0">USE</data>
</edge>
<edge source="OPEN RISC-V INSTRUCTION SET ARCHITECTURE (ISA)" target="FINDING INCREASING ADOPTION">
  <data key="d0">IS</data>
</edge>
<edge source="OPEN RISC-V INSTRUCTION SET ARCHITECTURE (ISA)" target="EMBEDDED WORLD">
  <data key="d0">IS USED IN</data>
</edge>
<edge source="WE" target="A CLIC FOR THE CV32E40P">
  <data key="d0">IMPLEMENT</data>
</edge>
<edge source="WE" target="IT WITH FASTIRQ">
  <data key="d0">ENHANCE</data>
</edge>
<edge source="WE" target="CV32RT">
  <data key="d0">PROPOSE</data>
</edge>
<edge source="WE" target="CLIC INTERRUPT CONTROLLER IN CV32RTCLIC 15">
  <data key="d0">IMPLEMENT</data>
</edge>
<edge source="WE" target="FASTIRQ">
  <data key="d0">PRESENT</data>
</edge>
<edge source="WE" target="THE EXTENSION">
  <data key="d0">IMPLEMENT</data>
</edge>
<edge source="WE" target="CV32RT OUR ENHANCED CORE">
  <data key="d0">CALL</data>
</edge>
<edge source="WE" target="CV32RT WITHIN AN OPEN-SOURCE SYSTEM ON CHIP (SOC)">
  <data key="d0">INTEGRATE</data>
</edge>
<edge source="WE" target="CV32RT INTERRUPT HANDLING CAPABILITIES">
  <data key="d0">EVALUATE</data>
</edge>
<edge source="WE" target="HOW THE VARIOUS CV32RT VERSIONS PERFORM IN TERMS OF INTERRUPT LATENCY AND CONTEXT SWITCH TIMES">
  <data key="d0">SHOW</data>
</edge>
<edge source="WE" target="THE OVERHEAD THESE ADDITIONS INCUR IN TERMS OF AREA AND TIMING">
  <data key="d0">QUANTIFY</data>
</edge>
<edge source="WE" target="THE IMPLEMENTATION AVAILABLE UNDER A PERMISSIVE OPEN-SOURCE LICENSE">
  <data key="d0">MAKE</data>
</edge>
<edge source="WE" target="A FAST INTERRUPT EXTENSION (FASTIRQ)">
  <data key="d0">DESIGN</data>
</edge>
<edge source="WE" target="MINIMIZING THE LATENCY IMPOSED BY THE HW">
  <data key="d0">FOCUS ON</data>
</edge>
<edge source="WE" target="THE CORE LOCAL INTERRUPTOR (CLINT)">
  <data key="d0">REFER TO</data>
</edge>
<edge source="WE" target="INTERRUPT LATENCY AND CONTEXT SWITCH TIMES">
  <data key="d0">CAN IMPROVE</data>
</edge>
<edge source="WE" target="CONTROLLING THE AMOUNT OF STATE THAT NEEDS TO BE PRESERVED TO ENTER AND LEAVE AN INTERRUPT CONTEXT">
  <data key="d0">IMPROVE INTERRUPT LATENCY AND CONTEXT SWITCH TIMES BY</data>
</edge>
<edge source="WE" target="INCREASING THE BANDWIDTH AND DECREASING THE LATENCY TO MEMORY">
  <data key="d0">IMPROVE INTERRUPT LATENCY AND CONTEXT SWITCH TIMES BY</data>
</edge>
<edge source="WE" target="RELYING ON LATENCY-HIDING TECHNIQUES THAT DEFER THE EFFECTIVE SAVING OF THE STATE TO A LATER POINT IN TIME">
  <data key="d0">IMPROVE INTERRUPT LATENCY AND CONTEXT SWITCH TIMES BY</data>
</edge>
<edge source="WE" target="ARCHITECTURAL FEATURES AND HWSW CODESIGN OF CV32RT">
  <data key="d0">DETAIL</data>
</edge>
<edge source="WE" target="THE RF BY AN ADDITIONAL READ PORT FOR THE BACKGROUND-SAVING MECHANISM">
  <data key="d0">EXTEND</data>
</edge>
<edge source="WE" target="REGISTERS FOR LATCHING THE ADDITIONAL PROCESSOR STATE">
  <data key="d0">EXTEND</data>
</edge>
<edge source="WE" target="A DEDICATED ADDER BETWEEN THE TWO RFS">
  <data key="d0">HAVE</data>
</edge>
<edge source="WE" target="THIS MECHANISM FOR LEAF-TYPE INTERRUPTS">
  <data key="d0">COULD DO AWAY WITH</data>
</edge>
<edge source="WE" target="STALE DATA">
  <data key="d0">COULD READ</data>
</edge>
<edge source="WE" target="DATA THAT IS IMMEDIATELY OVERWRITTEN">
  <data key="d0">COULD WRITE</data>
</edge>
<edge source="WE" target="A LOAD SOON IN THE INTERRUPT HANDLER">
  <data key="d0">LIKELY WANT TO ISSUE</data>
</edge>
<edge source="WE" target="AN SW-BASED SOLUTION">
  <data key="d0">PROPOSE</data>
</edge>
<edge source="WE" target="THE PIPELINE STALLING LOGIC">
  <data key="d0">DO NOT NEED TO ENGAGE</data>
</edge>
<edge source="WE" target="AN ANALYSIS OF THE FUNCTIONAL IMPROVEMENTS">
  <data key="d0">GIVE</data>
</edge>
<edge source="WE" target="THE GENERAL-PURPOSE REGISTERS X1, X2">
  <data key="d0">PUSH OUT</data>
</edge>
<edge source="WE" target="USE THE SAME ORDER TO LOAD WORDS BACK IN THE INTERRUPT HANDLER">
  <data key="d0">NEED TO ENSURE</data>
</edge>
<edge source="WE" target="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR THE BASIC CLINT-MODE">
  <data key="d0">GIVE</data>
</edge>
<edge source="WE" target="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR THE BASELINE CLIC">
  <data key="d0">GIVE</data>
</edge>
<edge source="WE" target="AN OVERVIEW OF HOW NESTED INTERRUPT HANDLING CODE WORKS FOR OUR FASTIRQ EXTENSION">
  <data key="d0">GIVE</data>
</edge>
<edge source="WE" target="THIS SCENARIO">
  <data key="d0">ADDRESS</data>
</edge>
<edge source="WE" target="INTERRUPT LATENCY">
  <data key="d0">MINIMIZE</data>
</edge>
<edge source="WE" target="LATENCY">
  <data key="d0">HIDE</data>
</edge>
<edge source="WE" target="HOW QUICKLY AN EXTERNAL EVENT IS ADDRESSED">
  <data key="d0">CARE ABOUT</data>
</edge>
<edge source="WE" target="THE REST OF THE CONTEXT SWITCH ROUTINE">
  <data key="d0">CAN PROCEED WITH</data>
</edge>
<edge source="WE" target="THE CURRENT RUNNING TASKS STATE TO MEMORY">
  <data key="d0">WANT TO SAVE</data>
</edge>
<edge source="WE" target="MEASUREMENTS">
  <data key="d0">TAKE</data>
</edge>
<edge source="WE" target="HW CONTRIBUTED INTERRUPT LATENCY">
  <data key="d0">MEASURE</data>
</edge>
<edge source="WE" target="HW CONTRIBUTED INTERRUPT LATENCY OF OUR FASTIRQ EXTENSION">
  <data key="d0">MEASURE</data>
</edge>
<edge source="WE" target="HW CONTRIBUTED INTERRUPT LATENCY OF OUR FASTIRQ EXTENSION TO THE CV32 AND CV32RT VARIATIONS">
  <data key="d0">COMPARE</data>
</edge>
<edge source="WE" target="THE INTERRUPT LATENCY IN THE OPTIMAL CASE">
  <data key="d0">MEASURE</data>
</edge>
<edge source="WE" target="BOTH THE EABI AND REGULAR INTEGER ABI OF RISC-V">
  <data key="d0">EVALUATE</data>
</edge>
<edge source="WE" target="THE COST IN CLOCK CYCLES OF SUCH SEQUENCES">
  <data key="d0">SHOW</data>
</edge>
<edge source="WE" target="THE CONTEXT SWITCH TIME IN NUMBER OF CLOCK CYCLES BETWEEN TWO FREERTOS DUMMY TASKS">
  <data key="d0">SHOW</data>
</edge>
<edge source="WE" target="CONFIGURATIONS THAT DO NOT HAVE FIG">
  <data key="d0">LEFT OUT</data>
</edge>
<edge source="WE" target="EXISTING PLICS AND CLICS AS INTRODUCED IN SECTION II-C">
  <data key="d0">DIFFERENTIATE BETWEEN</data>
</edge>
<edge source="WE" target="THE LATTER">
  <data key="d0">FOCUS ON</data>
</edge>
<edge source="WE" target="SOLUTIONS ACROSS VARIOUS PLATFORMS IN INDUSTRY AND ACADEMIA">
  <data key="d0">DISCUSS</data>
</edge>
<edge source="WE" target="DIFFERENT VARIANTS ADOPTED BY SOTA">
  <data key="d0">PROVIDE REFERENCES TO</data>
</edge>
<edge source="WE" target="TASK CONTEXT SWITCH TIMES IN FREERTOS TO 104 CLOCK CYCLES USING FASTIRQ">
  <data key="d0">IMPROVE</data>
</edge>
<edge source="CV32E40P" target="AN INDUSTRIALLY SUPPORTED OPEN-SOURCE 32-BIT MICROCONTROLLER UNIT (MCU)-CLASS RISC-V CORE">
  <data key="d0">IS</data>
</edge>
<edge source="CV32E40P" target="AN INDUSTRIALLY SUPPORTED OPEN-SOURCE CORE">
  <data key="d0">IS</data>
</edge>
<edge source="FASTIRQ" target="A CUSTOM EXTENSION">
  <data key="d0">IS</data>
</edge>
<edge source="FASTIRQ" target="INTERRUPT LATENCY AS LOW AS SIX CYCLES">
  <data key="d0">PROVIDES</data>
</edge>
<edge source="FASTIRQ" target="THE EXTENSION PROPOSED IN THIS WORK">
  <data key="d0">IS</data>
</edge>
<edge source="FASTIRQ" target="CV32RTFASTIRQ">
  <data key="d0">IS ALSO KNOWN AS</data>
</edge>
<edge source="FASTIRQ" target="A FAST INTERRUPT EXTENSION">
  <data key="d0">IS</data>
</edge>
<edge source="FASTIRQ" target="RISC-V EMBEDDED SYSTEMS">
  <data key="d0">IS FOR</data>
</edge>
<edge source="FASTIRQ" target="INTERRUPT LATENCY">
  <data key="d0">REDUCES</data>
</edge>
<edge source="FASTIRQ" target="HIDING THE LATENCY THROUGH MEMORY BANKS">
  <data key="d0">REDUCES INTERRUPT LATENCY BY</data>
</edge>
<edge source="FASTIRQ" target="A BACKGROUND-SAVING MECHANISM">
  <data key="d0">REDUCES INTERRUPT LATENCY BY</data>
</edge>
<edge source="FASTIRQ" target="BY MOVING THE INTERRUPT STATE SAVING LOGIC IN HW">
  <data key="d0">IMPROVES UPON THAT</data>
</edge>
<edge source="FASTIRQ" target="EMRET TO HANDLE REDUNDANT INTERRUPT CONTEXT SEQUENCES">
  <data key="d0">ADDS</data>
</edge>
<edge source="FASTIRQ" target="A WRAPPER AROUND THE CORES RF">
  <data key="d0">IS</data>
</edge>
<edge source="FASTIRQ" target="US TO SKIP AHEAD THE SAVING OF THE GENERAL-PURPOSE REGISTERS">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="FASTIRQ" target="AN SW INTERRUPT">
  <data key="d0">TRIGGERS</data>
</edge>
<edge source="FASTIRQ" target="20 FASTER THAN AN SW-ONLY APPROACH">
  <data key="d0">IS</data>
</edge>
<edge source="CV32RT" target="A 32-BIT RISC-V CORE">
  <data key="d0">IS</data>
</edge>
<edge source="CV32RT" target="THE INTERRUPT HANDLING CAPABILITIES OF CV32E40P">
  <data key="d0">EXTENDS</data>
</edge>
<edge source="CV32RT" target="BEST-IN-CLASS INTERRUPT LATENCY">
  <data key="d0">ACHIEVES</data>
</edge>
<edge source="CV32RT" target="FAST CONTEXT SWITCHING">
  <data key="d0">ACHIEVES</data>
</edge>
<edge source="CV32RT" target="THE ROAD FOR RISC-V ARCHITECTURES IN TIME-CRITICAL SYSTEMS">
  <data key="d0">PAVES</data>
</edge>
<edge source="CV32RT" target="CV32 CORE AS THE BASELINE">
  <data key="d0">STARTS WITH</data>
</edge>
<edge source="CV32RT" target="CLINT INTERRUPT CONTROLLER WITH CLIC">
  <data key="d0">REPLACES</data>
</edge>
<edge source="CV32RT" target="FASTIRQ INTO THE CORE MICROARCHITECTURE">
  <data key="d0">INTRODUCES</data>
</edge>
<edge source="CV32RT" target="A 32-BIT, IN-ORDER, SINGLE-ISSUE CORE">
  <data key="d0">IS</data>
</edge>
<edge source="CV32RT" target="THE RISC-V CLIC FAST INTERRUPT CONTROLLER">
  <data key="d0">IS DESIGNED WITH</data>
</edge>
<edge source="CV32RT" target="THE FIRST FULLY OPEN-SOURCE RV32 CORE">
  <data key="d0">IS</data>
</edge>
<edge source="CV32RT" target="COMPETITIVE INTERRUPT-HANDLING FEATURES">
  <data key="d0">HAS</data>
</edge>
<edge source="CV32RT" target="FAST INTERRUPT AND CONTEXT SWITCHING">
  <data key="d0">ENABLES</data>
</edge>
<edge source="CV32RT" target="FAST INTERRUPT AND CONTEXT SWITCHING 1043 INSTRUCTION IN MACHINE MODE">
  <data key="d0">ENABLES</data>
</edge>
<edge source="CV32RT" target="CONTROLPULP">
  <data key="d0">IS PART OF</data>
</edge>
<edge source="FAST CONTEXT SWITCHING" target="ARCHITECTURES SUCH AS SUPERSCALAR CENTRAL PROCESSING UNITS (CPUS)">
  <data key="d0">IS OFTEN REQUIRED IN</data>
</edge>
<edge source="FAST CONTEXT SWITCHING" target="HIDE LATENCY IN GRAPHIC PROCESSING UNITS (GPUS)">
  <data key="d0">IS OFTEN REQUIRED TO</data>
</edge>
<edge source="FULL-SYSTEM PLATFORM" target="PROPOSED INTERRUPT EXTENSION">
  <data key="d0">IS USED TO DESIGN AND IMPLEMENT</data>
</edge>
<edge source="PROPOSED INTERRUPT EXTENSION" target="SECTION II-A">
  <data key="d0">IS DESCRIBED IN</data>
</edge>
<edge source="RELEVANT TARGET METRICS" target="SECTION II-B3">
  <data key="d0">ARE MOTIVATED AND EXPLAINED IN</data>
</edge>
<edge source="CURRENT STATUS OF INTERRUPT HANDLING IN RISC-V" target="SECTION II-C">
  <data key="d0">IS DESCRIBED IN</data>
</edge>
<edge source="CV32E40P CORE" target="CV32">
  <data key="d0">IS ABBREVIATED TO</data>
</edge>
<edge source="CV32E40P CORE" target="AN OPEN-SOURCE, INDUSTRY-GRADE, 32-BIT, IN-ORDER, FOUR-STAGE RISC-V CORE">
  <data key="d0">IS</data>
</edge>
<edge source="CV32E40P CORE" target="IMPLEMENTING OUR EXTENSIONS">
  <data key="d0">IS RELIED ON AS BASIS FOR</data>
</edge>
<edge source="CV32 CORE" target="CLINT INTERRUPT CONTROLLER">
  <data key="d0">HAS NATIVE</data>
</edge>
<edge source="CLIC" target="CV32RTCLIC">
  <data key="d0">IS ALSO KNOWN AS</data>
</edge>
<edge source="CLIC" target="THE PROPOSED">
  <data key="d0">IS IMPLEMENTED IN</data>
</edge>
<edge source="CV32RTCLIC" target="CLIC FAST INTERRUPT CONTROLLER">
  <data key="d0">IS</data>
</edge>
<edge source="CV32RTFASTIRQ" target="INTERRUPT LATENCY">
  <data key="d0">OPTIMIZES</data>
</edge>
<edge source="CV32RTFASTIRQ" target="THE NON-NESTED INTERRUPT CASE">
  <data key="d0">OPTIMIZES INTERRUPT LATENCY IN</data>
</edge>
<edge source="CV32RTFASTIRQ" target="BANK SWITCHING AND THE NESTED INTERRUPT CASE">
  <data key="d0">COMBINES</data>
</edge>
<edge source="CV32RTFASTIRQ" target="AN AUTOMATIC CONTEXT-SAVING MECHANISM IN THE BACKGROUND">
  <data key="d0">USES</data>
</edge>
<edge source="CLIC INTERRUPT CONTROLLER" target="DRAFT SPECIFICATION">
  <data key="d0">IS ACCORDING TO</data>
</edge>
<edge source="DRAFT SPECIFICATION" target="RISC-V PRIVILEGED SPECIFICATION 14">
  <data key="d0">IS TO BE INCLUDED IN</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="WEAKNESSES OF RISC-V CORE-SPECIFIC INTERRUPT CONTROLLERS">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="CLIC BASE CAPABILITIES">
  <data key="d0">EXTENDS</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="INTERRUPT LATENCY">
  <data key="d0">LOWERS</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="HW VECTORED INTERRUPTS">
  <data key="d0">KEEPS</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="SKIPPING OF REDUNDANT CONTEXT RESTORE OPERATIONS">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="FASTIRQ EXTENSION" target="INTERRUPT LATENCY TO SIX CYCLES">
  <data key="d0">IS ABLE TO REDUCE</data>
</edge>
<edge source="INTERRUPT LATENCY" target="SW-DEPENDENT CONTRIBUTIONS">
  <data key="d0">BREAKS DOWN INTO</data>
</edge>
<edge source="INTERRUPT LATENCY" target="HW-DEPENDENT CONTRIBUTIONS">
  <data key="d0">BREAKS DOWN INTO</data>
</edge>
<edge source="INTERRUPT LATENCY" target="VARIOUS FLAVORS OF RISC-V CORE-SPECIFIC INTERRUPT CONTROLLERS">
  <data key="d0">IS OF</data>
</edge>
<edge source="INTERRUPT LATENCY" target="ITS HW-CONTRIBUTED PART">
  <data key="d0">MEAN</data>
</edge>
<edge source="INTERRUPT LATENCY" target="THE TIME IT TAKES FROM AN INTERRUPT EDGE ARRIVING AT THE HW TO THE EXECUTION OF THE FIRST INSTRUCTION OF THE CORRESPONDING INTERRUPT HANDLER ROUTINE">
  <data key="d0">IS DEFINED AS</data>
</edge>
<edge source="INTERRUPT LATENCY" target="NUMBER OF CYCLES IT TAKES FOR AN INTERRUPT TO ARRIVE AT THE INTERRUPT CONTROLLER INPUT TO THE FIRST INSTRUCTION OF AN INTERRUPT HANDLER THAT ALLOWS THE CALLING OF A C-FUNCTION">
  <data key="d0">IS MEASURED AS</data>
</edge>
<edge source="INTERRUPT LATENCY" target="HIGHER INTERRUPT LOADS">
  <data key="d0">IS IMPACTED ON</data>
</edge>
<edge source="INTERRUPT LATENCY" target="A SINGLE-CYCLE MEMORY 24">
  <data key="d0">IS GIVEN</data>
</edge>
<edge source="INTERRUPT LATENCY" target="DEFINITION PRESENTED IN SECTION II-B">
  <data key="d0">HAS DEFINITION</data>
</edge>
<edge source="INTERRUPT LATENCY" target="ARM CORTEX-M PROCESSORS">
  <data key="d0">IS RELATED TO</data>
</edge>
<edge source="THE EXTENSION" target="CV32RT">
  <data key="d0">IS IMPLEMENTED ON</data>
</edge>
<edge source="THE EXTENSION" target="NEGLIGIBLE AREA OVERHEAD IN A MODERN TECHNOLOGY NODE">
  <data key="d0">INTRODUCES</data>
</edge>
<edge source="THE EXTENSION" target="PERFORMANCE BENEFITS">
  <data key="d0">PROVIDES</data>
</edge>
<edge source="27 B. MAO, N. TAN, T. CHONG, AND L. LI" target="A CLIC EXTENSION BASED FAST INTERRUPT SYSTEM FOR EMBEDDED RISC-V PROCESSORS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="A CLIC EXTENSION BASED FAST INTERRUPT SYSTEM" target="EMBEDDED RISC-V PROCESSORS">
  <data key="d0">IS FOR</data>
</edge>
<edge source="A CLIC EXTENSION BASED FAST INTERRUPT SYSTEM" target="PROC.">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="MANY EMBEDDED USE CASES" target="REAL-TIME CONSTRAINTS">
  <data key="d0">HAVE</data>
</edge>
<edge source="MANY EMBEDDED USE CASES" target="FLEXIBLE, PREDICTABLE, AND FAST REACTIVE HANDLING OF INCOMING EVENTS">
  <data key="d0">REQUIRE</data>
</edge>
<edge source="RISC-V PROCESSORS" target="THIS AREA">
  <data key="d0">ARE LAGGING IN</data>
</edge>
<edge source="RISC-V PROCESSORS" target="MORE MATURE PROPRIETARY ARCHITECTURES">
  <data key="d0">ARE LAGGING COMPARED TO</data>
</edge>
<edge source="MORE MATURE PROPRIETARY ARCHITECTURES" target="ARM CORTEX-M">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="MORE MATURE PROPRIETARY ARCHITECTURES" target="TRICORE">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="ARM CORTEX-M" target="16 CORE REGISTERS">
  <data key="d0">HAS</data>
</edge>
<edge source="ARM CORTEX-M AND TRICORE" target="TUNED FOR YEARS">
  <data key="d0">HAVE BEEN</data>
</edge>
<edge source="THE DEFAULT INTERRUPT CONTROLLER" target="RISC-V">
  <data key="d0">IS STANDARDIZED BY</data>
</edge>
<edge source="THE DEFAULT INTERRUPT CONTROLLER" target="THE CORE LOCAL INTERRUPTOR (CLINT)">
  <data key="d0">IS CALLED</data>
</edge>
<edge source="RISC-V" target="PLATFORM-LEVEL INTERRUPT CONTROLLER SPECIFICATION">
  <data key="d0">HAS</data>
</edge>
<edge source="RISC-V" target="RV32E AS A VARIANT OF RV32I">
  <data key="d0">DEFINES</data>
</edge>
<edge source="THE CORE LOCAL INTERRUPTOR (CLINT)" target="CONFIGURABILITY IN PRIORITIZATION AND PREEMPTION OF INTERRUPTS">
  <data key="d0">LACKS</data>
</edge>
<edge source="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) SPECIFICATION" target="THIS CONCERN">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) SPECIFICATION" target="PREEMPTIBLE, LOW-LATENCY VECTORED INTERRUPTS">
  <data key="d0">ENABLES</data>
</edge>
<edge source="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) SPECIFICATION" target="OPTIONAL EXTENSIONS TO IMPROVE INTERRUPT LATENCY">
  <data key="d0">ENVISIONS</data>
</edge>
<edge source="THE RISC-V COMMUNITY" target="AN EXTENSION TO THE PRIVILEGED SPECIFICATIONS 14">
  <data key="d0">HAS BEEN DEVELOPING</data>
</edge>
<edge source="THE RISC-V COMMUNITY" target="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) 15">
  <data key="d0">HAS PROPOSED</data>
</edge>
<edge source="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) 15" target="CURRENTLY UNDER RATIFICATION BY THE COMMUNITY">
  <data key="d0">IS</data>
</edge>
<edge source="THE RISC-V CORE LOCAL INTERRUPT CONTROLLER (CLIC) 15" target="REAL-TIME SCENARIOS">
  <data key="d0">IS DEVELOPED TO HANDLE</data>
</edge>
<edge source="CLICS" target="LOCAL TO EACH HARDWARE THREAD (HART)">
  <data key="d0">ARE</data>
</edge>
<edge source="PLATFORM LEVEL INTERRUPT CONTROLLERS (PLICS)" target="CENTRALIZED INTERRUPT CONTROLLERS">
  <data key="d0">ARE</data>
</edge>
<edge source="PLATFORM LEVEL INTERRUPT CONTROLLERS (PLICS)" target="MANAGING MULTIPLE HARTS">
  <data key="d0">ARE CAPABLE OF</data>
</edge>
<edge source="PLATFORM-LEVEL INTERRUPT CONTROLLERS" target="THIS CATEGORY">
  <data key="d0">BELONG TO CATEGORY</data>
</edge>
<edge source="PLATFORM-LEVEL INTERRUPT CONTROLLERS" target="DISTRIBUTE TIME-CRITICAL INTERRUPTS TO THE RUNNING HARTS">
  <data key="d0">ARE NOT DESIGNED TO</data>
</edge>
<edge source="RISC-V PLIC" target="PLATFORM-LEVEL INTERRUPT CONTROLLER">
  <data key="d0">IS A</data>
</edge>
<edge source="ADVANCED PLIC (APLIC)" target="PLATFORM-LEVEL INTERRUPT CONTROLLER">
  <data key="d0">IS A</data>
</edge>
<edge source="RISC-V INCOMING MESSAGE SIGNALED INTERRUPT CONTROLLER (IMSIC)" target="PLATFORM-LEVEL INTERRUPT CONTROLLER">
  <data key="d0">IS A</data>
</edge>
<edge source="RISC-V INCOMING MESSAGE SIGNALED INTERRUPT CONTROLLER (IMSIC)" target="MESSAGE-SIGNALED INTERRUPT COMMUNICATION">
  <data key="d0">IS USED FOR</data>
</edge>
<edge source="RISC-V PLIC AND ADVANCED PLIC (APLIC)" target="WIRE-BASED INTERRUPT COMMUNICATION">
  <data key="d0">ARE USED FOR</data>
</edge>
<edge source="B. CORE-LOCAL INTERRUPT CONTROLLERS CLICS" target="PROVIDING FAST INTERRUPT-HANDLING CAPABILITIES">
  <data key="d0">ARE OFTEN SPECIALIZED IN</data>
</edge>
<edge source="B. CORE-LOCAL INTERRUPT CONTROLLERS CLICS" target="REAL-TIME EMBEDDED APPLICATION DOMAINS">
  <data key="d0">ARE SPECIALIZED IN</data>
</edge>
<edge source="RISC-V SMCLIC CORE-LOCAL INTERRUPT CONTROLLER (CLIC)" target="RISC-V PRIVILEGED ARCHITECTURE EXTENSION">
  <data key="d0">IS</data>
</edge>
<edge source="DOCUMENT" target="HTTP://WWW2.EECS.BERKELEY.EDU/PUB/STECHRPTS/2016/EECS-2016-129.HTML">
  <data key="d0">IS AVAILABLE AT</data>
</edge>
<edge source="DOCUMENT" target="HTTP:WEB.ENGR.OREGONSTATE.EDU/TRAYLORECE473 PDFSMINIMIZEINTERRUPTRESPONSETIME.PDF">
  <data key="d0">AVAILABLE AT</data>
</edge>
<edge source="DOCUMENT" target="352">
  <data key="d0">HAS PAGE</data>
</edge>
<edge source="DOCUMENT" target="10.11451146909.1147001">
  <data key="d0">HAS DOI</data>
</edge>
<edge source="DOCUMENT" target="HTTPS:DOC.NUCLEISYS.COMNUCLEISPECISAINTRODUCTION.HTML">
  <data key="d0">IS AVAILABLE AT</data>
</edge>
<edge source="COMPETITIVE INTERRUPT-HANDLING FEATURES" target="ARM CORTEX-M SERIES">
  <data key="d0">ARE COMPARED TO</data>
</edge>
<edge source="COMPETITIVE INTERRUPT-HANDLING FEATURES" target="TRICORE">
  <data key="d0">ARE COMPARED TO</data>
</edge>
<edge source="ARM CORTEX-M SERIES" target="A REFERENCE EXAMPLE IN THE FIELD">
  <data key="d0">IS</data>
</edge>
<edge source="ARM CORTEX-M SERIES" target="NESTED VECTORED INTERRUPT CONTROLLER (NVIC)">
  <data key="d0">INTEGRATES</data>
</edge>
<edge source="VARIOUS CV32RT VERSIONS" target="INTERRUPT LATENCY AND CONTEXT SWITCH TIMES">
  <data key="d0">PERFORM IN TERMS OF</data>
</edge>
<edge source="THESE ADDITIONS" target="OVERHEAD IN TERMS OF AREA AND TIMING">
  <data key="d0">INCUR</data>
</edge>
<edge source="THE PROPOSED EXTENSIONS" target="TASK CONTEXT SWITCHING IN REAL-TIME OPERATING SYSTEMS (RTOSS)">
  <data key="d0">ARE DEMONSTRATED TO IMPROVE</data>
</edge>
<edge source="INDEX TERMS" target="CONTEXT SWITCHING">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INDEX TERMS" target="EMBEDDED">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INDEX TERMS" target="INTERRUPT LATENCY">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INDEX TERMS" target="MICROCONTROLLER UNIT (MCU)">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INDEX TERMS" target="REAL-TIME">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INDEX TERMS" target="RISC-V">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="CONTEXT SWITCHING" target="EMBEDDED PROCESSORS">
  <data key="d0">OCCURS ON</data>
</edge>
<edge source="SEVERAL MARKETS" target="REAL-TIME AN SW-BASED SOLUTION">
  <data key="d0">RELY ON</data>
</edge>
<edge source="THE AUTOMOTIVE INDUSTRY" target="HUNDREDS OF ELECTRONIC CONTROL UNITS (ECUS)">
  <data key="d0">EMPLOYS</data>
</edge>
<edge source="ELECTRONIC CONTROL UNITS (ECUS)" target="REAL-TIME APPLICATIONS">
  <data key="d0">ARE USED FOR</data>
</edge>
<edge source="REAL-TIME APPLICATIONS" target="ELECTRONIC ENGINE CONTROL">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="REAL-TIME APPLICATIONS" target="GEARBOX CONTROL">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="REAL-TIME APPLICATIONS" target="CRUISE CONTROL">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="REAL-TIME APPLICATIONS" target="ANTI-LOCK BRAKE SYSTEMS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="REAL-TIME APPLICATIONS" target="MANY OTHER TASKS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="GENERAL-PURPOSE OPERATING SYSTEMS (GPOSS)" target="AVERAGE THROUGHPUT">
  <data key="d0">ARE TYPICALLY TUNED FOR</data>
</edge>
<edge source="THIS WORK" target="THE HORIZON KEY DIGITAL TECHNOLOGIES JOINT UNDERTAKING (KDT JU) PROGRAMME">
  <data key="d0">WAS SUPPORTED IN PART BY</data>
</edge>
<edge source="THIS WORK" target="N 4096 LOCAL INTERRUPT SOURCES">
  <data key="d0">CAN SCALE UP TO</data>
</edge>
<edge source="THIS WORK" target="A COMBINATION OF THE BACKGROUND-SAVING WITH A REGISTER BANKING APPROACH">
  <data key="d0">PROPOSES</data>
</edge>
<edge source="THE HORIZON KEY DIGITAL TECHNOLOGIES JOINT UNDERTAKING (KDT JU) PROGRAMME" target="THE TRISTAN PROJECT">
  <data key="d0">SUPPORTED THROUGH</data>
</edge>
<edge source="THE TRISTAN PROJECT" target="101095947">
  <data key="d0">IS UNDER GRANT</data>
</edge>
<edge source="ROBERT BALAS" target="CORRESPONDING AUTHOR">
  <data key="d0">IS</data>
</edge>
<edge source="ROBERT BALAS" target="INTEGRATED SYSTEMS LABORATORY (IIS)">
  <data key="d0">IS WITH</data>
</edge>
<edge source="ROBERT BALAS" target="GRADUATE STUDENT MEMBER OF IEEE">
  <data key="d0">IS</data>
</edge>
<edge source="ROBERT BALAS" target="B.SC.">
  <data key="d0">RECEIVED</data>
</edge>
<edge source="INTEGRATED SYSTEMS LABORATORY (IIS)" target="ETH ZURICH">
  <data key="d0">IS AT</data>
</edge>
<edge source="ALESSANDRO OTTAVIANO" target="INTEGRATED SYSTEMS LABORATORY (IIS)">
  <data key="d0">IS WITH</data>
</edge>
<edge source="ALESSANDRO OTTAVIANO" target="THE B.SC.">
  <data key="d0">RECEIVED</data>
</edge>
<edge source="ETH ZURICH" target="8092 ZURICH">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="ETH ZURICH" target="ZURICH, SWITZERLAND">
  <data key="d0">IS IN</data>
</edge>
<edge source="8092 ZURICH" target="SWITZERLAND">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="LUCA BENINI" target="THE INTEGRATED SYSTEMS LABORATORY (IIS)">
  <data key="d0">IS WITH</data>
</edge>
<edge source="LUCA BENINI" target="THE DEPARTMENT OF ELECTRICAL, ELECTRONIC AND INFORMATION ENGINEERING (DEI)">
  <data key="d0">IS WITH</data>
</edge>
<edge source="LUCA BENINI" target="FELLOW OF IEEE">
  <data key="d0">IS</data>
</edge>
<edge source="LUCA BENINI" target="PH.D.">
  <data key="d0">RECEIVED</data>
</edge>
<edge source="THE DEPARTMENT OF ELECTRICAL, ELECTRONIC AND INFORMATION ENGINEERING (DEI)" target="UNIVERSITY OF BOLOGNA">
  <data key="d0">IS AT</data>
</edge>
<edge source="UNIVERSITY OF BOLOGNA" target="40126 BOLOGNA, ITALY">
  <data key="d0">IS IN</data>
</edge>
<edge source="COLOR VERSIONS OF ONE OR MORE FIGURES IN THIS ARTICLE" target="HTTPS:DOI.ORG10.1109TVLSI.2024.3377130">
  <data key="d0">ARE AVAILABLE AT</data>
</edge>
<edge source="DIGITAL OBJECT IDENTIFIER" target="10.1109TVLSI.2024.3377130">
  <data key="d0">IS</data>
</edge>
<edge source="THE DEVELOPMENT OF LINUX" target="AVERAGE PERFORMANCE">
  <data key="d0">IS FOCUSED ON</data>
</edge>
<edge source="LINUX" target="POPULAR OPEN-SOURCE GPOS KERNEL">
  <data key="d0">IS A</data>
</edge>
<edge source="LINUX" target="REAL-TIME APPLICATIONS">
  <data key="d0">IS LESS SUITABLE TO BE USED FOR</data>
</edge>
<edge source="EXTENSIONS AND MODIFICATIONS" target="IMPROVING DETERMINISM AND LATENCIES OF CRITICAL OPERATIONS IN LINUX">
  <data key="d0">AIM AT</data>
</edge>
<edge source="EXTENSIONS AND MODIFICATIONS" target="PROPOSED AND IMPLEMENTED">
  <data key="d0">HAVE BEEN</data>
</edge>
<edge source="EXTENSIONS AND MODIFICATIONS" target="STRICT BOUNDS ON MAXIMUM LATENCIES OF OPERATIONS">
  <data key="d0">DO NOT GUARANTEE</data>
</edge>
<edge source="EXTENSIONS AND MODIFICATIONS" target="INDUSTRY-GRADE MATURITY">
  <data key="d0">LACK</data>
</edge>
<edge source="INDUSTRY-GRADE MATURITY" target="EMPLOYED IN HARD REAL-TIME SCENARIOS">
  <data key="d0">IS REQUIRED TO BE</data>
</edge>
<edge source="REAL-TIME OPERATING SYSTEMS (RTOSS) KERNELS" target="SPECIAL-PURPOSE OPERATING SYSTEMS (OSS)">
  <data key="d0">ARE</data>
</edge>
<edge source="REAL-TIME OPERATING SYSTEMS (RTOSS) KERNELS" target="REAL-TIME GUARANTEES">
  <data key="d0">ARE DESIGNED TO PROVIDE</data>
</edge>
<edge source="REAL-TIME GUARANTEES" target="TASK SCHEDULING ACCORDING TO A GIVEN EXPECTED COMPLETION DEADLINE">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="REAL-TIME GUARANTEES" target="DETERMINISTIC LATENCIES OF VARIOUS OPERATIONS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="A. STANKOVIC" target="SCHEDULING ALGORITHMS AND OPERATING SYSTEMS SUPPORT FOR REAL-TIME SYSTEMS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="SCHEDULING ALGORITHMS AND OPERATING SYSTEMS SUPPORT FOR REAL-TIME SYSTEMS" target="PROC.">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="THE RTOS SCHEDULER" target="A SIGNIFICANT OVERHEAD">
  <data key="d0">MIGHT ADD</data>
</edge>
<edge source="THE SIGNIFICANT OVERHEAD" target="THE COMBINED EFFECT OF BOTH THE CONTEXT SWITCHES REQUIRED TO HANDLE THE TRANSITION FROM A FOREGROUND TO A BACKGROUND TASK AND THE AMOUNT OF TIME ELAPSED FROM THE SOURCE EVENT THAT CAUSES THE PREEMPTION AND THE FIRST INSTRUCTION OF THE AWAKENED TASK">
  <data key="d0">IS DUE TO</data>
</edge>
<edge source="THE SIGNIFICANT OVERHEAD" target="THE WORST CASE EXECUTION TIME (WCET) 2, 8, 9">
  <data key="d0">THUS INCREASES</data>
</edge>
<edge source="THE FIRST INSTRUCTION OF THE AWAKENED TASK" target="INTERRUPT LATENCY 7">
  <data key="d0">IS KNOWN AS</data>
</edge>
<edge source="THE COST OF SAVING AND RESTORING THE TASK STATE DURING A CONTEXT SWITCH" target="A SIGNIFICANT CONCERN">
  <data key="d0">IS</data>
</edge>
<edge source="THE COST OF SAVING AND RESTORING THE TASK STATE DURING A CONTEXT SWITCH" target="RELATIVELY HIGH">
  <data key="d0">REMAINS</data>
</edge>
<edge source="LONG CONTEXT SWITCH TIMES" target="AVAILABLE TASK UTILIZATION">
  <data key="d0">REDUCE</data>
</edge>
<edge source="LONG CONTEXT SWITCH TIMES" target="THE MINIMUM VIABLE SWITCHING GRANULARITY">
  <data key="d0">REDUCE</data>
</edge>
<edge source="PROCESS STATE" target="CONTEXT SWITCH">
  <data key="d0">NEEDS TO BE SAVED ON</data>
</edge>
<edge source="PROCESS STATE" target="PROGRAM COUNTER">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="PROCESS STATE" target="REGISTER FILES (RFS)">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="PROCESS STATE" target="STATUS REGISTERS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="PROCESS STATE" target="ADDRESS SPACE MAPPING">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="MEMORY ACCESS OPERATIONS" target="STORE THE STATE OF THE PREEMPTED TASK">
  <data key="d0">NEED TO BE PERFORMED TO</data>
</edge>
<edge source="MEMORY ACCESS OPERATIONS" target="RESTORE THE STATE OF THE NEW TASK TO BE EXECUTED">
  <data key="d0">NEED TO BE PERFORMED TO</data>
</edge>
<edge source="A SWITCH INTO AN INTERRUPT CONTEXT" target="NORMAL PROGRAM EXECUTION">
  <data key="d0">HAPPENS FROM</data>
</edge>
<edge source="A SWITCH INTO AN INTERRUPT CONTEXT" target="AN ASYNCHRONOUS EVENT IS TRIGGERED">
  <data key="d0">HAPPENS EACH TIME</data>
</edge>
<edge source="AN ASYNCHRONOUS EVENT" target="AN IO PERIPHERAL DEVICE">
  <data key="d0">IS TRIGGERED FROM</data>
</edge>
<edge source="HW-INDUCED INTERRUPT LATENCY" target="ONLY ONE PART OF THE PROBLEM">
  <data key="d0">IS</data>
</edge>
<edge source="SW-INDUCED INTERRUPT LATENCY" target="PART OF THE PROBLEM">
  <data key="d0">IS</data>
</edge>
<edge source="PERSONAL USE" target="PERMITTED">
  <data key="d0">IS</data>
</edge>
<edge source="REPUBLICATIONREDISTRIBUTION" target="IEEE PERMISSION">
  <data key="d0">REQUIRES</data>
</edge>
<edge source="HTTPS://WWW.IEEE.ORG/PUBLICATIONS/RIGHTS/INDEX.HTML" target="MORE INFORMATION">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="IEEE" target="39TH INT.">
  <data key="d0">IS</data>
</edge>
<edge source="AUTHORIZED LICENSED USE" target="CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO">
  <data key="d0">IS LIMITED TO</data>
</edge>
<edge source="THE CLIC DESIGN" target="AUTHORIZED LICENSED USE LIMITED TO CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO">
  <data key="d0">IS PROPOSED IN</data>
</edge>
<edge source="INTERRUPT STATE" target="PUSHED">
  <data key="d0">GETS</data>
</edge>
<edge source="THE LATTER" target="THE EXECUTION TIME OF THE AUTHORIZED LICENSED USE LIMITED TO CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO">
  <data key="d0">REDUCES</data>
</edge>
<edge source="THE LATTER" target="THE RECEIVING SIDE OF THE INTERRUPT TO CLEAR THE SOURCE OFTEN THROUGH ACCESSING APPROPRIATE HW REGISTERS">
  <data key="d0">REQUIRES</data>
</edge>
<edge source="THE LATTER" target="RESTORING THE INTERRUPT CONTEXT AND THE REGULAR INTERRUPT LATENCY">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="DATA" target="MAY 28, 2025 AT 17:50:39 UTC">
  <data key="d0">WAS DOWNLOADED ON</data>
</edge>
<edge source="DATA" target="IEEE XPLORE">
  <data key="d0">WAS DOWNLOADED FROM</data>
</edge>
<edge source="DATA" target="MAY 28, 2025">
  <data key="d0">WAS DOWNLOADED ON</data>
</edge>
<edge source="DATA" target="17:50:39 UTC">
  <data key="d0">WAS DOWNLOADED AT</data>
</edge>
<edge source="FAST INTERRUPT AND CONTEXT SWITCHING" target="GPOSRTOS SCHEDULER AND THE USER CODE">
  <data key="d0">IS INTRODUCED BY</data>
</edge>
<edge source="FAST INTERRUPT AND CONTEXT SWITCHING" target="CAPABILITY OF THE SYSTEM TO PROVIDE TIMELY RESPONSES TO ASYNCHRONOUS EVENTS">
  <data key="d0">IMPACTS</data>
</edge>
<edge source="TABLE I" target="NESTED INTERRUPT PREEMPTION SCHEME">
  <data key="d0">DESCRIBES</data>
</edge>
<edge source="TABLE I" target="PREEMPTION CONDITIONS OF TWO NESTED INTERRUPTS IRQ2 AND IRQ1">
  <data key="d0">SHOWS</data>
</edge>
<edge source="NESTED INTERRUPT PREEMPTION SCHEME" target="RISC-V CLIC">
  <data key="d0">IS ACCORDING TO</data>
</edge>
<edge source="C. CV32RTFASTIRQ" target="FAST INTERRUPT EXTENSION">
  <data key="d0">IS</data>
</edge>
<edge source="A BLOCK DIAGRAM OF CV32RTFASTIRQ" target="FIG.">
  <data key="d0">IS SHOWN IN</data>
</edge>
<edge source="SW INTERRUPT" target="WRITING TO CLICS MEMORY MAP">
  <data key="d0">IS TRIGGERED BY</data>
</edge>
<edge source="POINTER" target="APPROPRIATELY BEFORE TRIGGERING AN SW INTERRUPT">
  <data key="d0">IS SET</data>
</edge>
<edge source="FAST INTERRUPT AND CONTEXT SWITCHING 1043 INSTRUCTION IN MACHINE MODE" target="EMRET">
  <data key="d0">IS</data>
</edge>
<edge source="EMRET" target="REDUNDANT CONTEXT SAVING AND RESTORING SEQUENCES">
  <data key="d0">CAN SKIP</data>
</edge>
<edge source="EMRET" target="DIRECTLY JUMPING TO THE NEXT AVAILABLE INTERRUPT HANDLER">
  <data key="d0">SKIPS BY</data>
</edge>
<edge source="EMRET" target="TO DIFFERENTIATE BETWEEN A REGULAR RETURN FROM AN INTERRUPT HANDLER USING MRET">
  <data key="d0">IS ADDED</data>
</edge>
<edge source="EMRET" target="THE CONTROL FLOW TO THE PENDING INTERRUPTS HANDLER">
  <data key="d0">REDIRECTS</data>
</edge>
<edge source="LOW INTERRUPT LATENCY" target="CRUCIAL METRICS">
  <data key="d0">ARE</data>
</edge>
<edge source="CRUCIAL METRICS" target="A WIDE RANGE OF PLATFORMS">
  <data key="d0">ARE FOR</data>
</edge>
<edge source="CONTEXT SWITCH TIME" target="CRUCIAL METRICS">
  <data key="d0">ARE</data>
</edge>
<edge source="CONTEXT SWITCH TIME" target="IN FIG.">
  <data key="d0">IS SHOWN</data>
</edge>
<edge source="PLATFORMS" target="COMMODITY MCU-CLASS EMBEDDED SYSTEMS">
  <data key="d0">RANGE FROM</data>
</edge>
<edge source="PLATFORMS" target="MORE ADVANCED AND COMPLEX APPLICATION-CLASS MIXED CRITICALITY SYSTEMS (MCSS)">
  <data key="d0">RANGE TO</data>
</edge>
<edge source="TIMESAFETY-CRITICAL AND NON-CRITICAL APPLICATIONS" target="DIFFERENT ISOLATED PARTITIONS">
  <data key="d0">COEXIST ON</data>
</edge>
<edge source="DIFFERENT ISOLATED PARTITIONS" target="THE SAME HW PLATFORM 12">
  <data key="d0">ARE OF</data>
</edge>
<edge source="RESPONSE AND CONTEXT SWITCH TIME MINIMIZATION" target="A CHALLENGE TO BE TACKLED AT THE HWSW INTERFACE">
  <data key="d0">BECOME</data>
</edge>
<edge source="SW PROGRAMMING TECHNIQUES AND HW INTERRUPT CONTROLLER ARCHITECTURES" target="TO ENSURE MINIMAL RESPONSE TIME">
  <data key="d0">CAN COOPERATE</data>
</edge>
<edge source="COMMERCIAL VENDORS AND IP PROVIDERS" target="SUCH FEATURES AS IN-HOUSE SOLUTIONS">
  <data key="d0">OFFER</data>
</edge>
<edge source="SUCH FEATURES AS IN-HOUSE SOLUTIONS" target="OFTEN PROPRIETARY">
  <data key="d0">ARE</data>
</edge>
<edge source="SUCH FEATURES AS IN-HOUSE SOLUTIONS" target="TIGHTLY COUPLED WITH THE VENDORS INSTRUCTION SET ARCHITECTURE (ISA)">
  <data key="d0">ARE</data>
</edge>
<edge source="SUCH FEATURES AS IN-HOUSE SOLUTIONS" target="TIGHTLY COUPLED WITH THE VENDORS TARGET HW FAMILY">
  <data key="d0">ARE</data>
</edge>
<edge source="SUCH FEATURES AS IN-HOUSE SOLUTIONS" target="TIGHTLY COUPLED WITH THE VENDORS ASSOCIATED SW STACK">
  <data key="d0">ARE</data>
</edge>
<edge source="RISC-V ECOSYSTEM 13" target="A MODULAR, FREE, AND OPEN-SOURCE ISA">
  <data key="d0">HAS BEEN OFFERING</data>
</edge>
<edge source="RISC-V ECOSYSTEM 13" target="THE DE FACTO LINGUA FRANCA OF COMPUTING">
  <data key="d0">IS BECOMING</data>
</edge>
<edge source="RISC-V SUPPORT FOR FAST INTERRUPT AND CONTEXT SWITCH HANDLING" target="INCUMBENT PROPRIETARY ARCHITECTURES">
  <data key="d0">IS NOT MATURE ENOUGH TO COMPETE WITH</data>
</edge>
<edge source="RISC-V SUPPORT FOR FAST INTERRUPT AND CONTEXT SWITCH HANDLING" target="FLEXIBLE INTERRUPT PRIORITIZATION">
  <data key="d0">LACKS</data>
</edge>
<edge source="RISC-V SUPPORT FOR FAST INTERRUPT AND CONTEXT SWITCH HANDLING" target="PREEMPTION MECHANISMS">
  <data key="d0">LACKS</data>
</edge>
<edge source="RISC-V SUPPORT FOR FAST INTERRUPT AND CONTEXT SWITCH HANDLING" target="LOW INTERRUPT LATENCY">
  <data key="d0">LACKS</data>
</edge>
<edge source="MODULAR RISC-V ISA" target="DEVELOPING ORTHOGONAL CUSTOM EXTENSIONS">
  <data key="d0">ENABLES</data>
</edge>
<edge source="FEW PUBLISHED WORKS" target="THE PROBLEM OF MINIMIZING INTERRUPT LATENCY AND CONTEXT SWITCH TIME FROM A HOLISTIC (HW AND SW) VIEWPOINT FOR RISC-V">
  <data key="d0">TACKLE</data>
</edge>
<edge source="FEW PUBLISHED WORKS" target="THE GAP WITH MORE ESTABLISHED PROPRIETARY SOLUTIONS">
  <data key="d0">TRY TO CLOSE</data>
</edge>
<edge source="FEW PUBLISHED WORKS" target="AN OPEN-SOURCE SOLUTION TO BE SHARED WITH THE COMMUNITY">
  <data key="d0">PROVIDE</data>
</edge>
<edge source="CLOSING THE GAP WITH MORE ESTABLISHED PROPRIETARY SOLUTIONS" target="RISC-V AS A VALUABLE CANDIDATE FOR TIME- AND SAFETY-CRITICAL APPLICATION DOMAINS SUCH AS AUTOMOTIVE AND AEROSPACE">
  <data key="d0">PROMOTES</data>
</edge>
<edge source="INTERRUPT HANDLERS" target="NESTING">
  <data key="d0">SUPPORT</data>
</edge>
<edge source="INTERRUPT HANDLERS" target="CALLING OF C-FUNCTIONS WITHIN IT">
  <data key="d0">SUPPORT</data>
</edge>
<edge source="CALLING OF C-FUNCTIONS" target="SAVING AND RESTORING STATE FOLLOWING THE C-ABI">
  <data key="d0">INVOLVES</data>
</edge>
<edge source="OUR DESIGN" target="INTERRUPT LATENCIES OF SIX CLOCK CYCLES">
  <data key="d0">CAN ACHIEVE</data>
</edge>
<edge source="OUR DESIGN" target="EFFICIENT BACK-TO-BACK INTERRUPT HANDLING IN 12 CYCLES">
  <data key="d0">CAN ACHIEVE</data>
</edge>
<edge source="INTERRUPT LATENCIES OF SIX CLOCK CYCLES AND EFFICIENT BACK-TO-BACK INTERRUPT HANDLING IN 12 CYCLES" target="THE FASTEST AVAILABLE APPROACHES CURRENTLY IMPLEMENTED IN THE RISC-V LANDSCAPE">
  <data key="d0">IS AS LOW AS</data>
</edge>
<edge source="THE FASTEST AVAILABLE APPROACHES" target="FULLY OPEN-SOURCE">
  <data key="d0">ARE</data>
</edge>
<edge source="THE FASTEST AVAILABLE APPROACHES" target="COMPETITIVE AGAINST CLOSED-SOURCE AND PROPRIETARY COMMERCIAL SOLUTIONS">
  <data key="d0">ARE</data>
</edge>
<edge source="FAST INTERRUPT EXTENSION (FASTIRQ)" target="BOTH NESTED INTERRUPT CASE SCENARIOS">
  <data key="d0">ACCELERATES</data>
</edge>
<edge source="FAST INTERRUPT EXTENSION (FASTIRQ)" target="NON-NESTED INTERRUPT CASE SCENARIOS">
  <data key="d0">ACCELERATES</data>
</edge>
<edge source="CLINT AND CLIC" target="ABOUT 33 CYCLES INTERRUPT LATENCY">
  <data key="d0">HAVE</data>
</edge>
<edge source="THE SAME MECHANISM" target="ONE TO ACCELERATE CONTEXT SWITCHING THROUGH HWSW COOPERATION">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THE PROPOSED SOLUTION" target="RISC-V AS A COMPETITIVE CANDIDATE FOR BUILDING THE NEXT GENERATION OF TIME-CRITICAL SYSTEMS">
  <data key="d0">PROMOTES</data>
</edge>
<edge source="THIS CORE" target="CONTROLPULP 19">
  <data key="d0">IS EMBEDDED IN</data>
</edge>
<edge source="CONTROLPULP 19" target="A SOC">
  <data key="d0">IS</data>
</edge>
<edge source="CONTROLPULP 19" target="RUNNING REAL-TIME WORKLOADS">
  <data key="d0">IS SPECIALIZED IN</data>
</edge>
<edge source="THE SYSTEM" target="A CV32 MANAGER CORE">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="THE SYSTEM" target="A PROGRAMMABLE ACCELERATOR SUBSYSTEM">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="THE SYSTEM" target="A SET OF STANDARD PERIPHERALS">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="A PROGRAMMABLE ACCELERATOR SUBSYSTEM" target="EIGHT CV32 CORES">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="A SET OF STANDARD PERIPHERALS" target="QUAD SERIAL PERIPHERAL INTERFACE (QSPI)">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="A SET OF STANDARD PERIPHERALS" target="INTER-INTEGRATED CIRCUIT (I2C)">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="A SET OF STANDARD PERIPHERALS" target="UNIVERSAL ASYNCHRONOUS RECEIVER-TRANSMITTER (UART)">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="THE MANAGER CORE" target="SCHEDULING TASKS">
  <data key="d0">IS RESPONSIBLE FOR</data>
</edge>
<edge source="THE MANAGER CORE" target="COMMUNICATING WITH THE PERIPHERALS">
  <data key="d0">IS RESPONSIBLE FOR</data>
</edge>
<edge source="THE MANAGER CORE" target="OFFLOADING TASKS TO THE ACCELERATOR SUBSYSTEM">
  <data key="d0">IS RESPONSIBLE FOR</data>
</edge>
<edge source="THE MANAGER CORE" target="ASYNCHRONOUS EXTERNAL EVENTS">
  <data key="d0">IS RESPONSIVE TO</data>
</edge>
<edge source="ASYNCHRONOUS EXTERNAL EVENTS" target="INTERRUPTS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="INTERRUPTS" target="ASYNCHRONOUS EVENTS">
  <data key="d0">ARE</data>
</edge>
<edge source="INTERRUPTS" target="THE NORMAL PROGRAM ORDER EXECUTION">
  <data key="d0">ALTER</data>
</edge>
<edge source="INTERRUPTS" target="A SWITCH TO A DIFFERENT CONTEXT TO HANDLE THE EVENT">
  <data key="d0">REQUIRE</data>
</edge>
<edge source="INTERRUPTS" target="GLOBALLY DURING THE EXECUTION OF AN ISR">
  <data key="d0">ARE DISABLED</data>
</edge>
<edge source="INTERRUPTS" target="SEQUENTIALLY">
  <data key="d0">ARE SERVED</data>
</edge>
<edge source="INTERRUPTS" target="GLOBALLY ENABLED">
  <data key="d0">ARE</data>
</edge>
<edge source="INTERRUPTS" target="THE SCOPE OF AN EXECUTING ISR">
  <data key="d0">ARE ENABLED WITHIN</data>
</edge>
<edge source="INTERRUPTS" target="BELOW THE THRESHOLD">
  <data key="d0">ARE DISABLED</data>
</edge>
<edge source="INTERRUPTS" target="A PRIORITY">
  <data key="d0">CAN BE ASSIGNED</data>
</edge>
<edge source="INTERRUPTS" target="A LEVEL">
  <data key="d0">CAN BE ASSIGNED</data>
</edge>
<edge source="INTERRUPTS" target="SO-CALLED LEVELS AND PRIORITIES">
  <data key="d0">ARE PRIORITIZED BY</data>
</edge>
<edge source="INTERRUPTS" target="THE GATEWAY">
  <data key="d0">ARRIVE AT</data>
</edge>
<edge source="INTERRUPTS" target="PROGRAMMABLE CONFIGURATION INFORMATION">
  <data key="d0">ARE COMBINED WITH</data>
</edge>
<edge source="INTERRUPTS" target="WRITE-BACK STAGE OF THE CORE">
  <data key="d0">ARE ONLY ACTED UPON IN</data>
</edge>
<edge source="INTERRUPTS" target="THE DESIGN AT THE INTERRUPT CONTROLLER INPUTS">
  <data key="d0">ARE INJECTED INTO</data>
</edge>
<edge source="CONTROLPULP" target="A SET OF SCRATCHPAD MEMORIES (SPMS)">
  <data key="d0">HOSTS</data>
</edge>
<edge source="SCRATCHPAD MEMORIES (SPMS)" target="SINGLE-CYCLE ACCESS TIME">
  <data key="d0">GUARANTEE</data>
</edge>
<edge source="SINGLE-CYCLE ACCESS TIME" target="THE CV32 MANAGER CORE">
  <data key="d0">IS FROM</data>
</edge>
<edge source="THIS DESIGN CHOICE" target="DETERMINISTIC MEMORY ACCESS LATENCY FOR BOTH DATA LOAD, STORE, AND INSTRUCTION FETCH">
  <data key="d0">ENABLES</data>
</edge>
<edge source="THIS DESIGN CHOICE" target="THE WORST CASE LATENCY WHEN HANDLING UNPREDICTABLE EVENTS">
  <data key="d0">BOUNDS</data>
</edge>
<edge source="APPLICATIONS" target="FREERTOS 20">
  <data key="d0">RUN ON TOP OF</data>
</edge>
<edge source="FREERTOS 20" target="AN OPEN-SOURCE PRIORITY-BASED PREEMPTIVE RTOS">
  <data key="d0">IS</data>
</edge>
<edge source="FREERTOS 20" target="THE MANAGER CORE">
  <data key="d0">RUNS IN</data>
</edge>
<edge source="TASKS" target="THE MANAGER CORE">
  <data key="d0">ARE SCHEDULED AND RUN FROM</data>
</edge>
<edge source="DATE" target="6 JUNE 2024">
  <data key="d0">IS</data>
</edge>
<edge source="DATE" target="136, JAN. 2021">
  <data key="d0">IS</data>
</edge>
<edge source="INTERRUPT SOURCES" target="INTERRUPTS">
  <data key="d0">CAN SIGNAL</data>
</edge>
<edge source="INTERRUPT SOURCES" target="LEVEL CHANGE OF THE INTERRUPT LINE">
  <data key="d0">CAN SIGNAL INTERRUPTS THROUGH</data>
</edge>
<edge source="INTERRUPT SOURCES" target="LOGIC LEVEL ITSELF">
  <data key="d0">CAN SIGNAL INTERRUPTS THROUGH</data>
</edge>
<edge source="LEVEL CHANGE OF THE INTERRUPT LINE" target="EDGE-TRIGGERED INTERRUPT">
  <data key="d0">IS CALLED</data>
</edge>
<edge source="LOGIC LEVEL ITSELF" target="LEVEL-TRIGGERED INTERRUPT">
  <data key="d0">IS</data>
</edge>
<edge source="NESTED INTERRUPTS" target="PREEMPTION OF A LOW-LEVEL INTERRUPT BY A HIGH-LEVEL INTERRUPT">
  <data key="d0">ENTAILS</data>
</edge>
<edge source="TRANSITION" target="DIFFERENT INTERRUPT LEVELS">
  <data key="d0">IS BETWEEN</data>
</edge>
<edge source="THE FORMER" target="UNIDIRECTIONAL NOTIFICATION WITHOUT CONFIRMATION">
  <data key="d0">IS</data>
</edge>
<edge source="A PROCESSOR" target="VECTORED INTERRUPTS">
  <data key="d0">SUPPORTS</data>
</edge>
<edge source="VECTORED INTERRUPTS" target="FAST INTERRUPT RESPONSE">
  <data key="d0">GRANT</data>
</edge>
<edge source="EACH INTERRUPT" target="A SPECIFIC INTERRUPT SERVICE ROUTINE (ISR)">
  <data key="d0">TRAPS TO</data>
</edge>
<edge source="EACH INTERRUPT" target="AN INTERRUPT VECTOR TABLE">
  <data key="d0">TRAPS ACCORDING TO</data>
</edge>
<edge source="EACH INTERRUPT" target="A PRIORITY">
  <data key="d0">CAN BE ASSIGNED</data>
</edge>
<edge source="FAST INTERRUPT RESPONSE" target="INCREASED CODE SIZE">
  <data key="d0">IS AT THE COST OF</data>
</edge>
<edge source="INTERRUPT VECTORING" target="IMPROVE INTERRUPT LATENCIES">
  <data key="d0">IS SUPPORTED TO</data>
</edge>
<edge source="NON-VECTORED OR DIRECT INTERRUPTS" target="A SHARED ISR">
  <data key="d0">TRAP TO</data>
</edge>
<edge source="THE LATTER APPROACH" target="CODE SIZE OFF FOR A SLOWER INTERRUPT RESPONSE">
  <data key="d0">TRADES</data>
</edge>
<edge source="THE LATTER APPROACH" target="LEVERAGING RISC-VS RV32E BASE INSTRUCTION SET">
  <data key="d0">IS SIMILAR TO</data>
</edge>
<edge source="THE LATTER APPROACH" target="THE LOWER 16 ARCHITECTURAL REGISTERS OF THE RF">
  <data key="d0">RE-USES</data>
</edge>
<edge source="THE LATTER APPROACH" target="THIS WORK">
  <data key="d0">IS PROPOSED IN</data>
</edge>
<edge source="THE OVERHEAD OF RESOLVING THE INTERRUPTION CAUSE AND JUMPING TO THE CORRECT ISR" target="EXPLICIT INSTRUCTIONS">
  <data key="d0">ARE HANDLED IN</data>
</edge>
<edge source="THE INTERRUPT TABLE" target="MUCH MORE COMPACT">
  <data key="d0">CAN BE MADE</data>
</edge>
<edge source="MULTIPLE SOURCES" target="INTERRUPT LATENCY IN A SYSTEM">
  <data key="d0">DETERMINE</data>
</edge>
<edge source="UNDERLYING HW" target="INTERRUPT LATENCY">
  <data key="d0">IS A SOURCE OF</data>
</edge>
<edge source="SCHEDULER OR OS" target="INTERRUPT LATENCY">
  <data key="d0">IS A SOURCE OF</data>
</edge>
<edge source="APPLICATION RUNNING ON TOP" target="INTERRUPT LATENCY">
  <data key="d0">IS A SOURCE OF</data>
</edge>
<edge source="THIS BREAKDOWN" target="FIG.">
  <data key="d0">IS DETAILED IN</data>
</edge>
<edge source="INTERRUPT EDGE" target="THE HW">
  <data key="d0">ARRIVES AT</data>
</edge>
<edge source="THE HW" target="THE LINK REGISTER A VALUE (EXCRETURN)">
  <data key="d0">ENCODES IN</data>
</edge>
<edge source="HW" target="THE INTERRUPT CONTROLLER">
  <data key="d0">USUALLY IS</data>
</edge>
<edge source="HW" target="ENOUGH INFORMATION">
  <data key="d0">STORES</data>
</edge>
<edge source="HW" target="THE PREVIOUS REGISTER STATE TO MEMORY IN THE BACKGROUND">
  <data key="d0">PUSHES OUT</data>
</edge>
<edge source="HW" target="A PRIORI WHICH CALLER-SAVE REGISTERS NEED TO BE SAVED">
  <data key="d0">DOES NOT KNOW</data>
</edge>
<edge source="TO MAKE A FAIR COMPARISON BETWEEN SW-BASED AND MORE HW-ORIENTED INTERRUPT SOLUTIONS" target="WHAT EXACTLY CONSTITUTES THE FIRST INSTRUCTION OF THE INTERRUPT HANDLER">
  <data key="d0">WE HAVE TO DELINEATE</data>
</edge>
<edge source="EACH HW CONFIGURATION" target="A HANDWRITTEN OPTIMIZED INTERRUPT HANDLER">
  <data key="d0">HAS</data>
</edge>
<edge source="HANDWRITTEN OPTIMIZED INTERRUPT HANDLER" target="ALL REQUIRED GENERAL-PURPOSE AND MACHINE-SPECIFIC REGISTERS FOR NESTING INTERRUPTS">
  <data key="d0">STORES</data>
</edge>
<edge source="THE FIRST INSTRUCTION" target="THE ONE AFTER ALL NECESSARY INTERRUPT CONTEXT HAS BEEN SAVED ON THE STACK TO BE ABLE TO CALL A FUNCTION">
  <data key="d0">IS COUNTED AS</data>
</edge>
<edge source="THE FIRST INSTRUCTION" target="RE-ENABLING GLOBAL INTERRUPTS">
  <data key="d0">WILL BE</data>
</edge>
<edge source="WHAT EXACTLY ENTAILS A FUNCTION CALL" target="THE USED APPLICATION BINARY INTERFACE (ABI)">
  <data key="d0">IS DICTATED BY</data>
</edge>
<edge source="WHAT EXACTLY ENTAILS A FUNCTION CALL" target="ITS CALLING CONVENTION">
  <data key="d0">IS DICTATED BY</data>
</edge>
<edge source="INTERRUPT HANDLER AND INTERRUPT CONTEXT SAVING CODE" target="TRUE">
  <data key="d0">CAN BE INTERLEAVED</data>
</edge>
<edge source="SOME OF THE CONTEXT SAVING CODE" target="TRUE">
  <data key="d0">CAN BE REMOVED</data>
</edge>
<edge source="SOME OF THE CONTEXT SAVING CODE" target="REDUNDANT">
  <data key="d0">MIGHT BE</data>
</edge>
<edge source="THE ACTIVE INTERRUPT HANDLERS CONTEXT" target="RESTORED ON INTERRUPT RETURN">
  <data key="d0">MUST BE</data>
</edge>
<edge source="THE ACTIVE INTERRUPT HANDLERS CONTEXT" target="IMMEDIATELY SAVED AGAIN">
  <data key="d0">IS</data>
</edge>
<edge source="THE ACTIVE INTERRUPT HANDLERS CONTEXT" target="THE NEXT PENDING INTERRUPT FIRING">
  <data key="d0">IS SAVED AGAIN DUE TO</data>
</edge>
<edge source="RESTORING THE PRE-INTERRUPT CONTEXT" target="SW FOR THE NESTED INTERRUPT CASE">
  <data key="d0">IS HANDLED IN</data>
</edge>
<edge source="CONTEXT SWITCHING TIME" target="THE RESPONSIVENESS OF THE ARCHITECTURE IN SWAPPING FROM ONE EXECUTION CONTEXT TO ANOTHER">
  <data key="d0">DETERMINES</data>
</edge>
<edge source="THE EXECUTION CONTEXT" target="THE OS BEING USED">
  <data key="d0">IS DEPENDENT ON</data>
</edge>
<edge source="THE EXECUTION CONTEXT" target="THE STATE OF THE ARCHITECTURAL REGISTERS OF THE ISA">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="THE EXECUTION CONTEXT" target="THE CHOSEN ABI">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="PREEMPTION" target="AN EVENT">
  <data key="d0">REFERS TO</data>
</edge>
<edge source="PREEMPTION" target="A CURRENT TASK">
  <data key="d0">TEMPORARILY INTERRUPTS</data>
</edge>
<edge source="PREEMPTION" target="PRIVILEGE MODE (VERTICAL INTERRUPTS)">
  <data key="d0">IS REGULATED BY</data>
</edge>
<edge source="PREEMPTION" target="INTERRUPT LEVEL WHEN THE PRIVILEGE MODE IS THE SAME (HORIZONTAL INTERRUPTS)">
  <data key="d0">IS REGULATED BY</data>
</edge>
<edge source="AN EVENT" target="AN INTERRUPT REQUEST">
  <data key="d0">IS SUCH AS</data>
</edge>
<edge source="PURPOSE OF PREEMPTION" target="RESUMING ITS EXECUTION LATER">
  <data key="d0">IS</data>
</edge>
<edge source="THE SIMPLEST CASE FOR PREEMPTION" target="NON-NESTED INTERRUPT HANDLERS">
  <data key="d0">OCCURS WITH</data>
</edge>
<edge source="A MORE COMPLEX CASE FOR PREEMPTION" target="NESTED INTERRUPT HANDLERS">
  <data key="d0">OCCURS WITH</data>
</edge>
<edge source="NESTED INTERRUPT HANDLERS" target="THE CASE OF MULTIPLE INTERRUPTS AT A TIME">
  <data key="d0">HANDLE</data>
</edge>
<edge source="THIS SITUATION" target="PREEMPTION">
  <data key="d0">DOES NOT RESULT IN</data>
</edge>
<edge source="THIS SITUATION" target="PENDING INTERRUPTS TO BE SERVICED IN SEQUENCE ACCORDING TO INCREASING PRIORITY">
  <data key="d0">CAUSES</data>
</edge>
<edge source="THIS SITUATION" target="DIRECTLY CHECKING FOR OTHER INTERRUPTS PENDING ON THE SAME LEVEL BEFORE RESTORING THE EXECUTIONS INTERRUPT CONTEXT">
  <data key="d0">CAN BE OPTIMIZED BY</data>
</edge>
<edge source="THIS SITUATION" target="THE RISC-V ECOSYSTEM">
  <data key="d0">IS IN</data>
</edge>
<edge source="THIS SITUATION" target="FIG.">
  <data key="d0">IS VISUALIZED IN</data>
</edge>
<edge source="LEVELPRIORITY ARBITRATION" target="SW-DRIVEN">
  <data key="d0">IS</data>
</edge>
<edge source="PRIORITY SIMPLESTANDARD INTERRUPT HANDLERS" target="LEVELPRIORITY ARBITRATION">
  <data key="d0">ARE USED WITH</data>
</edge>
<edge source="HIGHEST PRIORITY INTERRUPT IDENTIFICATION CODE" target="NOT EXECUTED">
  <data key="d0">IS</data>
</edge>
<edge source="LEVELPRIORITY ARBITRATION LOGIC" target="INTERRUPT CONTROLLER">
  <data key="d0">IS DESIGNED WITHIN</data>
</edge>
<edge source="HIGHEST LEVELPRIORITY INTERRUPT" target="PENDING BUT DISABLED">
  <data key="d0">IS</data>
</edge>
<edge source="HIGHEST LEVELPRIORITY INTERRUPT" target="CORE">
  <data key="d0">IS NOT PROPAGATED TO</data>
</edge>
<edge source="CORE" target="AN ACTIVE HANDLER">
  <data key="d0">IS WITHIN</data>
</edge>
<edge source="LEVELPRIORITY INTERRUPT SCHEME" target="ADDITIONAL MASKING OF INCOMING INTERRUPTS OF EQUAL OR LOWER LEVELPRIORITY THAN THE EXECUTING ISR">
  <data key="d0">INTRODUCES</data>
</edge>
<edge source="LEVELPRIORITY INTERRUPT SCHEME" target="ADDITIONAL MASKING OF INCOMING INTERRUPTS SOMETIMES LARGER THAN A CONFIGURABLE LEVELPRIORITY THRESHOLD">
  <data key="d0">INTRODUCES</data>
</edge>
<edge source="THIS SCENARIO" target="REAL-TIME AND COMPLEX EMBEDDED SYSTEMS">
  <data key="d0">IS NOT IDEAL FOR</data>
</edge>
<edge source="ATTEMPTS TO HANDLE A MORE COMPLEX INTERRUPT SCHEME" target="SW EMULATION">
  <data key="d0">WOULD REQUIRE</data>
</edge>
<edge source="SW EMULATION" target="UNTENABLE INTERRUPT LATENCIES">
  <data key="d0">INCURS</data>
</edge>
<edge source="A HIGH-PRIORITY INTERRUPT" target="A LOWER-PRIORITY INTERRUPT TO FINISH">
  <data key="d0">HAS TO WAIT FOR</data>
</edge>
<edge source="GLOBAL INTERRUPTS" target="DISABLED WHENEVER AN INTERRUPT HANDLER IS ENTERED">
  <data key="d0">ARE</data>
</edge>
<edge source="THE ISR" target="CARE DESIGNED TO ENSURE THEY ARE REENTRANT">
  <data key="d0">NEED TO</data>
</edge>
<edge source="THE NESTING" target="HIGHER PRIORITY INTERRUPTS TO PREEMPT A CURRENT LOWER PRIORITY ISR EXECUTING">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="REDUNDANT INTERRUPT CONTEXT" target="BACK-TO-BACK INTERRUPTS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="BACK-TO-BACK INTERRUPTS" target="INTERRUPTS THAT NEED TO BE SERVED SEQUENTIALLY">
  <data key="d0">ARE</data>
</edge>
<edge source="BACK-TO-BACK INTERRUPTS" target="WHENEVER THERE ARE MULTIPLE INTERRUPTS PENDING">
  <data key="d0">CAN HAPPEN</data>
</edge>
<edge source="THE TRANSITION FROM ONE INTERRUPT TO THE NEXT ONE" target="A REDUNDANT SEQUENCE OF CONTEXT RESTORES AND CONTEXT SAVES">
  <data key="d0">CAUSES</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE SEQUENCES" target="INTERRUPT LATENCY">
  <data key="d0">NEGATIVELY IMPACT</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE" target="UNWANTED ADDITIONAL INTERRUPT LATENCY">
  <data key="d0">CAN INTRODUCE</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE" target="NON-NESTED OR NESTED HORIZONTAL INTERRUPTS">
  <data key="d0">OCCURS WITH</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE" target="TWO NON-PREEMPTIVE INTERRUPTS">
  <data key="d0">OF</data>
</edge>
<edge source="TWO NON-PREEMPTIVE INTERRUPTS" target="TWO INTERRUPTS WITH SAME LEVEL BUT DIFFERENT PRIORITIES">
  <data key="d0">ARE</data>
</edge>
<edge source="TAIL-CHAINING" target="OPTIMIZE IT">
  <data key="d0">IS USED TO</data>
</edge>
<edge source="INTERRUPT CONTEXT RESTORE AND STORE SEQUENCE BETWEEN BACK-TO-BACK INTERRUPTS" target="REDUNDANT">
  <data key="d0">CAN BE CONSIDERED</data>
</edge>
<edge source="THE REDUNDANT CONTEXT RESTORING SEQUENCES" target="THE FULL INTERRUPT EXIT CODE SEQUENCE">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE WITH NON-NESTED INTERRUPTS" target="CHAINING TWO BACK-TO-BACK INTERRUPTS">
  <data key="d0">IS ADDRESSED BY</data>
</edge>
<edge source="REDUNDANT CONTEXT RESTORE WITH NON-NESTED INTERRUPTS" target="BYPASSING THE SUPERFLUOUS RESTORESAVE OPERATION">
  <data key="d0">IS ADDRESSED BY</data>
</edge>
<edge source="SECTION III-D" target="THE OPTIMIZATIONS IMPLEMENTED IN THIS WORK TO ADDRESS THIS SCENARIO">
  <data key="d0">EXPLORES</data>
</edge>
<edge source="THE PRIVILEGED SPECIFICATION 14" target="A SIMPLE INTERRUPT SCHEME">
  <data key="d0">DEFINES</data>
</edge>
<edge source="THE PRIVILEGED SPECIFICATION 14" target="THE RISC-V ECOSYSTEM">
  <data key="d0">IS IN</data>
</edge>
<edge source="A SIMPLE INTERRUPT SCHEME" target="A SET OF TIMER AND INTER-PROCESSOR INTERRUPTS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="PENDING AND ENABLED INTERRUPTS" target="A THRESHOLD VALUE REPRESENTING AN INTERRUPT LEVEL">
  <data key="d0">ARE MASKED ACCORDING TO</data>
</edge>
<edge source="PENDING AND ENABLED INTERRUPTS" target="COMPARED TO STANDARD RISC-V PRIVILEGED SPECIFICATIONS">
  <data key="d0">ARE FURTHER SELECTIVELY MASKED</data>
</edge>
<edge source="THRESHOLD VALUE" target="A CSR">
  <data key="d0">IS CONFIGURED THROUGH</data>
</edge>
<edge source="A FIXED PRIORITY INTERRUPT SCHEME" target="16 PREDEFINED OR RESERVED INTERRUPTS">
  <data key="d0">HAS</data>
</edge>
<edge source="A FIXED PRIORITY INTERRUPT SCHEME" target="16 IMPLEMENTATION-DEFINED INTERRUPTS">
  <data key="d0">HAS</data>
</edge>
<edge source="16 IMPLEMENTATION-DEFINED INTERRUPTS" target="OPTIONALLY VECTORED">
  <data key="d0">CAN BE</data>
</edge>
<edge source="THE CLINT" target="PRIORITIZATION OF INTERRUPTS BASED ON PRIVILEGE MODE">
  <data key="d0">SUPPORTS</data>
</edge>
<edge source="THE CLINT" target="FINE-GRAINED CONTROL OVER INTERRUPT PRIORITIZATION">
  <data key="d0">LACKS</data>
</edge>
<edge source="THE INFLEXIBLE INTERRUPT SCHEME OF THE CLINT-MODE" target="MUCH MORE WORK TO BE DONE IN MANAGING INTERRUPT MASK (SOMEIRQMASK) AND OTHER MACHINE STATE">
  <data key="d0">CAUSES</data>
</edge>
<edge source="INTERRUPTS WITH LOWER PRIORITY THAN THE CURRENT INTERRUPT RUNNING" target="IN CLINT-MODE WHEN GLOBAL INTERRUPTS ARE RE-ENABLED">
  <data key="d0">CAN FIRE</data>
</edge>
<edge source="PLIC 22" target="CLINT">
  <data key="d0">CAN BE ATTACHED TO</data>
</edge>
<edge source="PLIC 22" target="NUMBER OF CUSTOM INTERRUPTS">
  <data key="d0">INCREASES</data>
</edge>
<edge source="ACTIVE INTERRUPT HANDLER" target="IRQ2">
  <data key="d0">SERVICES</data>
</edge>
<edge source="IRQ2" target="PRIV2">
  <data key="d0">HAS INTERRUPT PRIVILEGE MODE</data>
</edge>
<edge source="IRQ2" target="L2">
  <data key="d0">HAS LEVEL</data>
</edge>
<edge source="IRQ2" target="P2">
  <data key="d0">HAS PRIORITY</data>
</edge>
<edge source="IRQ1" target="PENDING">
  <data key="d0">IS</data>
</edge>
<edge source="IRQ1" target="PRIV1">
  <data key="d0">HAS INTERRUPT PRIVILEGE MODE</data>
</edge>
<edge source="IRQ1" target="L1">
  <data key="d0">HAS LEVEL</data>
</edge>
<edge source="IRQ1" target="P1">
  <data key="d0">HAS PRIORITY</data>
</edge>
<edge source="IRQ1" target="IRQ2">
  <data key="d0">PREEMPTS</data>
</edge>
<edge source="NUMBER OF INTERRUPTS" target="FLEXIBLE (AT DESIGN TIME)">
  <data key="d0">IS</data>
</edge>
<edge source="NUMBER OF INTERRUPTS" target="ONE OR MORE TARGETS">
  <data key="d0">TARGETS</data>
</edge>
<edge source="INTERRUPTS THAT ARE ASSIGNED A HIGHER LEVEL" target="LOWER-LEVEL INTERRUPTS">
  <data key="d0">CAN PRE-EMPT</data>
</edge>
<edge source="EACH TARGET" target="A THRESHOLD">
  <data key="d0">CAN SELECT</data>
</edge>
<edge source="INTERRUPT SELECTION" target="THE CLIC IN HW">
  <data key="d0">IS DRIVEN BY</data>
</edge>
<edge source="THE CLIC IN HW" target="THE HIGHEST LEVEL, HIGHEST PRIORITY PENDING INTERRUPT TO THE CORES INTERFACE">
  <data key="d0">PROPAGATES</data>
</edge>
<edge source="INTERRUPT PRIORITY" target="TIE-BREAKER">
  <data key="d0">SERVES AS</data>
</edge>
<edge source="TIE-BREAKER" target="THE CASE OF MULTIPLE INTERRUPTS PENDING WITH THE SAME LEVEL">
  <data key="d0">IS FOR</data>
</edge>
<edge source="SELECTING THE INTERRUPT WITH MAXIMUM LEVEL AND PRIORITY" target="THREE BINARY TREES">
  <data key="d0">IS IMPLEMENTED WITH</data>
</edge>
<edge source="ENABLED INTERRUPTS AND THEIR LEVEL AND PRIORITY INFORMATION" target="PRIORITIZATION LOGIC">
  <data key="d0">ARE SENT TO</data>
</edge>
<edge source="PRIORITIZATION LOGIC" target="BINARY ARBITRATION TREE">
  <data key="d0">USES</data>
</edge>
<edge source="BINARY ARBITRATION TREE" target="HIGHEST-LEVEL INTERRUPT">
  <data key="d0">SELECTS</data>
</edge>
<edge source="THE PRIORITIES" target="CONCURRENT PENDING INTERRUPTS TO BE TAKEN IN THE ORDER PREFERRED BY THE PROGRAMMER">
  <data key="d0">ALLOW</data>
</edge>
<edge source="THE LEVEL INFORMATION" target="PRE-EMPTION OF SAME-PRIVILEGE LEVEL INTERRUPTS">
  <data key="d0">ENABLES</data>
</edge>
<edge source="SAME-PRIVILEGE LEVEL INTERRUPTS" target="HORIZONTAL INTERRUPTS">
  <data key="d0">ARE ALSO CALLED</data>
</edge>
<edge source="THIS SCHEME" target="INTERRUPTS TO BE DIVIDED ACCORDING TO THEIR PRIORITIES ON THE PLIC-LEVEL">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THIS SCHEME" target="SOME FLEXIBILITY IN TERMS OF PRIORITIZATION">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THIS SCHEME" target="THE FLEXIBILITY PROBLEM ON THE CORE LOCAL-LEVEL">
  <data key="d0">DOES NOT ADDRESS</data>
</edge>
<edge source="CLIC 15" target="THESE LIMITATIONS">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="CLIC 15" target="INTERRUPTS TO BE PRIORITIZED">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="MULTIPLE HORIZONTAL INTERRUPTS" target="EQUAL LEVELS AND PRIORITIES">
  <data key="d0">HAVE</data>
</edge>
<edge source="THE CASE WHERE MULTIPLE HORIZONTAL INTERRUPTS HAVE EQUAL LEVELS AND PRIORITIES" target="THE CLIC SELECTING THE HIGHEST NUMBERED INTERRUPT 15">
  <data key="d0">RESULTS IN</data>
</edge>
<edge source="INTERRUPT 15" target="AN ARBITRARY ASSIGNMENT">
  <data key="d0">IS</data>
</edge>
<edge source="AN ARBITRARY ASSIGNMENT" target="DECIDED AT DESIGN TIME">
  <data key="d0">IS</data>
</edge>
<edge source="THIS FEATURE" target="RTOSS THAT ONLY WANT TO DISABLE A SUBSET OF ALL INTERRUPTS DURING CRITICAL SECTIONS">
  <data key="d0">IS USEFUL FOR</data>
</edge>
<edge source="THIS FEATURE" target="SEMI-SHADOWING">
  <data key="d0">IS COMBINED WITH</data>
</edge>
<edge source="THIS FEATURE" target="THE TOP (FLIP) AND BOTTOM (FLOP) HALVES OF THE RF AS RF COPIES">
  <data key="d0">USES</data>
</edge>
<edge source="ONLY A SUBSET OF INTERRUPTS" target="DISABLED">
  <data key="d0">NEED TO BE</data>
</edge>
<edge source="INTERRUPTS THAT DO NOT INTERFERE WITH THE DATA ACCESSED IN SUCH A CRITICAL SECTION" target="STILL FIRE">
  <data key="d0">CAN</data>
</edge>
<edge source="IRQ1 LEVEL" target="INTERRUPT THRESHOLD">
  <data key="d0">IS HIGHER THAN</data>
</edge>
<edge source="IRQ1 LEVEL" target="IRQ2 LEVEL">
  <data key="d0">IS HIGHER THAN</data>
</edge>
<edge source="INTERRUPTS FIRED FROM DIFFERENT PRIVILEGE MODES" target="VERTICAL INTERRUPTS">
  <data key="d0">ARE REFERRED TO AS</data>
</edge>
<edge source="INTERRUPTS FIRED FROM THE SAME PRIVILEGE MODE" target="HORIZONTAL INTERRUPTS">
  <data key="d0">ARE REFERRED TO AS</data>
</edge>
<edge source="PREEMPTION CONDITIONS" target="CLIC SPECIFICATION">
  <data key="d0">ARE ACCORDING TO</data>
</edge>
<edge source="THE CLIC SPECIFICATION" target="THE CASE OF REDUNDANT CONTEXT RESTORE">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="XNXTI" target="A CSR SHORT FOR NEXT INTERRUPT HANDLER ADDRESS">
  <data key="d0">IS</data>
</edge>
<edge source="XNXTI" target="AN INTERRUPT-ENABLE CSR">
  <data key="d0">IS</data>
</edge>
<edge source="XNXTI" target="NON-VECTORED INTERRUPTS">
  <data key="d0">IS MEANT FOR USE WITH</data>
</edge>
<edge source="XNXTI" target="THE INTERRUPT CONTEXT STORING PART ITSELF">
  <data key="d0">DOES NOT TOUCH</data>
</edge>
<edge source="XNXTI" target="A POINTER TO THE ADDRESS OF THE NEXT HANDLER">
  <data key="d0">RETURNS</data>
</edge>
<edge source="XNXTI" target="A SMALL CODE SEQUENCE">
  <data key="d0">NEEDS</data>
</edge>
<edge source="READING FROM THIS CSR" target="TO FAST-TRACK INTERRUPTS THAT ARRIVE LATE">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="READING FROM THIS CSR" target="TO AVOID REDUNDANT CONTEXT SAVERESTORE">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="REDUNDANT CONTEXT SAVERESTORE" target="RUNNING THROUGH PENDING INTERRUPTS BACK-TO-BACK">
  <data key="d0">IS AVOIDED BY</data>
</edge>
<edge source="ARCHITECTURE" target="HW TO STORE ENOUGH INFORMATION">
  <data key="d0">REQUIRES</data>
</edge>
<edge source="ARCHITECTURE" target="TYPICAL CASE SCENARIOS">
  <data key="d0">TACKLES</data>
</edge>
<edge source="ENOUGH INFORMATION" target="RESUME OPERATION CORRECTLY AFTER RETURNING FROM THE AFOREMENTIONED CONTEXT">
  <data key="d0">IS FOR</data>
</edge>
<edge source="THE BACKGROUND-SAVING MECHANISM" target="THE STACK POINTER">
  <data key="d0">UPDATES</data>
</edge>
<edge source="THE BACKGROUND-SAVING MECHANISM" target="THE BANK-SWITCHED CONTENTS IN MEMORY">
  <data key="d0">STORES</data>
</edge>
<edge source="THE BACKGROUND-SAVING MECHANISM" target="THE STATE SAVING AND RESTORING PART OF CONTEXT FIG">
  <data key="d0">TO ACCELERATE</data>
</edge>
<edge source="THE STACK POINTER" target="APPROPRIATELY TO MAINTAIN ABI INVARIANTS">
  <data key="d0">IS ADJUSTED</data>
</edge>
<edge source="THE EXECUTION OF THE CORE" target="IN PARALLEL">
  <data key="d0">PROCEEDS</data>
</edge>
<edge source="2" target="AN OVERVIEW OF THE DESIGN">
  <data key="d0">PROVIDES</data>
</edge>
<edge source="INCOMING INTERRUPTS" target="A GATEWAY MODULE">
  <data key="d0">ARE FILTERED WITH</data>
</edge>
<edge source="A GATEWAY MODULE" target="THERE IS A PENDING AND ENABLED REQUEST FOR EACH INTERRUPT SOURCE I (IRQ I)">
  <data key="d0">DECIDES WHETHER</data>
</edge>
<edge source="PROGRAMMABLE CONFIGURATION INFORMATION" target="EACH INTERRUPT LINE">
  <data key="d0">IS ABOUT</data>
</edge>
<edge source="EACH INTERRUPT LINE" target="LEVEL">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="EACH INTERRUPT LINE" target="PRIORITY">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="EACH INTERRUPT LINE" target="ENABLE STATUS">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="EACH INTERRUPT LINE" target="SENSITIVITY (LEVELEDGE)">
  <data key="d0">CONSISTS OF</data>
</edge>
<edge source="THE INTERRUPT PRIORITIZATION MODULE" target="THE TREE FROM LEAVES TO THE ROOT">
  <data key="d0">TRAVERSES</data>
</edge>
<edge source="THE INTERRUPT PRIORITIZATION MODULE" target="THE SOUGHT-AFTER MAXIMUM LEVEL AND PRIORITY INTERRUPT">
  <data key="d0">FINDS</data>
</edge>
<edge source="EACH TREE" target="LOW OVERHEAD IN TERMS OF AREA AND DELAY">
  <data key="d0">HAS</data>
</edge>
<edge source="OVERHEAD" target="O(N) AND O(LOG(N)) RESPECTIVELY">
  <data key="d0">IS</data>
</edge>
<edge source="THE INTERRUPT" target="THE CORE">
  <data key="d0">IS PRESENTED TO</data>
</edge>
<edge source="THE INTERRUPT" target="A HANDSHAKE-BASED INTERFACE">
  <data key="d0">IS PRESENTED WITH</data>
</edge>
<edge source="THE ADDITIONAL KILL SIGNAL" target="A HANDSHAKE TO RESTART">
  <data key="d0">IS THERE TO ALLOW FOR</data>
</edge>
<edge source="A HANDSHAKE TO RESTART" target="A POTENTIALLY MORE IMPORTANT INTERRUPT CAN BE PRESENTED TO THE CORE">
  <data key="d0">IS THERE SO THAT</data>
</edge>
<edge source="ADDITIONAL PIPELINE STAGES" target="THE ARBITRATION TREE">
  <data key="d0">CAN BE INSERTED IN</data>
</edge>
<edge source="ADDITIONAL PIPELINE STAGES" target="RELAX TIMING">
  <data key="d0">CAN BE INSERTED TO</data>
</edge>
<edge source="OUR VERSION OF THE CLIC" target="SHV">
  <data key="d0">SUPPORTS</data>
</edge>
<edge source="OUR VERSION OF THE CLIC" target="THE XNXTI CSR">
  <data key="d0">SUPPORTS</data>
</edge>
<edge source="THE XNXTI CSR" target="THE CORE">
  <data key="d0">IS IN</data>
</edge>
<edge source="THE CLIC" target="THIS WITH THE LEVELPRIORITY SCHEME">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="THE CLIC" target="AN HW-ASSISTED SOLUTION">
  <data key="d0">OFFERS</data>
</edge>
<edge source="THE ADDITIONAL PROCESSOR STATE" target="PROPER INTERRUPT NESTING">
  <data key="d0">IS REQUIRED FOR</data>
</edge>
<edge source="A NEW INTERRUPT AT THE CLIC" target="THE INTERRUPT LEVEL EXCEEDS THE CONFIGURED THRESHOLD">
  <data key="d0">WILL FIRST BE CHECKED WHETHER</data>
</edge>
<edge source="THE SAVING LOGIC FINITE STATE MACHINE (FSM)" target="THE EXTENDED RF">
  <data key="d0">IS IN</data>
</edge>
<edge source="THE CORES STATE MACHINE" target="THE PIPELINE">
  <data key="d0">WILL FLUSH</data>
</edge>
<edge source="THE CORES STATE MACHINE" target="THE PROGRAM COUNTER">
  <data key="d0">WILL UPDATE</data>
</edge>
<edge source="THE PROGRAM COUNTER" target="THE VECTOR TABLE ENTRY">
  <data key="d0">IS UPDATED ACCORDING TO</data>
</edge>
<edge source="SAVING LOGIC" target="BANK SWITCH">
  <data key="d0">TRIGGERS</data>
</edge>
<edge source="BANK SWITCH" target="INTERRUPT CONTEXT TO HAVE A FRESH SET OF REGISTERS">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="OTHER BANK CONTENTS" target="SEPARATE PORT TO THE MAIN MEMORY">
  <data key="d0">DRAIN THROUGH</data>
</edge>
<edge source="RF BANKS" target="ON AN INTERRUPT">
  <data key="d0">ARE SWITCHED</data>
</edge>
<edge source="STACK POINTER" target="DURING A BANK SWITCH">
  <data key="d0">NEED TO UPDATE</data>
</edge>
<edge source="STACK POINTER" target="ON AN INTERRUPT">
  <data key="d0">IS DECREMENTED</data>
</edge>
<edge source="STACK POINTER" target="SPACE AVAILABLE">
  <data key="d0">MAKES</data>
</edge>
<edge source="THE RISC-V EMBEDDED AND INTEGER ABI" target="THAT THE STACK POINTER POINTS BELOW THE LAST SAVED REGISTER ON THE STACK">
  <data key="d0">DICTATE</data>
</edge>
<edge source="THE PROGRAM CODE RUNNING IN THE INTERRUPT HANDLER" target="THE VALUES ON THE STACK">
  <data key="d0">COULD CLOBBER</data>
</edge>
<edge source="INTERACTIONS" target="BACKGROUND-SAVING MECHANISM AND REGULAR LOADSTORE INSTRUCTIONS OF THE CORE">
  <data key="d0">ARE BETWEEN</data>
</edge>
<edge source="INTERACTIONS" target="INCORRECT EXECUTION">
  <data key="d0">COULD RESULT IN</data>
</edge>
<edge source="LOAD INSTRUCTION" target="ARCHITECTURAL REGISTER">
  <data key="d0">IS TRYING TO UPDATE</data>
</edge>
<edge source="BACKGROUND-SAVING MECHANISM" target="SAME REGISTER">
  <data key="d0">IS TRYING TO READ</data>
</edge>
<edge source="BACKGROUND-SAVING MECHANISM" target="STACK MEMORY REGIONS">
  <data key="d0">IS WRITING TO</data>
</edge>
<edge source="BACKGROUND-SAVING MECHANISM" target="INTERRUPT STATE WORD BY WORD">
  <data key="d0">STARTS STORING</data>
</edge>
<edge source="NO CONFLICT" target="INTERRUPTS ARE INJECTED INTO THE PIPELINE">
  <data key="d0">ARISES BECAUSE</data>
</edge>
<edge source="UPDATES TO THE RF" target="RESOLVED">
  <data key="d0">ARE</data>
</edge>
<edge source="BANK SWITCHING OPERATION" target="AT THIS POINT">
  <data key="d0">TAKES PLACE</data>
</edge>
<edge source="BANK SWITCHING OPERATION" target="CORRECTNESS OF THE EXECUTION">
  <data key="d0">ENSURES</data>
</edge>
<edge source="INTERRUPT HANDLER" target="ALREADY EXECUTING">
  <data key="d0">IS</data>
</edge>
<edge source="INTERRUPT HANDLER" target="DEDICATED REGISTER BANK">
  <data key="d0">USES</data>
</edge>
<edge source="LOADS OR STORES" target="STACK MEMORY REGIONS">
  <data key="d0">ACCESS</data>
</edge>
<edge source="LOADS OR STORES ACCESSING STACK MEMORY REGIONS WHERE THE BACKGROUND-SAVING MECHANISM IS WRITING TO" target="PROPERLY RESOLVED">
  <data key="d0">NEED TO BE</data>
</edge>
<edge source="EXECUTION OF THE HANDLER" target="IF THIS HAPPENS WHILE THE BACKGROUND-SAVING MECHANISM IS STILL AT WORK">
  <data key="d0">HAS TO WAIT</data>
</edge>
<edge source="A STRAIGHTFORWARD SOLUTION" target="TO STALL THE CORES PIPELINE WHILE THE BACKGROUND-SAVING MECHANISM IS AT WORK">
  <data key="d0">IS</data>
</edge>
<edge source="ADDRESS OFFSET OF THE LAST WORD PUSHED OUT BY THE BACKGROUND-SAVING MECHANISM" target="ANY INCOMING LOAD AND STORES">
  <data key="d0">IS COMPARED AGAINST</data>
</edge>
<edge source="ADDRESS OFFSET OF THE LAST WORD" target="LOAD-STORE UNIT">
  <data key="d0">IS IN</data>
</edge>
<edge source="LOAD AND STORES THAT TRY TO ACCESS DATA THAT IS NOT YET PUSHED TO MEMORY" target="THE CORES PIPELINE TO STALL">
  <data key="d0">CAUSE</data>
</edge>
<edge source="THIS MECHANISM" target="THE CORRECTNESS OF LOADS AND STORES ISSUED BY THE CORE">
  <data key="d0">ENSURES</data>
</edge>
<edge source="A SYSTEM CALL HANDLER" target="THE ECALL INSTRUCTION IN RISC-V">
  <data key="d0">IS ISSUED THROUGH</data>
</edge>
<edge source="A SYSTEM CALL HANDLER" target="USER-PROVIDED ARGUMENTS">
  <data key="d0">WANTS TO ACCESS</data>
</edge>
<edge source="MOST" target="GENERAL-PURPOSE REGISTERS">
  <data key="d0">WILL BE PASSED THROUGH</data>
</edge>
<edge source="SOME" target="THE STACK">
  <data key="d0">MIGHT BE PLACED ON</data>
</edge>
<edge source="SHORT INTERRUPT HANDLERS" target="THE FULL INTERRUPT STATE HAS BEEN SAVED">
  <data key="d0">WANT TO RETURN BEFORE</data>
</edge>
<edge source="EACH OF THESE CASES" target="THE STALLING LOGIC OUTLINED IN SECTION III-C3">
  <data key="d0">WOULD POTENTIALLY ENGAGE</data>
</edge>
<edge source="THE STALLING LOGIC OUTLINED IN SECTION III-C3" target="HIGHER INTERRUPT LATENCIES">
  <data key="d0">CAUSES</data>
</edge>
<edge source="SOME REGISTER VALUES" target="BECAUSE THEY MIGHT NOT HAVE REACHED THE LOAD-STORE UNIT YET">
  <data key="d0">CANNOT BE FORWARDED</data>
</edge>
<edge source="THE APPROACH" target="HW COMPLEXITY">
  <data key="d0">INCREASES</data>
</edge>
<edge source="THE APPROACH" target="A DYNAMIC ADDRESS LOOKUP INTO A QUEUE-LIKE BUFFER">
  <data key="d0">REQUIRES</data>
</edge>
<edge source="AN SW-BASED SOLUTION" target="ANY KIND OF STALLING">
  <data key="d0">DOES NOT CAUSE</data>
</edge>
<edge source="THE PIPELINE STALLING LOGIC" target="ORDERING THE LOADS TO ACCESS THE ALREADY STORED INTERRUPT STATE FIRST">
  <data key="d0">IS ENGAGED BY</data>
</edge>
<edge source="THE CV32S RF" target="ADDITIONAL LOGIC FOR THE BACKGROUND-SAVING MECHANISM">
  <data key="d0">IS EXTENDED WITH</data>
</edge>
<edge source="PARTS OF THE OLD MEMORY BANK (THE INTERRUPT CONTEXT)" target="THE CORES STACK LOCATION">
  <data key="d0">ARE COPIED TO</data>
</edge>
<edge source="EXECUTION" target="THE NEW BANK">
  <data key="d0">CAN GO AHEAD BY USING</data>
</edge>
<edge source="THIS DESIGN" target="A DEDICATED MEMORY PORT FOR THE BACKGROUND-SAVING MECHANISM">
  <data key="d0">HAS</data>
</edge>
<edge source="THIS DESIGN" target="A LARGER AREA OVERHEAD COMPARED TO TRADITIONAL RISC-V CLINT 14">
  <data key="d0">INCURS</data>
</edge>
<edge source="THE MEMORY PORT" target="THE PORT FROM THE LOAD-STORE UNIT">
  <data key="d0">CAN BE SHARED WITH</data>
</edge>
<edge source="THE PROGRAMMER" target="THAT TO ACHIEVE THE BEST POSSIBLE LATENCY">
  <data key="d0">HAS TO BE AWARE OF</data>
</edge>
<edge source="PROGRAMMER" target="COMPILER-SPECIFIC ATTRIBUTES TO WRITE INTERRUPT HANDLERS">
  <data key="d0">USES</data>
</edge>
<edge source="ATTRIBUTE((INTERRUPT))" target="GCC">
  <data key="d0">IS USED IN</data>
</edge>
<edge source="COMPILER" target="THE FACT THAT PROGRAMMER USES COMPILER-SPECIFIC ATTRIBUTES">
  <data key="d0">NEEDS TO BE MADE AWARE OF</data>
</edge>
<edge source="INTERRUPT HANDLER ROUTINES" target="IN FIG.">
  <data key="d0">ARE SHOWN</data>
</edge>
<edge source="INTERRUPT HANDLER ROUTINES" target="SW-BASED MECHANISMS TO SAVE AND RESTORE INTERRUPT STATE">
  <data key="d0">USE</data>
</edge>
<edge source="INTERRUPT HANDLER ROUTINES" target="THE HANDLER CODE">
  <data key="d0">CAN FULLY INLINE</data>
</edge>
<edge source="INTERRUPT HANDLER ROUTINES" target="SOME CALLER-SAVE REGISTERS">
  <data key="d0">CAN SAVE</data>
</edge>
<edge source="ROUTINES" target="SAVING STATE FOR VECTORED NESTING INTERRUPTS">
  <data key="d0">ARE FOR</data>
</edge>
<edge source="ROUTINES" target="(A) CLINT">
  <data key="d0">USE</data>
</edge>
<edge source="ROUTINES" target="(B) CLIC">
  <data key="d0">USE</data>
</edge>
<edge source="ROUTINES" target="(C) PROPOSED FASTIRQ EXTENSION">
  <data key="d0">USE</data>
</edge>
<edge source="RV32E" target="16 REGISTERS">
  <data key="d0">HAS</data>
</edge>
<edge source="RV32I" target="32 REGISTERS">
  <data key="d0">HAS</data>
</edge>
<edge source="REDUCING THE RF SIZE" target="CONTEXT SWITCH TIMES">
  <data key="d0">HELPS LOWER</data>
</edge>
<edge source="REDUCING THE RF SIZE" target="INTERRUPT LATENCY">
  <data key="d0">DOES NOT AFFECT</data>
</edge>
<edge source="THE SET OF CALLER-SAVE REGISTERS" target="THE SAME">
  <data key="d0">REMAINS</data>
</edge>
<edge source="THE SET OF CALLER-SAVE REGISTERS" target="WHEN USING THE EMBEDDED-APPLICATION BINARY INTERFACE (EABI)">
  <data key="d0">REMAINS THE SAME</data>
</edge>
<edge source="OUR IMPLEMENTATION" target="THE CORE TO DYNAMICALLY SWITCH BETWEEN RV32I AND RV32E WITH FASTIRQ DEPENDING ON THE WORKLOAD">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="INCREASED PRESSURE ON THE RF" target="NOT ACCEPTABLE">
  <data key="d0">IS</data>
</edge>
<edge source="ONE" target="ADDITIONAL REGISTERS FOR THE SEVEN CALLER-SAVE REGISTERS TO SAVE AREA">
  <data key="d0">COULD ADD</data>
</edge>
<edge source="DOUBLING THE RF SIZE FOR THE BANKING LOGIC" target="ALTERNATIVE TO ADDING ADDITIONAL REGISTERS">
  <data key="d0">IS</data>
</edge>
<edge source="THE INTERRUPT STATE" target="SIMPLY SWITCHING REGISTER BANKS">
  <data key="d0">CAN BE RESTORED BY</data>
</edge>
<edge source="MRET" target="THE INTERRUPT STATE HAS BEEN RESTORED BY SW">
  <data key="d0">ASSUMES</data>
</edge>
<edge source="THIS INSTRUCTION" target="THE SAME FUNCTION AS MRET">
  <data key="d0">PERFORMS</data>
</edge>
<edge source="THIS INSTRUCTION" target="SWITCHING REGISTER BANKS">
  <data key="d0">PERFORMS</data>
</edge>
<edge source="AN HW-ASSISTED SOLUTION" target="SUCH A SCENARIO">
  <data key="d0">TO ADDRESS</data>
</edge>
<edge source="THE HW-ASSISTED SOLUTION" target="THE XNXTI CSRS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="NUCLEIS ENHANCED CLIC (ECLIC) 18" target="XNXTI">
  <data key="d0">EXTENDS</data>
</edge>
<edge source="NUCLEIS ENHANCED CLIC (ECLIC) 18" target="THE JUMP TO THE QUEUING INTERRUPT HANDLER IN THE XNXTI HW (JALXNXTI)">
  <data key="d0">EMBEDS</data>
</edge>
<edge source="NUCLEI SYSTEM TECHNOLOGY ECLIC 39" target="TRADITIONAL XNXTI">
  <data key="d0">EXTENDS</data>
</edge>
<edge source="NUCLEI SYSTEM TECHNOLOGY ECLIC 39" target="A NOVEL CSR FOR MACHINE PRIVILEGE MODE">
  <data key="d0">HAS</data>
</edge>
<edge source="JALMNXTI 18" target="THIS WORK IN SECTION IV">
  <data key="d0">IS DISCUSSED IN</data>
</edge>
<edge source="SOME HW" target="THIS CONCEPT OF REMOVING REDUNDANT CONTEXT RESTORES AS TAIL-CHAINING 23">
  <data key="d0">REFERS TO</data>
</edge>
<edge source="INTERRUPT RESPONSE TIME" target="MINIMIZED">
  <data key="d0">IS</data>
</edge>
<edge source="A HIGH-LEVEL INTERRUPT" target="THE CURRENT RUNNING INTERRUPT HANDLER">
  <data key="d0">COULD PREEMPT</data>
</edge>
<edge source="THIS COMBINATION OF LATENCY HIDING AND BACKGROUND SAVING" target="THE CORE TO QUICKLY ENTER A FIRST-LEVEL INTERRUPT HANDLER">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="MIE" target="TO PREVENT THAT">
  <data key="d0">HAS TO BE MANUALLY ADJUSTED</data>
</edge>
<edge source="LOWER-PRIORITY INTERRUPTS" target="DISABLED">
  <data key="d0">ARE</data>
</edge>
<edge source="THIS RETURN PATH" target="HW BY ADDING AN ADDITIONAL WRITE PORT TO THE CORES RF">
  <data key="d0">COULD BE HANDLED IN</data>
</edge>
<edge source="EXITING AN INTERRUPT HANDLER" target="LESS TIME-CRITICAL">
  <data key="d0">IS</data>
</edge>
<edge source="CONTEXT SWITCHES" target="OS-SPECIFIC PARTS">
  <data key="d0">CAN BE DIVIDED INTO</data>
</edge>
<edge source="CONTEXT SWITCHES" target="HW-SPECIFIC PARTS">
  <data key="d0">CAN BE DIVIDED INTO</data>
</edge>
<edge source="THE OS PART" target="ALL CONTRIBUTIONS TO THE CONTEXT SWITCH TIME THAT IS SPECIFIC TO THE OS ITSELF">
  <data key="d0">ENTAILS</data>
</edge>
<edge source="THE OS PART" target="COMPUTING THE NEXT TASK TO BE SCHEDULED">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="THE OS PART" target="BOOKKEEPING OPERATIONS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="THE REMAINDER" target="THE HW-DEPENDENT SAVING AND RESTORING OF THE STATE BELONGING TO THE NEW CONTEXT">
  <data key="d0">IS</data>
</edge>
<edge source="THE IDEA" target="THE BACKGROUND-SAVING MECHANISM">
  <data key="d0">IS TO USE</data>
</edge>
<edge source="SWITCHES" target="INTERLEAVING THE LOADING OF A NEW STATE WITH THE AUTOMATIC SAVING HW">
  <data key="d0">BY</data>
</edge>
<edge source="THE HW MECHANISM" target="THE REGISTERS">
  <data key="d0">TO SWAP</data>
</edge>
<edge source="THE HW MECHANISM" target="THEM IN THE BACKGROUND">
  <data key="d0">TO SAVE</data>
</edge>
<edge source="THE INITIAL PART OF THE CONTEXT SWITCH ROUTINE" target="FOR THAT">
  <data key="d0">CHANGES</data>
</edge>
<edge source="ANY" target="CONTEXT SWITCHING">
  <data key="d0">IMPACT ON</data>
</edge>
<edge source="ADDITIONAL RISC-V EXTENSIONS" target="MORE CONTEXT SWITCHING STATE">
  <data key="d0">INTRODUCE</data>
</edge>
<edge source="MORE CONTEXT SWITCHING STATE" target="CONTRARY TO THE GOALS OF FASTIRQ REGARDING LATENCIES">
  <data key="d0">RUN</data>
</edge>
<edge source="ADDING MORE STATE TO FASTIRQ" target="NO TECHNICAL LIMITATIONS">
  <data key="d0">HAS</data>
</edge>
<edge source="THE RESULTING DESIGN" target="A SIGNIFICANT INCREASE IN AREA AND POWER">
  <data key="d0">WOULD INCUR</data>
</edge>
<edge source="A DIRTY BIT" target="KEEP THE FAST PATH COMPETITIVE">
  <data key="d0">COULD HELP TO</data>
</edge>
<edge source="A DIRTY BIT" target="CONTEXT LAZY SWITCHABLE">
  <data key="d0">IS TO MAKE</data>
</edge>
<edge source="A SPECIFIC EXTENSION" target="REQUIRED">
  <data key="d0">IS STILL</data>
</edge>
<edge source="THIS SECTION" target="A FUNCTIONAL AND QUANTITATIVE EVALUATION">
  <data key="d0">GIVES</data>
</edge>
<edge source="THIS SECTION" target="THE LEADING SOLUTIONS TO OPTIMIZE HANDLING ASYNCHRONOUS EVENTS IN STATE-OF-THE-ART EMBEDDED AND REAL-TIME MCUS">
  <data key="d0">DESCRIBES</data>
</edge>
<edge source="A FUNCTIONAL AND QUANTITATIVE EVALUATION" target="THE VARIOUS FLAVORS OF THE CV32RT">
  <data key="d0">OF</data>
</edge>
<edge source="INTERRUPT LINES" target="A HARDWIRED PRIORITIZATION SCHEME">
  <data key="d0">HAVE</data>
</edge>
<edge source="THE BASELINE CLIC" target="THESE WEAKNESSES">
  <data key="d0">ADDRESSES</data>
</edge>
<edge source="THE BASELINE CLIC" target="THE REGULAR CLINT">
  <data key="d0">DOES NOT DIFFER FROM</data>
</edge>
<edge source="THE BASELINE CLIC" target="STORING AND RESTORING THE INTERRUPT CONTEXT">
  <data key="d0">DOES NOT DIFFER FROM THE REGULAR CLINT IN TERMS OF</data>
</edge>
<edge source="A LEVEL THRESHOLD REGISTER PER PRIVILEGE LEVEL (XINTTHRESH)" target="THE SET OF ALLOWED HORIZONTAL INTERRUPTS">
  <data key="d0">CONTROLS</data>
</edge>
<edge source="THE LEVEL THRESHOLD REGISTER PER PRIVILEGE LEVEL (XINTTHRESH)" target="THE SET OF ALLOWED HORIZONTAL INTERRUPTS TO THOSE WHOSE LEVEL EXCEEDS THE GIVEN VALUE IN THE REGISTER">
  <data key="d0">LIMITS</data>
</edge>
<edge source="VECTORING" target="SELECTIVELY ENABLED OR DISABLED PER INTERRUPT LINE">
  <data key="d0">CAN BE</data>
</edge>
<edge source="THIS SOLUTION" target="BOTH VECTORED AND NON-VECTORED INTERRUPTS">
  <data key="d0">WORKS FOR</data>
</edge>
<edge source="STORING AND RESTORING THE INTERRUPT CONTEXT" target="SW">
  <data key="d0">IS FULLY HANDLED IN</data>
</edge>
<edge source="THE OPTIONAL XNXTI EXTENSION" target="MULTIPLE HORIZONTAL INTERRUPTS TO BE SERVICED IN SEQUENCE WITHOUT REDUNDANT CONTEXT-RESTORING OPERATIONS IN BETWEEN">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THE FIRST INTERRUPT" target="THE FULL LATENCY COST">
  <data key="d0">HAS TO PAY</data>
</edge>
<edge source="READING THE XNXTI CSR" target="A POINTER TO THE VECTOR TABLE ENTRY FOR THE NEXT PENDING AND QUALIFYING INTERRUPT">
  <data key="d0">YIELDS</data>
</edge>
<edge source="THE POINTER" target="A DIRECT JUMP THERE">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THIS APPROACH" target="THE LATENCY ADVANTAGE OF HW VECTORING">
  <data key="d0">LOSES</data>
</edge>
<edge source="THIS APPROACH" target="AN SW EMULATION THEREOF">
  <data key="d0">RUNS</data>
</edge>
<edge source="THIS APPROACH" target="LOWERING INTERRUPT LATENCY AND TASK CONTEXT SWITCHES DRAMATICALLY">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THIS APPROACH" target="FLEXIBILITY">
  <data key="d0">LACKS</data>
</edge>
<edge source="THIS APPROACH" target="REPLICATING HARDWARE RESOURCES PER TASK">
  <data key="d0">REQUIRES</data>
</edge>
<edge source="THE DISCUSSED DIFFERENCES" target="TABLE II">
  <data key="d0">ARE SUMMARIZED IN</data>
</edge>
<edge source="MEASUREMENTS" target="RUNNING RTL SIMULATIONS">
  <data key="d0">ARE TAKEN BY</data>
</edge>
<edge source="RTL SIMULATIONS" target="DIFFERENT VERSIONS OF CV32RT">
  <data key="d0">ARE OF</data>
</edge>
<edge source="THE MEMORY BANK WE ARE USING" target="OTHER BUS MASTERS">
  <data key="d0">IS NOT CONTENDED BY</data>
</edge>
<edge source="ADDITIONAL LATENCIES" target="ON INTERRUPT LINES BETWEEN INTERRUPT SOURCES AND THE CLIC">
  <data key="d0">ARE NOT INTRODUCED</data>
</edge>
<edge source="HW CONTRIBUTED INTERRUPT LATENCY" target="SECTION II-B3">
  <data key="d0">IS DESCRIBED IN</data>
</edge>
<edge source="CV32 AND CV32RT VARIATIONS" target="STANDARD CLIC, XNXTI, JALXNXTI">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="9" target="THE AREA BREAKDOWN COMPARISON OF CV32RT WITH BASELINE CLIC (INCLUDING MNXTI AND JALMNXTI CSRS) AND FASTIRQ EXTENSIONS WITH 256 INPUT INTERRUPTS">
  <data key="d0">REPORTS</data>
</edge>
<edge source="ALL CALLER-SAVE REGISTERS" target="SAVED">
  <data key="d0">NEED TO BE</data>
</edge>
<edge source="ALL CALLER-SAVE REGISTERS" target="THE RESPECTIVE ABI">
  <data key="d0">ARE IN</data>
</edge>
<edge source="ALL CALLER-SAVE REGISTERS NEED TO BE SAVED" target="THE GENERAL CASE">
  <data key="d0">IS</data>
</edge>
<edge source="THE SAVED GENERAL-PURPOSE REGISTERS" target="ALL CALLER-SAVE REGISTERS">
  <data key="d0">ARE</data>
</edge>
<edge source="INTERRUPT HANDLER ROUTINES THAT SAVE THE INTERRUPT CONTEXT IN SW" target="THE MINIMUM STATE">
  <data key="d0">CAN ONLY SAVE</data>
</edge>
<edge source="THE COMPILER" target="FULLY INLINE THE HANDLERS FUNCTION BODY">
  <data key="d0">IS ABLE TO</data>
</edge>
<edge source="THE COMPILER" target="FULLY INLINE THE HANDLER CODE">
  <data key="d0">PERMITS</data>
</edge>
<edge source="ONLY ONE CALLER-SAVE REGISTER" target="SAVING FOR SW-BASED INTERRUPT HANDLERS">
  <data key="d0">NEEDS</data>
</edge>
<edge source="THIS AMOUNT OF STATE" target="FOR OUR FASTIRQ EXTENSION">
  <data key="d0">IS ALWAYS SAVED</data>
</edge>
<edge source="TABLE III" target="THE MAIN TECHNIQUES FOR OPTIMIZING INTERRUPT CONTEXT AND TASK CONTEXT SAVE-RESTORE WITH NESTED AND NON-NESTED INTERRUPTS">
  <data key="d0">COMPARES</data>
</edge>
<edge source="TABLE III" target="THE OVERVIEW">
  <data key="d0">SUMMARIZES</data>
</edge>
<edge source="THE MAIN TECHNIQUES" target="INDUSTRY AND ACADEMIA">
  <data key="d0">ARE EMPLOYED BY</data>
</edge>
<edge source="THE MAIN TECHNIQUES" target="EMBEDDED AND REAL-TIME APPLICATION DOMAINS">
  <data key="d0">ARE USED IN</data>
</edge>
<edge source="THE RESULTS" target="FIG.">
  <data key="d0">ARE SUMMARIZED IN</data>
</edge>
<edge source="SEVERAL DESIGNS" target="THE INTERRUPT CONTEXT">
  <data key="d0">SAVE AND RESTORE</data>
</edge>
<edge source="SEVERAL DESIGNS" target="THE INTERRUPT CONTEXT DIRECTLY IN HW">
  <data key="d0">SAVE AND RESTORE</data>
</edge>
<edge source="AUTOMATIC INTERRUPT CONTEXT SAVERESTORE" target="SW HOUSEKEEPING OVERHEAD BEFORE AND AFTER HANDLING THE INTERRUPT ROUTINE">
  <data key="d0">REDUCES</data>
</edge>
<edge source="AUTOMATIC INTERRUPT CONTEXT SAVERESTORE" target="ACCELERATION OF THE COMPLETE TASK CONTEXT SWITCH">
  <data key="d0">ONLY PARTIALLY ADDRESSES</data>
</edge>
<edge source="PRESENTED SOLUTIONS" target="OPTIMIZING CONTEXT">
  <data key="d0">ARE EFFECTIVE IN</data>
</edge>
<edge source="PRESENTED SOLUTIONS" target="A COHESIVE APPROACH TO ADDRESS BOTH INTERRUPT CONTEXT AND TASK CONTEXT SWITCH ACCELERATION">
  <data key="d0">LACK</data>
</edge>
<edge source="SAVERESTORE WITH HW AND SW COOPERATION" target="OPTIMIZING CONTEXT">
  <data key="d0">ARE EFFECTIVE IN</data>
</edge>
<edge source="EXISTING RISC-V-BASED APPROACHES" target="THE GAP WITH WELL-ESTABLISHED INDUSTRY VENDORS">
  <data key="d0">CANNOT CLOSE</data>
</edge>
<edge source="INTERRUPT CONTEXT SAVERESTORE" target="THE FORMER">
  <data key="d0">TAKES ADVANTAGE OF</data>
</edge>
<edge source="INTERRUPT CONTEXT SAVERESTORE" target="THE HW">
  <data key="d0">DEFERS OPERATIONS TO</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="EVEN WORSE">
  <data key="d0">PERFORM</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="42 AND 35 CYCLES RESPECTIVELY">
  <data key="d0">REQUIRE</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="ADDITIONAL INSTRUCTIONS IN THE CODE PATH BETWEEN THE HANDLER AND INTERRUPT EVENT">
  <data key="d0">INSERT</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="THIS SITUATION">
  <data key="d0">IMPROVE UPON</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="PENDING INTERRUPTS">
  <data key="d0">CHECK FOR</data>
</edge>
<edge source="XNXTI AND JALXNXTI" target="THE RESPECTIVE HANDLERS">
  <data key="d0">JUMP TO</data>
</edge>
<edge source="THE SMALL CODE SEQUENCE" target="LOAD, JUMP, AND RETRY LOOP">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="JALXNXTI" target="THESE OPERATIONS INTO ONE INSTRUCTION">
  <data key="d0">FUSES</data>
</edge>
<edge source="FUSING THESE OPERATIONS INTO ONE INSTRUCTION" target="SAVING NINE CYCLES">
  <data key="d0">RESULTS IN</data>
</edge>
<edge source="ARM CORTEX-M4" target="INTERRUPT LATENCY OF 12 CYCLES">
  <data key="d0">HAS</data>
</edge>
<edge source="THE ARM CORTEX-M4" target="THE SAME TASK IN SIX CYCLES">
  <data key="d0">IS ABLE TO DO</data>
</edge>
<edge source="THE ARM CORTEX-M4" target="SINGLE-CYCLE MEMORY 24">
  <data key="d0">HAS ACCESS TO</data>
</edge>
<edge source="BASELINE CLIC" target="68 CYCLES WHEN USING INTEGER ABI">
  <data key="d0">TAKES</data>
</edge>
<edge source="BASELINE CLIC" target="50 CYCLES WHEN USING EMBEDDED ABI">
  <data key="d0">TAKES</data>
</edge>
<edge source="THE EMRET MECHANISM OF FASTIRQ" target="SIMILARLY">
  <data key="d0">WORKS</data>
</edge>
<edge source="THE EMRET MECHANISM OF FASTIRQ" target="EIGHT CLOCK CYCLES">
  <data key="d0">COSTS</data>
</edge>
<edge source="THE EMRET MECHANISM OF FASTIRQ" target="NON-VECTORED INTERRUPTS">
  <data key="d0">IS NOT RESTRICTED TO</data>
</edge>
<edge source="THE CONTEXT SWITCH TIME" target="THE BASELINE CV32RT AGAINST CV32RTFASTIRQ">
  <data key="d0">IS SHOWN WHEN COMPARING</data>
</edge>
<edge source="AVERAGE CONTEXT SWITCH TIME" target="FREERTOS">
  <data key="d0">IS IN</data>
</edge>
<edge source="AVERAGE CONTEXT SWITCH TIME" target="TWO TASKS">
  <data key="d0">IS FOR</data>
</edge>
<edge source="FREERTOS" target="REAL-TIME OPERATING SYSTEM FOR MICROCONTROLLERS">
  <data key="d0">IS</data>
</edge>
<edge source="TWO TASKS" target="VARIOUS FLAVORS OF CV32RT">
  <data key="d0">ARE OF</data>
</edge>
<edge source="ALL COMPILE TIME OPTIONS SUCH AS TRACING, STACK OVERFLOW SIGNALING, AND THE MORE GENERIC TASK SELECTION MECHANISM" target="TURNED OFF">
  <data key="d0">WERE</data>
</edge>
<edge source="ALL COMPILE TIME OPTIONS SUCH AS TRACING, STACK OVERFLOW SIGNALING, AND THE MORE GENERIC TASK SELECTION MECHANISM" target="MINIMIZE THE CONTEXT SWITCH CODE">
  <data key="d0">WERE TURNED OFF TO</data>
</edge>
<edge source="GENERIC CORTEX-M4 CORE" target="SINGLE-CYCLE ACCESS TO MEMORY">
  <data key="d0">HAS</data>
</edge>
<edge source="AN SW INTERRUPT" target="THE SAVE SEQUENCE">
  <data key="d0">IS PART OF</data>
</edge>
<edge source="THE SW INTERRUPT" target="THE FASTIRQ MECHANISM">
  <data key="d0">WILL TRIGGER</data>
</edge>
<edge source="THE FASTIRQ MECHANISM" target="SAVING THE GENERAL-PURPOSE REGISTERS TO MEMORY">
  <data key="d0">STARTS</data>
</edge>
<edge source="USING THE I-EXTENSION" target="31 CYCLES FOR A CONTEXT SWITCH">
  <data key="d0">CAN SAVE UP TO</data>
</edge>
<edge source="USING THE E-EXTENSION" target="16 CYCLES FOR A CONTEXT SWITCH">
  <data key="d0">CAN SAVE UP TO</data>
</edge>
<edge source="NOT TO USE REGISTERS THAT ARE STILL BEING SAVED BY THE BACKGROUND-SAVING MECHANISM" target="SAVING CYCLES FOR A CONTEXT SWITCH">
  <data key="d0">RESULTS IN</data>
</edge>
<edge source="SOME SOCS SUCH AS THE STM32L476RG" target="HIGHER LATENCIES">
  <data key="d0">HAVE</data>
</edge>
<edge source="HIGHER LATENCIES" target="MEMORY ACCESS STALLS AND OTHER IMPLEMENTATION CHOICES IN THE MEMORY SUBSYSTEM">
  <data key="d0">ARE DUE TO</data>
</edge>
<edge source="THE RISC-V E-EXTENSION" target="THE AVAILABLE GENERAL-PURPOSE REGISTERS FROM 32 TO 16">
  <data key="d0">REDUCES</data>
</edge>
<edge source="THE RISC-V E-EXTENSION" target="THE CONTEXT SWITCH STATE THAT NEEDS TO BE SAVED AND RESTORED">
  <data key="d0">LOWERS</data>
</edge>
<edge source="RISC-V CLIC AREA" target="VARYING NUMBERS OF INTERRUPT SOURCES">
  <data key="d0">BREAKDOWN AT</data>
</edge>
<edge source="REPORTS" target="THE CLIC IMPLEMENTED">
  <data key="d0">THE AREA BREAKDOWN OF</data>
</edge>
<edge source="THE PROPOSED" target="DIFFERENT INTERRUPT SOURCES">
  <data key="d0">HAS</data>
</edge>
<edge source="AREA OVERHEAD" target="CV32RT">
  <data key="d0">OF</data>
</edge>
<edge source="AREA OVERHEAD OF CV32RT" target="THE TWO MAIN CONFIGURATIONS">
  <data key="d0">IN</data>
</edge>
<edge source="THE OVERHEAD OF FASTIRQ IN CV32RTFASTIRQ CORE" target="A MINIMAL 10 AREA INCREASE">
  <data key="d0">RESULTS IN</data>
</edge>
<edge source="A MINIMAL 10 AREA INCREASE" target="THE ID STAGE">
  <data key="d0">IS CONCENTRATED AROUND</data>
</edge>
<edge source="THE ID STAGE" target="THE HW BLOCK WHERE THE ADDITIONAL REGISTERS AND THE AUTOMATIC STACKING-UNSTACKING LOGIC ARE LOCALIZED">
  <data key="d0">IS</data>
</edge>
<edge source="THE DESIGN" target="GF12LP TECHNOLOGY">
  <data key="d0">HAS BEEN SYNTHESIZED IN</data>
</edge>
<edge source="GF12LP TECHNOLOGY" target="500 MHZ">
  <data key="d0">OPERATES AT</data>
</edge>
<edge source="GF12LP TECHNOLOGY" target="TT CORNER">
  <data key="d0">USES</data>
</edge>
<edge source="GF12LP TECHNOLOGY" target="25 C">
  <data key="d0">OPERATES AT TEMPERATURE</data>
</edge>
<edge source="GF12LP TECHNOLOGY" target="0.8 V">
  <data key="d0">OPERATES AT VOLTAGE</data>
</edge>
<edge source="GF12LP TECHNOLOGY" target="SUPER LOW VT STANDARD CELLS">
  <data key="d0">INCLUDES</data>
</edge>
<edge source="CV32E40PRT ID STAGE" target="AREA BREAKDOWN WITH THE PROPOSED HW EXTENSIONS">
  <data key="d0">HAS</data>
</edge>
<edge source="MORE THAN HALF OF THE RESOURCES" target="THE CONFIGURATION REGISTERS REQUIRED TO CONTROL THE CLIC">
  <data key="d0">IMPLEMENT</data>
</edge>
<edge source="THE SIZE" target="LINEARLY WITH THE NUMBER OF INPUT INTERRUPTS">
  <data key="d0">INCREASES</data>
</edge>
<edge source="THE REMAINING AREA" target="THE GATEWAY AND BINARY TREE ARBITRATION LOGIC AT THE CORE OF THE CLIC WORKING PRINCIPLE">
  <data key="d0">IMPLEMENTS</data>
</edge>
<edge source="THE REMAINING AREA" target="ADDITIONAL HOUSEKEEPING CONTROL LOGIC">
  <data key="d0">IMPLEMENTS</data>
</edge>
<edge source="THE GATEWAY AND BINARY TREE ARBITRATION LOGIC" target="SECTION III-B">
  <data key="d0">IS DISCUSSED IN</data>
</edge>
<edge source="ADDITIONAL HOUSEKEEPING CONTROL LOGIC" target="LINEARLY WITH THE NUMBER OF INTERRUPT SOURCES">
  <data key="d0">SCALES</data>
</edge>
<edge source="THE FRACTION OF THE DESIGN OCCUPIED BY THE ARBITRATION TREE" target="WHEN INCREASING THE NUMBER OF SOURCES">
  <data key="d0">IS KEPT CONSTANT</data>
</edge>
<edge source="THE GAIN IN FLEXIBILITY" target="A BROADER APPLICATION SCOPE WITH TIME-CRITICAL SYSTEMS">
  <data key="d0">ENABLES</data>
</edge>
<edge source="INSTRUCTION DECODE (ID) STAGE" target="AN AREA OVERHEAD OF 21 COMPARED TO CV32RTCLIC">
  <data key="d0">INCURS</data>
</edge>
<edge source="OTHER HW BLOCKS OF THE CORE" target="PRIMARILY UNAFFECTED">
  <data key="d0">REMAIN</data>
</edge>
<edge source="A BREAKDOWN OF THE ID STAGE" target="FIG.">
  <data key="d0">IS SHOWN IN</data>
</edge>
<edge source="ADDITIONAL STORAGE SPACE FOR AUTOMATIC CONTEXT SAVE AND RESTORE IN HW" target="AREA OF THE RF BY ABOUT 36 IN THE PROPOSED IMPLEMENTATION">
  <data key="d0">INCREASES</data>
</edge>
<edge source="THE LOGIC FOR MANAGING THE SHADOW REGISTERS" target="AN OVERHEAD OF 40 ON THE BASELINE ID STAGE CONTROLLER">
  <data key="d0">ACCOUNTS FOR</data>
</edge>
<edge source="HW OVERHEAD" target="NEGLIGIBLE">
  <data key="d0">IS</data>
</edge>
<edge source="HW OVERHEAD" target="ADDITIONAL EMRET INSTRUCTION">
  <data key="d0">COMES FROM</data>
</edge>
<edge source="ADDITIONAL EMRET INSTRUCTION" target="SECTION IV">
  <data key="d0">IS DISCUSSED IN</data>
</edge>
<edge source="INCREASED SIZE OF THE ID STAGE" target="BENEFITS OF A SIMPLIFIED PROGRAMMING MODEL THAT MOVES SEVERAL SW OPERATIONS IN HW">
  <data key="d0">TRADES OFF</data>
</edge>
<edge source="INCREASED SIZE OF THE ID STAGE" target="BENEFITS OF SIGNIFICANTLY LOWERED INTERRUPT LATENCY THAN STANDARD RISC-V">
  <data key="d0">TRADES OFF</data>
</edge>
<edge source="INCREASED SIZE OF THE ID STAGE" target="CRITICAL PATH OF THE BASE CORE DESIGN">
  <data key="d0">DOES NOT IMPACT</data>
</edge>
<edge source="TIME-CRITICAL SYSTEMS" target="AREA EFFICIENCY">
  <data key="d0">SHIFT DESIGN PRIORITIES FROM</data>
</edge>
<edge source="TIME-CRITICAL SYSTEMS" target="SAFETY, SECURITY, AND RELIABILITY">
  <data key="d0">SHIFT DESIGN PRIORITIES TO</data>
</edge>
<edge source="SOLUTIONS" target="INTERRUPT CONTEXT SAVERESTORE TECHNIQUES">
  <data key="d0">ADDRESS</data>
</edge>
<edge source="SOLUTIONS" target="CONTEXT SWITCH TECHNIQUES">
  <data key="d0">ADDRESS</data>
</edge>
<edge source="SOLUTIONS" target="DEDICATED STRATEGIES TO OPTIMIZE REDUNDANT CONTEXT RESTORE WITH BACK-TO-BACK INTERRUPTS">
  <data key="d0">ADDRESS</data>
</edge>
<edge source="RETURN AUTHORIZED LICENSED USE" target="CALIFORNIA POLYTECHNIC STATE UNIVERSITY SAN LUIS OBISPO">
  <data key="d0">IS LIMITED TO</data>
</edge>
<edge source="REFERENCES" target="TABLE III">
  <data key="d0">ARE PROVIDED IN</data>
</edge>
<edge source="ARMS GENERIC INTERRUPT CONTROLLER (GIC)" target="INCOMING ASYNCHRONOUS EVENTS">
  <data key="d0">REDISTRIBUTES</data>
</edge>
<edge source="INCOMING ASYNCHRONOUS EVENTS" target="NON-CRITICAL (IRQ) OR CRITICAL INTERRUPTS (FAST IRQ, OR FIQ)">
  <data key="d0">ARE REDISTRIBUTED AS</data>
</edge>
<edge source="DEDICATED REGISTER BANK" target="UP TO EIGHT REGISTERS">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="UP TO EIGHT REGISTERS" target="MINIMIZE CONTEXT SWITCHING">
  <data key="d0">ARE EMPLOYED TO</data>
</edge>
<edge source="STATE MACHINE 32" target="CALLER-SAVE REGISTER STACKING IN THE BACKGROUND">
  <data key="d0">PERFORMS</data>
</edge>
<edge source="THE VALUE (EXCRETURN)" target="THE CORE TO START UNWINDING THE STACK TO RETURN TO NORMAL PROGRAM EXECUTION">
  <data key="d0">NOTIFIES</data>
</edge>
<edge source="INTERRUPT CONTROL UNIT (ICU) 33, 34, 35" target="INFINEON AURIX MCU-CLASS TRICORE FAMILYS">
  <data key="d0">IS IN</data>
</edge>
<edge source="THE CONTEXT OF THE CALLING ROUTINE" target="MEMORY AUTONOMOUSLY">
  <data key="d0">IS SAVED IN</data>
</edge>
<edge source="RESTORING THE CONTEXT" target="THE RET INSTRUCTION">
  <data key="d0">IS EMBEDDED IN</data>
</edge>
<edge source="RESTORING THE CONTEXT" target="THE RETURN JUMP 36">
  <data key="d0">HAPPENS IN PARALLEL WITH</data>
</edge>
<edge source="27" target="EXTENSIONS FOR THE RISC-V CLIC">
  <data key="d0">ARE THE FIRST TO PROPOSE</data>
</edge>
<edge source="INTERRUPT HANDLING" target="AUTOMATIC STACKING IN HW">
  <data key="d0">IS ENHANCED WITH</data>
</edge>
<edge source="AUTOMATIC STACKING IN HW" target="CORES HARVARD ARCHITECTURE">
  <data key="d0">BENEFITS FROM</data>
</edge>
<edge source="AUTOMATIC STACKING IN HW" target="SIMULTANEOUS DATA AND INSTRUCTION MEMORY ACCESS">
  <data key="d0">BENEFITS FROM</data>
</edge>
<edge source="REGISTER BANKING" target="A TECHNIQUE">
  <data key="d0">IS</data>
</edge>
<edge source="REGISTER BANKING" target="SEVERAL ARCHITECTURES">
  <data key="d0">IS ADOPTED BY</data>
</edge>
<edge source="REGISTER BANKING" target="TASKS CONTEXT">
  <data key="d0">SWAPS</data>
</edge>
<edge source="REGISTER BANKING" target="REGISTER VALUES TO THE STACK">
  <data key="d0">DOES NOT PUSH OR POP</data>
</edge>
<edge source="REGISTER BANKING" target="ADDITIONAL AREA OVERHEAD IN THE DESIGN">
  <data key="d0">HAS COST</data>
</edge>
<edge source="A TASKS CONTEXT SWITCH" target="QUICKLY TRANSFERRING THE SUSPENDED CONTEXT TO THE DEDICATED REGISTER BANK">
  <data key="d0">BENEFITS FROM</data>
</edge>
<edge source="A TASKS CONTEXT SWITCH" target="ALREADY RESTORING THE NEXT TASK TO BE EXECUTED">
  <data key="d0">BENEFITS FROM</data>
</edge>
<edge source="A SIMILAR APPROACH" target="THE RENESAS M32C80 SERIES 30">
  <data key="d0">IS IMPLEMENTED IN</data>
</edge>
<edge source="A DUAL REGISTER BANK" target="QUICKLY SWAPPING THE CONTEXT WITHOUT SAVING OR RESTORING TO OR FROM THE STACK">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="THE SECOND REGISTER BANK" target="HIGH-SPEED INTERRUPTS">
  <data key="d0">IS RESERVED FOR</data>
</edge>
<edge source="THE AURIX FAMILY" target="AN SW MANAGED SOLUTION">
  <data key="d0">IMPLEMENTS</data>
</edge>
<edge source="THE SW MANAGED SOLUTION" target="A SPECIFIC ORGANIZATION OF THE CONTEXT LAYOUT IN THE SYSTEM MEMORY">
  <data key="d0">FEATURES</data>
</edge>
<edge source="THE CONTEXT LAYOUT IN THE SYSTEM MEMORY" target="CONTEXT SAVE AREA (CSA) CHAINED IN A LINKED LIST FASHION">
  <data key="d0">IS BASED ON</data>
</edge>
<edge source="A MORE COMPLEX APPROACH" target="THE INTUITION THAT OFTEN THE CONTENT OF SOME REGISTER REMAINS UNTOUCHED AFTER A CONTEXT SWITCH">
  <data key="d0">IS BASED ON</data>
</edge>
<edge source="A MORE COMPLEX APPROACH" target="HUANG ET AL.">
  <data key="d0">IS INTRODUCED BY</data>
</edge>
<edge source="28" target="A VALID-BASED MECHANISM IN HW TO BLOCK CONTEXT SWITCH ON SELECTED REGISTERS">
  <data key="d0">ADOPTS</data>
</edge>
<edge source="28" target="REGISTER MOVEMENT BY ALMOST 50">
  <data key="d0">REDUCES</data>
</edge>
<edge source="VALID-BASED MECHANISM IN HW" target="CONTEXT SWITCH ON SELECTED REGISTERS">
  <data key="d0">BLOCKS</data>
</edge>
<edge source="SEMI-SHADOWING" target="REGISTER BANKING">
  <data key="d0">IS SIMILAR TO</data>
</edge>
<edge source="THE LOWER 16 ARCHITECTURAL REGISTERS" target="THE RF">
  <data key="d0">ARE OF</data>
</edge>
<edge source="THE EVALUATION IN 28" target="HW IMPLEMENTATION">
  <data key="d0">LACKS</data>
</edge>
<edge source="THE EVALUATION IN 28" target="AREA OVERHEAD ASSESSMENT">
  <data key="d0">LACKS</data>
</edge>
<edge source="THE EVALUATION IN 28" target="CONTEXT SWITCHING OVERHEAD">
  <data key="d0">REDUCES</data>
</edge>
<edge source="THE EVALUATION IN 28" target="24">
  <data key="d0">REDUCES CONTEXT SWITCHING OVERHEAD BY</data>
</edge>
<edge source="THE EVALUATION IN 28" target="THE DSPSTONE BENCHMARK">
  <data key="d0">REDUCES CONTEXT SWITCHING OVERHEAD BY 24 ON</data>
</edge>
<edge source="24" target="ARM">
  <data key="d0">IS</data>
</edge>
<edge source="THESE APPROACHES" target="HW- AND SW-INDUCED LATENCIES WHEN HANDLING ASYNCHRONOUS EVENTS">
  <data key="d0">TRADE-OFF</data>
</edge>
<edge source="26" target="A FULL HW SOLUTION BASED ON A HARDWARE SCHEDULING ENGINE (HSE)">
  <data key="d0">PROPOSE</data>
</edge>
<edge source="HARDWARE SCHEDULING ENGINE (HSE)" target="INTERRUPTS TO RUNNING TASKS">
  <data key="d0">DIRECTLY ATTACHES</data>
</edge>
<edge source="HARDWARE SCHEDULING ENGINE (HSE)" target="WITHOUT THE NEED FOR A SPECIALIZED INTERRUPT CONTROLLER">
  <data key="d0">OPERATES</data>
</edge>
<edge source="ITS AREA OVERHEAD" target="A HIGH NUMBER OF TASKS">
  <data key="d0">GROWS FOR</data>
</edge>
<edge source="SUCH WORKS" target="RF CACHING">
  <data key="d0">ADOPT</data>
</edge>
<edge source="RF CACHING" target="REGISTER SHADOWING OR BANKING">
  <data key="d0">IS ADOPTED RATHER THAN</data>
</edge>
<edge source="RF CACHING" target="PERFORMANCE REASONS">
  <data key="d0">IS ADOPTED FOR</data>
</edge>
<edge source="PERFORMANCE REASONS" target="LOWER ACCESS LATENCY TO THE RF">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="PERFORMANCE REASONS" target="HIGHER THREAD-LEVEL PARALLELISM (TLP)">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="SUCH TECHNIQUES" target="THE SYSTEMS PRE-DICTABILITY">
  <data key="d0">MAY DETERIORATE</data>
</edge>
<edge source="RISC-V AIA WITHOUT APLIC" target="MNXTI WITH THE XTOPI CSR">
  <data key="d0">HAS A SIMILAR APPROACH TO</data>
</edge>
<edge source="RISC-V AIA WITHOUT APLIC" target="BOTH LATE ARRIVAL AND REDUNDANT CONTEXT RESTORE MECHANISMS">
  <data key="d0">ALLOWS</data>
</edge>
<edge source="XTOPI CSR" target="THE HIGHEST-PRIORITY, PENDING, AND ENABLED INTERRUPT">
  <data key="d0">REPORTS</data>
</edge>
<edge source="THE HIGHEST-PRIORITY, PENDING, AND ENABLED INTERRUPT" target="A SPECIFIC PRIVILEGE MODE">
  <data key="d0">IS FOR</data>
</edge>
<edge source="THE AUTHORS" target="SOME RESEARCH DIRECTIONS FOR FUTURE WORK">
  <data key="d0">CONSIDER</data>
</edge>
<edge source="SOME RESEARCH DIRECTIONS" target="ANALYZING FASTIRQS IMPACT ON TIMING CHANNELS">
  <data key="d0">INVOLVE</data>
</edge>
<edge source="SOME RESEARCH DIRECTIONS" target="ITS INTEGRATION WITH DIFFERENT RISC-V EXTENSIONS">
  <data key="d0">INVOLVE</data>
</edge>
<edge source="C. ROCHANGE, S. UHRIG, AND P. SAINRAT" target="TIME-PREDICTABLE ARCHITECTURES (FOCUS COMPUTER ENGINEERING SERIES)">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="WILEY" target="IN 2014">
  <data key="d0">PUBLISHED</data>
</edge>
<edge source="WILEY" target="HOBOKEN, NJ, USA">
  <data key="d0">LOCATION</data>
</edge>
<edge source="L. M. PINHO ET AL." target="HIGH-PERFORMANCE AND TIME-PREDICTABLE EMBEDDED COMPUTING">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="HIGH-PERFORMANCE AND TIME-PREDICTABLE EMBEDDED COMPUTING" target="HTTP:EU.WILEY.COMWILEYCDA WILEYTITLEPRODUCTCD-1848215932.HTML">
  <data key="d0">AVAILABLE AT</data>
</edge>
<edge source="RIVER" target="WHARTON, TX, USA">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="RIVER" target="2018">
  <data key="d0">YEAR</data>
</edge>
<edge source="3 F. REGHENZANI, G. MASSARI, AND W. FORNACIARI" target="THE REAL-TIME LINUX KERNEL: A SURVEY ON PREEMPT">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="136" target="FEB. 2019">
  <data key="d0">IS</data>
</edge>
<edge source="DOI" target="10.11453297714">
  <data key="d0">IS</data>
</edge>
<edge source="DOI" target="10.11453419973">
  <data key="d0">IS</data>
</edge>
<edge source="M. LIU, D. LIU, Y. WANG, M. WANG, AND Z. SHAO" target="ON IMPROVING REAL-TIME INTERRUPT LATENCIES OF HYBRID OPERATING SYSTEMS WITH TWO-LEVEL HARDWARE INTERRUPTS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="ON IMPROVING REAL-TIME INTERRUPT LATENCIES OF HYBRID OPERATING SYSTEMS WITH TWO-LEVEL HARDWARE INTERRUPTS" target="IEEE TRANS">
  <data key="d0">PUBLISHED_IN</data>
</edge>
<edge source="P. MANTEGAZZA, E. L. DOZIO, AND S. PAPACHARALAMBOUS" target="RTAI: REAL TIME APPLICATION INTERFACE">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="6 K. RAMAMRITHAM AND J." target="TEXT">
  <data key="d0">IS</data>
</edge>
<edge source="J. VALVANO" target="INTRODUCTION TO EMBEDDED SYSTEMS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="INTRODUCTION TO EMBEDDED SYSTEMS" target="PDF">
  <data key="d0">FORMAT</data>
</edge>
<edge source="CREATESPACE" target="SCOTTS VALLEY, CA, USA">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="CREATESPACE" target="AUG. 2016">
  <data key="d0">DATE</data>
</edge>
<edge source="9 Y. HUANG, L. SHI, J. LI, Q. LI, AND C. J. XUE" target="WCET-AWARE RE-SCHEDULING REGISTER ALLOCATION FOR REAL-TIME EMBEDDED SYSTEMS WITH CLUSTERED VLIW ARCHITECTURE">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="WCET-AWARE RE-SCHEDULING REGISTER ALLOCATION FOR REAL-TIME EMBEDDED SYSTEMS WITH CLUSTERED VLIW ARCHITECTURE" target="IEEE TRANS.">
  <data key="d0">PUBLISHED_IN</data>
</edge>
<edge source="VERY LARGE SCALE INTEGR" target="TEXT">
  <data key="d0">IS</data>
</edge>
<edge source="X. ZHOU AND P. PETROV" target="RAPID AND LOW-COST CONTEXT-SWITCH THROUGH EMBEDDED PROCESSOR CUSTOMIZATION FOR REAL-TIME AND CONTROL APPLICATIONS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="RAPID AND LOW-COST CONTEXT-SWITCH THROUGH EMBEDDED PROCESSOR CUSTOMIZATION FOR REAL-TIME AND CONTROL APPLICATIONS" target="PROC.">
  <data key="d0">PUBLISHED_IN</data>
</edge>
<edge source="ASSOCIATION FOR COMPUTING MACHINERY" target="NEW YORK, NY, USA">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="ASSOCIATION FOR COMPUTING MACHINERY" target="2006">
  <data key="d0">PUBLISHED</data>
</edge>
<edge source="I. BEHNKE, L. PIRL, L. THAMSEN, R. DANICKI, A. POLZE, AND O. KAO" target="INTERRUPTING REAL-TIME IOT TASKS: HOW BAD CAN IT BE TO CONNECT YOUR CRITICAL EMBEDDED SYSTEM TO THE INTERNET?">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="12 F. REHM ET AL." target="THE ROAD TOWARDS PREDICTABLE AUTOMOTIVE HIGH PERFORMANCE PLATFORMS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="THE ROAD TOWARDS PREDICTABLE AUTOMOTIVE HIGH PERFORMANCE PLATFORMS" target="PROC.">
  <data key="d0">APPEARED_IN</data>
</edge>
<edge source="TEST" target="EUR">
  <data key="d0">IS</data>
</edge>
<edge source="13 K. ASANOVIC AND D. A. PATTERSON" target="INSTRUCTION SETS SHOULD BE FREE: THE CASE FOR RISC-V, DEPT.">
  <data key="d0">WROTE</data>
</edge>
<edge source="A. WATERMAN, Y. LEE, R. AVIZIENIS, D. A. PATTERSON, AND K. ASANOVIC" target="THE RISC-V INSTRUCTION SET MANUAL VOLUME II: PRIVILEGED ARCHITECTURE VERSION 1.9">
  <data key="d0">ARE AUTHORS OF</data>
</edge>
<edge source="THE RISC-V INSTRUCTION SET MANUAL VOLUME II: PRIVILEGED ARCHITECTURE VERSION 1.9" target="DEPT.">
  <data key="d0">IS FROM</data>
</edge>
<edge source="EECS" target="UNIV.">
  <data key="d0">IS PART OF</data>
</edge>
<edge source="CALIFORNIA" target="BERKELEY">
  <data key="d0">CONTAINS</data>
</edge>
<edge source="BERKELEY" target="CA">
  <data key="d0">IS_LOCATED_IN</data>
</edge>
<edge source="BERKELEY" target="TECH">
  <data key="d0">HAS</data>
</edge>
<edge source="CA" target="USA">
  <data key="d0">IS_LOCATED_IN</data>
</edge>
<edge source="ACCESSED" target="JUN.">
  <data key="d0">DATE</data>
</edge>
<edge source="ACCESSED" target="AUG. 4, 2023">
  <data key="d0">DATE</data>
</edge>
<edge source="RISCV-FAST-INTERRUPT-BLOB" target="HTTPS://GITHUB.COM/RISCV/RISCV-FAST-INTERRUPT-BLOB/MASTER/CLIC">
  <data key="d0">IS AVAILABLE AT</data>
</edge>
<edge source="ADOC 16 M. GAUTSCHI ET AL." target="NEAR-THRESHOLD RISC-V CORE WITH DSP EXTENSIONS FOR SCALABLE IOT ENDPOINT DEVICES">
  <data key="d0">IS</data>
</edge>
<edge source="ADOC 16 M. GAUTSCHI ET AL." target="IEEE TRANS.">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="17" target="D. SCHIAVONE">
  <data key="d0">IS</data>
</edge>
<edge source="OPENHW GROUP" target="CV32E40P USER MANUAL">
  <data key="d0">HAS</data>
</edge>
<edge source="OPENHW GROUP" target="ORGANIZATION">
  <data key="d0">IS</data>
</edge>
<edge source="HTTPS" target="AVAILABLE AT CV32E40P">
  <data key="d0">IS</data>
</edge>
<edge source="READTHEDOCS.IOEN" target="18 NUCLEI SYSTEM TECHNOLOGY">
  <data key="d0">LATEST</data>
</edge>
<edge source="39 NUCLEI SYSTEM TECHNOLOGY CO. LTD." target="ECLIC UNIT">
  <data key="d0">HAS UNIT</data>
</edge>
<edge source="ECLIC UNIT" target="INTRODUCTION">
  <data key="d0">IS</data>
</edge>
<edge source="NUCLEI" target="SPEC">
  <data key="d0">ISA</data>
</edge>
<edge source="CONTROL PULP" target="A RISC-V ON-CHIP PARALLEL POWER CONTROLLER">
  <data key="d0">IS</data>
</edge>
<edge source="CONTROL PULP" target="MANY-CORE HPC PROCESSORS">
  <data key="d0">IS FOR</data>
</edge>
<edge source="CONTROL PULP" target="FPGA-BASED HARDWARE-IN-THE-LOOP POWER AND THERMAL EMULATION">
  <data key="d0">USES</data>
</edge>
<edge source="PARALLEL PROGRAM." target="FEB. 2024">
  <data key="d0">HAS PUBLICATION DATE</data>
</edge>
<edge source="PARALLEL PROGRAM." target="10.1007S10766-024-00761-4">
  <data key="d0">HAS DOI</data>
</edge>
<edge source="20" target="R. BARRY">
  <data key="d0">IS</data>
</edge>
<edge source="REAL TIME ENGINEERS LTD." target="ONLINE">
  <data key="d0">IS</data>
</edge>
<edge source="HTTPS://WWW.FREERTOS.ORG/INDEX.HTML" target="AVAILABLE">
  <data key="d0">IS</data>
</edge>
<edge source="C.-M. LIN" target="NESTED INTERRUPT ANALYSIS OF LOW COST AND HIGH PERFORMANCE EMBEDDED SYSTEMS USING GSPN FRAMEWORK">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="NESTED INTERRUPT ANALYSIS OF LOW COST AND HIGH PERFORMANCE EMBEDDED SYSTEMS USING GSPN FRAMEWORK" target="IEICE TRANS.">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="HTTPS:GITHUB.COMRISCVRISCV-PLIC-SPECBLOBMASTERRISCV-PLIC-1.0.0.PDF" target="AVAILABLE">
  <data key="d0">IS</data>
</edge>
<edge source="J. YIU" target="THE DEFINITIVE GUIDE TO ARM CORTEX-M3 CORTEX-M4 PROCESSORS">
  <data key="d0">IS AUTHOR OF</data>
</edge>
<edge source="THE DEFINITIVE GUIDE TO ARM CORTEX-M3 CORTEX-M4 PROCESSORS" target="3RD ED.">
  <data key="d0">HAS EDITION</data>
</edge>
<edge source="NEWNES" target="BOSTON, MA, USA">
  <data key="d0">PUBLISHED_IN</data>
</edge>
<edge source="NEWNES" target="2013">
  <data key="d0">PUBLISHED_IN_YEAR</data>
</edge>
<edge source="CORTEX-M4" target="TECH">
  <data key="d0">IS</data>
</edge>
<edge source="DOCUMENTATION" target="HTTPS://DEVELOPER.ARM.COM/DOCUMENTATION/1001660001">
  <data key="d0">AVAILABLE AT</data>
</edge>
<edge source="DOCUMENTATION" target="J. YIU">
  <data key="d0">AUTHOR</data>
</edge>
<edge source="CIRCUITS MICROSYSTEMS (ICICM)" target="OCT. 2021">
  <data key="d0">DATE</data>
</edge>
<edge source="CIRCUITS MICROSYSTEMS (ICICM)" target="PP.">
  <data key="d0">PAGE</data>
</edge>
<edge source="LI AND J. K. LEE" target="PAGED REGISTER FILES">
  <data key="d0">SUPPORT</data>
</edge>
<edge source="PAGED REGISTER FILES" target="CONTEXT SWITCHING">
  <data key="d0">IMPROVE</data>
</edge>
<edge source="29 R. BALAS AND L. BENINI" target="RISC-V FOR REAL-TIME MCU SOFTWARE OPTIMIZATION AND MICROARCHITECTURAL GAP ANALYSIS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="RISC-V FOR REAL-TIME MCU SOFTWARE OPTIMIZATION AND MICROARCHITECTURAL GAP ANALYSIS" target="PROC.">
  <data key="d0">PUBLISHED_IN</data>
</edge>
<edge source="30" target="RENESAS">
  <data key="d0">IS</data>
</edge>
<edge source="HARDWARE MANUAL" target="RENESAS MCU M16C">
  <data key="d0">DESCRIBES</data>
</edge>
<edge source="HARDWARE MANUAL" target="2021">
  <data key="d0">YEAR</data>
</edge>
<edge source="HTTPS://WWW.RENESAS.COM/US/ENDOCUMENT/MAHM32C87-GROUP-M32C87-M32C87A-M32C87B-HARDWARE-MANUAL" target="TRUE">
  <data key="d0">IS AVAILABLE</data>
</edge>
<edge source="SIFIVE INC." target="HARDWARE MANUAL">
  <data key="d0">PUBLISHED</data>
</edge>
<edge source="SIFIVE E21 CORE COMPLEX" target="MANUAL">
  <data key="d0">IS</data>
</edge>
<edge source="HTTPS:SIFIVE.CDN.PRISMIC.IOSIFIVE7C22C2EC-8AF4-4B6C-A5FE-9327D91E7808E21CORECOMPLEXMANUAL21G1.PDF" target="AVAILABLE">
  <data key="d0">IS</data>
</edge>
<edge source="STMICROELECTRONICS" target="MENTIONED">
  <data key="d0">IS</data>
</edge>
<edge source="STM32L5-SYSTEM-NESTEDVECTORED INTERRUPTCONTROLNVIC.PDF" target="HTTPS://WWW.ST.COM/CONTENT/CCC/RESOURCE/TRAINING/TECHNICAL/PRODUCTTRAINING/GROUP16135D207346F4E83/STM32L5-SYSTEM-NESTEDVECTOREDINTERRUPTCONTROLNVICFILES/STM32L5-SYSTEM-NESTEDVECTOREDINTERRUPTCONTROLNVIC.PDF">
  <data key="d0">IS AVAILABLE AT</data>
</edge>
<edge source="INFINEON TECHNOLOGIES AG" target="STM32L5-SYSTEM-NESTEDVECTORED INTERRUPTCONTROLNVIC.PDF">
  <data key="d0">IS THE COPYRIGHT HOLDER OF</data>
</edge>
<edge source="INFINEON TECHNOLOGIES AG" target="HC163TUE6HC16SESS7PRES1BW.PDF">
  <data key="d0">IS MENTIONED IN</data>
</edge>
<edge source="INFINEON TECHNOLOGIES AG" target="U.S. PATENT 7 434 222 B2">
  <data key="d0">HAS PATENT</data>
</edge>
<edge source="POWERTRAIN MICROCONTROLLER" target="FAST">
  <data key="d0">IS</data>
</edge>
<edge source="HC163TUE6HC16SESS7PRES1BW.PDF" target="HTTPS://OLD.HOTCHIPS.ORG/WP-CONTENT/UPLOADS/HCARCHIVES/HC163TUE6HC16SESS7PRES1BW.PDF">
  <data key="d0">IS AVAILABLE AT</data>
</edge>
<edge source="FILE" target="HTTPS:HITEX.CO.UKFILEADMINUK-FILESDOWNLOADSSHIELDBUDDYTC27XDUMV2.2.PDF">
  <data key="d0">AVAILABLE_AT</data>
</edge>
<edge source="FILE" target="35">
  <data key="d0">SIZE</data>
</edge>
<edge source="FILE" target="INFINEON TECHNOLOGIES AG">
  <data key="d0">RELATED_TO</data>
</edge>
<edge source="TC27X D-STEP" target="32-BIT SINGLE-CHIP MICROCONTROLLER">
  <data key="d0">IS</data>
</edge>
<edge source="TRICORE V1.6" target="CORE ARCHITECTURE">
  <data key="d0">IS</data>
</edge>
<edge source="U.S. PATENT 7 434 222 B2" target="TASK CONTEXT SWITCHING RTOS">
  <data key="d0">IS ABOUT</data>
</edge>
<edge source="U.S. PATENT 7 434 222 B2" target="OCT. 2008">
  <data key="d0">WAS ISSUED</data>
</edge>
<edge source="H. ZENG AND K. GHOSE" target="REGISTER FILE CACHING FOR ENERGY EFFICIENCY">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="REGISTER FILE CACHING FOR ENERGY EFFICIENCY" target="ISLPED PROC">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="LOW POWER" target="ELECTRON">
  <data key="d0">IS</data>
</edge>
<edge source="DESIGN" target="OCT. 2006">
  <data key="d0">IS</data>
</edge>
<edge source="DESIGN" target="PP.">
  <data key="d0">HAS PAGE</data>
</edge>
<edge source="38 M. SADROSADATI ET AL." target="HIGHLY CONCURRENT LATENCY-TOLERANT REGISTER FILES FOR GPUS">
  <data key="d0">AUTHORED</data>
</edge>
<edge source="HIGHLY CONCURRENT LATENCY-TOLERANT REGISTER FILES FOR GPUS" target="ACM TRANS.">
  <data key="d0">PUBLISHED IN</data>
</edge>
<edge source="DEGREE" target="THE DIGITAL CIRCUITS AND SYSTEMS GROUP OF PROF. BENINI">
  <data key="d0">IS AT</data>
</edge>
<edge source="DEGREE" target="PHYSICAL ENGINEERING">
  <data key="d0">IS IN</data>
</edge>
<edge source="DEGREE" target="POLITECNICO DI TURINO">
  <data key="d0">IS FROM</data>
</edge>
<edge source="DEGREE" target="2018">
  <data key="d0">WAS OBTAINED IN</data>
</edge>
<edge source="DEGREE" target="ELECTRICAL ENGINEERING">
  <data key="d0">IS IN</data>
</edge>
<edge source="DEGREE" target="GRENOBLE INP-PHELMA">
  <data key="d0">IS FROM</data>
</edge>
<edge source="DEGREE" target="EPFL LAUSANNE">
  <data key="d0">IS FROM</data>
</edge>
<edge source="DEGREE" target="2020">
  <data key="d0">WAS OBTAINED IN</data>
</edge>
<edge source="DEGREE" target="STANFORD UNIVERSITY">
  <data key="d0">FROM</data>
</edge>
<edge source="DEGREE" target="1997">
  <data key="d0">YEAR</data>
</edge>
<edge source="HIS RESEARCH INTERESTS" target="REAL-TIME COMPUTING">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="HIS RESEARCH INTERESTS" target="COMPILERS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="HIS RESEARCH INTERESTS" target="OPERATING SYSTEMS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="HIS RESEARCH INTERESTS" target="POWER MANAGEMENT OF HPC PROCESSORS">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="HIS RESEARCH INTERESTS" target="ENERGY-EFFICIENT PROCESSOR ARCHITECTURE">
  <data key="d0">INCLUDE</data>
</edge>
<edge source="POLITECNICO DI TURINO" target="TURIN">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="TURIN" target="ITALY">
  <data key="d0">IS LOCATED IN</data>
</edge>
<edge source="GRENOBLE INP-PHELMA" target="GRENOBLE, FRANCE">
  <data key="d0">IS IN</data>
</edge>
<edge source="EPFL LAUSANNE" target="LAUSANNE, SWITZERLAND">
  <data key="d0">IS IN</data>
</edge>
<edge source="STANFORD UNIVERSITY" target="STANFORD, CA, USA">
  <data key="d0">LOCATION</data>
</edge>
<edge source="DR. BENINI" target="THE ACM">
  <data key="d0">IS A FELLOW OF</data>
</edge>
<edge source="DR. BENINI" target="THE ACADEMIA EUROPAEA">
  <data key="d0">IS A MEMBER OF</data>
</edge>
<edge source="MCCLUSKEY AWARD" target="AWARD">
  <data key="d0">IS</data>
</edge>
</graph></graphml>