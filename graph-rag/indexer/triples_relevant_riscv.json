[
  {
    "subject": "Processors",
    "predicate": "use",
    "object": "the open RISC-V instruction set architecture (ISA)"
  },
  {
    "subject": "Processors using the open RISC-V instruction set architecture (ISA)",
    "predicate": "are finding",
    "object": "increasing adoption in the embedded world"
  },
  {
    "subject": "CV32RT",
    "predicate": "is",
    "object": "a 32-bit RISC-V core"
  },
  {
    "subject": "CV32RT",
    "predicate": "extends",
    "object": "the interrupt handling capabilities of CV32E40P"
  },
  {
    "subject": "CV32E40P",
    "predicate": "is",
    "object": "an industrially supported open-source core"
  },
  {
    "subject": "CV32RT",
    "predicate": "achieves",
    "object": "best-in-class interrupt latency"
  },
  {
    "subject": "CV32RT",
    "predicate": "achieves",
    "object": "fast context switching"
  },
  {
    "subject": "CV32RT",
    "predicate": "performs better than",
    "object": "commercial off-the-shelf (COTS) processor vendors"
  },
  {
    "subject": "CV32RT",
    "predicate": "paves the road for",
    "object": "RISC-V architectures in time-critical systems"
  },
  {
    "subject": "We",
    "predicate": "give",
    "object": "a brief overview of the full-system platform used to design and implement the proposed interrupt extension in Section II-A"
  },
  {
    "subject": "We",
    "predicate": "motivate and explain",
    "object": "the relevant target metrics in Section II-B3"
  },
  {
    "subject": "We",
    "predicate": "describe",
    "object": "the current status of interrupt handling in RISC-V in Section II-C"
  },
  {
    "subject": "CV32E40P core",
    "predicate": "is abbreviated to",
    "object": "CV32"
  },
  {
    "subject": "CV32E40P core",
    "predicate": "is",
    "object": "an open-source, industry-grade, 32-bit, in-order, four-stage RISC-V core"
  },
  {
    "subject": "CV32E40P core",
    "predicate": "is used as",
    "object": "the basis for implementing our extensions"
  },
  {
    "subject": "CV32 core",
    "predicate": "is",
    "object": "baseline"
  },
  {
    "subject": "native CLINT interrupt controller",
    "predicate": "is replaced with",
    "object": "CLIC"
  },
  {
    "subject": "CLIC",
    "predicate": "is referred to as",
    "object": "CV32RTCLIC"
  },
  {
    "subject": "fastirq",
    "predicate": "is introduced into",
    "object": "core microarchitecture"
  },
  {
    "subject": "fastirq",
    "predicate": "is",
    "object": "extension proposed in this work"
  },
  {
    "subject": "extension proposed in this work",
    "predicate": "is referred to as",
    "object": "CV32RTfastirq"
  },
  {
    "subject": "CV32RTCLIC",
    "predicate": "implements",
    "object": "CLIC interrupt controller"
  },
  {
    "subject": "CLIC interrupt controller",
    "predicate": "is implemented according to",
    "object": "draft specification"
  },
  {
    "subject": "draft specification",
    "predicate": "is to be included in",
    "object": "RISC-V Privileged Specification"
  },
  {
    "subject": "Our proposed fastirq extension",
    "predicate": "addresses",
    "object": "these weaknesses"
  },
  {
    "subject": "fastirq extension",
    "predicate": "extends",
    "object": "the CLIC base capabilities"
  },
  {
    "subject": "fastirq extension",
    "predicate": "lowers",
    "object": "interrupt latency"
  },
  {
    "subject": "fastirq extension",
    "predicate": "keeps",
    "object": "HW vectored interrupts"
  },
  {
    "subject": "fastirq extension",
    "predicate": "allows",
    "object": "skipping of redundant context restore operations"
  },
  {
    "subject": "fastirq",
    "predicate": "is",
    "object": "a fast interrupt extension for RISC-V embedded systems"
  },
  {
    "subject": "We",
    "predicate": "implement",
    "object": "the extension on CV32RT"
  },
  {
    "subject": "CV32RT",
    "predicate": "is",
    "object": "a 32-bit, in-order, single-issue core"
  },
  {
    "subject": "CV32RT",
    "predicate": "is designed with",
    "object": "the RISC-V CLIC fast interrupt controller"
  },
  {
    "subject": "A CLIC extension based fast interrupt system",
    "predicate": "is for",
    "object": "embedded RISC-V processors"
  },
  {
    "subject": "Many embedded use cases",
    "predicate": "have",
    "object": "real-time constraints"
  },
  {
    "subject": "Many embedded use cases",
    "predicate": "require",
    "object": "flexible, predictable, and fast reactive handling of incoming events"
  },
  {
    "subject": "RISC-V processors",
    "predicate": "are lagging in",
    "object": "this area"
  },
  {
    "subject": "RISC-V processors",
    "predicate": "are lagging compared to",
    "object": "more mature proprietary architectures"
  },
  {
    "subject": "more mature proprietary architectures",
    "predicate": "include",
    "object": "ARM Cortex-M and TriCore"
  },
  {
    "subject": "ARM Cortex-M and TriCore",
    "predicate": "have been tuned for",
    "object": "years"
  },
  {
    "subject": "The default interrupt controller standardized by RISC-V",
    "predicate": "is",
    "object": "the core local interruptor (CLINT)"
  },
  {
    "subject": "The core local interruptor (CLINT)",
    "predicate": "lacks",
    "object": "configurability in prioritization and preemption of interrupts"
  },
  {
    "subject": "The RISC-V core local interrupt controller (CLIC) specification",
    "predicate": "addresses",
    "object": "this concern"
  },
  {
    "subject": "The RISC-V core local interrupt controller (CLIC) specification",
    "predicate": "enables",
    "object": "preemptible, low-latency vectored interrupts"
  },
  {
    "subject": "The RISC-V core local interrupt controller (CLIC) specification",
    "predicate": "envisions",
    "object": "optional extensions to improve interrupt latency"
  },
  {
    "subject": "the RISC-V community",
    "predicate": "has been developing",
    "object": "an extension to the Privileged specifications 14"
  },
  {
    "subject": "the extension to the Privileged specifications 14",
    "predicate": "is",
    "object": "the proposal of the RISC-V core local interrupt controller (CLIC) 15"
  },
  {
    "subject": "the proposal of the RISC-V core local interrupt controller (CLIC) 15",
    "predicate": "is",
    "object": "currently under ratification by the community"
  },
  {
    "subject": "the RISC-V core local interrupt controller (CLIC) 15",
    "predicate": "is designed to handle",
    "object": "real-time scenarios"
  },
  {
    "subject": "CLICs",
    "predicate": "are",
    "object": "local to each hardware thread (HART)"
  },
  {
    "subject": "PLICs",
    "predicate": "are",
    "object": "platform level interrupt controllers"
  },
  {
    "subject": "PLICs",
    "predicate": "are",
    "object": "centralized interrupt controllers"
  },
  {
    "subject": "PLICs",
    "predicate": "are capable of",
    "object": "managing multiple HARTs"
  },
  {
    "subject": "RISC-V PLIC",
    "predicate": "belongs to",
    "object": "Platform-Level Interrupt Controllers"
  },
  {
    "subject": "advanced PLIC (APLIC)",
    "predicate": "belongs to",
    "object": "Platform-Level Interrupt Controllers"
  },
  {
    "subject": "RISC-V incoming message signaled interrupt controller (IMSIC)",
    "predicate": "belongs to",
    "object": "Platform-Level Interrupt Controllers"
  },
  {
    "subject": "RISC-V PLIC and advanced PLIC (APLIC)",
    "predicate": "are for",
    "object": "wire-based interrupt communication"
  },
  {
    "subject": "RISC-V incoming message signaled interrupt controller (IMSIC)",
    "predicate": "is for",
    "object": "message-signaled interrupt communication"
  },
  {
    "subject": "Platform-Level Interrupt Controllers",
    "predicate": "are not designed to",
    "object": "distribute time-critical interrupts to the running HARTs"
  },
  {
    "subject": "B. Core-Local Interrupt Controllers CLICs",
    "predicate": "are specialized in",
    "object": "providing fast interrupt-handling capabilities in real-time embedded application domains"
  },
  {
    "subject": "RISC-V SMCLIC Core-Local Interrupt Controller (CLIC)",
    "predicate": "is part of",
    "object": "RISC-V Privileged Architecture Extension"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-129.html"
  },
  {
    "subject": "We",
    "predicate": "call",
    "object": "CV32RT our enhanced core"
  },
  {
    "subject": "CV32RT",
    "predicate": "is",
    "object": "the first fully open-source RV32 core with competitive interrupt-handling features"
  },
  {
    "subject": "CV32RT",
    "predicate": "has competitive interrupt-handling features compared to",
    "object": "Arm Cortex-M series"
  },
  {
    "subject": "CV32RT",
    "predicate": "has competitive interrupt-handling features compared to",
    "object": "TriCore"
  },
  {
    "subject": "We",
    "predicate": "integrate",
    "object": "CV32RT within an open-source system on chip (SoC)"
  },
  {
    "subject": "We",
    "predicate": "evaluate",
    "object": "CV32RT interrupt handling capabilities"
  },
  {
    "subject": "extension",
    "predicate": "introduces",
    "object": "negligible area overhead in a modern technology node"
  },
  {
    "subject": "extension",
    "predicate": "provides",
    "object": "performance benefits"
  },
  {
    "subject": "various CV32RT versions",
    "predicate": "perform in terms of",
    "object": "interrupt latency and context switch times"
  },
  {
    "subject": "these additions",
    "predicate": "incur",
    "object": "overhead in terms of area and timing"
  },
  {
    "subject": "The proposed extensions",
    "predicate": "are demonstrated to improve",
    "object": "task context switching in real-time operating systems (RTOSs)"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "Context switching"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "embedded"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "interrupt latency"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "microcontroller unit (MCU)"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "real-time"
  },
  {
    "subject": "Index Terms",
    "predicate": "include",
    "object": "RISC-V"
  },
  {
    "subject": "several markets",
    "predicate": "rely on",
    "object": "real-time and SW-based solution"
  },
  {
    "subject": "the automotive industry",
    "predicate": "employs",
    "object": "hundreds of electronic control units (ECUs)"
  },
  {
    "subject": "electronic control units (ECUs)",
    "predicate": "are used for",
    "object": "real-time applications"
  },
  {
    "subject": "real-time applications",
    "predicate": "include",
    "object": "electronic engine control"
  },
  {
    "subject": "real-time applications",
    "predicate": "include",
    "object": "gearbox control"
  },
  {
    "subject": "real-time applications",
    "predicate": "include",
    "object": "cruise control"
  },
  {
    "subject": "real-time applications",
    "predicate": "include",
    "object": "anti-lock brake systems"
  },
  {
    "subject": "General-purpose operating systems (GPOSs)",
    "predicate": "are typically tuned for",
    "object": "average throughput rather than real-time"
  },
  {
    "subject": "Date of publication",
    "predicate": "is",
    "object": "21 March 2024"
  },
  {
    "subject": "date of current version",
    "predicate": "is",
    "object": "23 May 2024"
  },
  {
    "subject": "This work",
    "predicate": "was supported by",
    "object": "the HORIZON Key Digital Technologies Joint Undertaking (KDT JU) Programme"
  },
  {
    "subject": "This work",
    "predicate": "was supported through",
    "object": "the TRISTAN project"
  },
  {
    "subject": "the TRISTAN project",
    "predicate": "is under",
    "object": "Grant 101095947"
  },
  {
    "subject": "Robert Balas",
    "predicate": "is",
    "object": "corresponding author"
  },
  {
    "subject": "Robert Balas",
    "predicate": "is with",
    "object": "Integrated Systems Laboratory (IIS), ETH Zurich, 8092 Zurich, Switzerland"
  },
  {
    "subject": "Alessandro Ottaviano",
    "predicate": "is with",
    "object": "Integrated Systems Laboratory (IIS), ETH Zurich, 8092 Zurich, Switzerland"
  },
  {
    "subject": "Luca Benini",
    "predicate": "is with",
    "object": "Integrated Systems Laboratory (IIS), ETH Zurich, Zurich, Switzerland"
  },
  {
    "subject": "Luca Benini",
    "predicate": "is with",
    "object": "Department of Electrical, Electronic and Information Engineering (DEI), University of Bologna, 40126 Bologna, Italy"
  },
  {
    "subject": "Color versions of one or more figures in this article",
    "predicate": "are available at",
    "object": "https:doi.org10.1109TVLSI.2024.3377130"
  },
  {
    "subject": "Digital Object Identifier",
    "predicate": "is",
    "object": "10.1109TVLSI.2024.3377130"
  },
  {
    "subject": "the development of Linux",
    "predicate": "is focused on",
    "object": "average performance"
  },
  {
    "subject": "Linux",
    "predicate": "is",
    "object": "a popular open-source GPOS kernel"
  },
  {
    "subject": "Linux",
    "predicate": "is less suitable to be used for",
    "object": "real-time applications"
  },
  {
    "subject": "extensions and modifications",
    "predicate": "aim at",
    "object": "improving determinism and latencies of critical operations in Linux"
  },
  {
    "subject": "extensions and modifications",
    "predicate": "have been",
    "object": "proposed and implemented"
  },
  {
    "subject": "extensions and modifications",
    "predicate": "do not guarantee",
    "object": "strict bounds on maximum latencies of operations"
  },
  {
    "subject": "extensions and modifications",
    "predicate": "lack",
    "object": "industry-grade maturity to be employed in hard real-time scenarios"
  },
  {
    "subject": "Real-time operating systems (RTOSs) kernels",
    "predicate": "are",
    "object": "special-purpose operating systems (OSs)"
  },
  {
    "subject": "Real-time operating systems (RTOSs) kernels",
    "predicate": "are designed to provide",
    "object": "real-time guarantees"
  },
  {
    "subject": "real-time guarantees",
    "predicate": "include",
    "object": "task scheduling according to a given expected completion deadline"
  },
  {
    "subject": "real-time guarantees",
    "predicate": "include",
    "object": "deterministic latencies of various operations"
  },
  {
    "subject": "A. Stankovic",
    "predicate": "authored",
    "object": "Scheduling algorithms and operating systems support for real-time systems"
  },
  {
    "subject": "Scheduling algorithms and operating systems support for real-time systems",
    "predicate": "published in",
    "object": "Proc."
  },
  {
    "subject": "The cost of saving and restoring the task state during a context switch",
    "predicate": "is",
    "object": "a significant concern"
  },
  {
    "subject": "The cost of saving and restoring the task state during a context switch",
    "predicate": "remains",
    "object": "relatively high"
  },
  {
    "subject": "Long context switch times",
    "predicate": "reduce",
    "object": "available task utilization"
  },
  {
    "subject": "Long context switch times",
    "predicate": "reduce",
    "object": "the minimum viable switching granularity"
  },
  {
    "subject": "process state",
    "predicate": "needs to be saved on",
    "object": "context switch"
  },
  {
    "subject": "process state",
    "predicate": "includes",
    "object": "program counter"
  },
  {
    "subject": "process state",
    "predicate": "includes",
    "object": "register files (RF)s"
  },
  {
    "subject": "process state",
    "predicate": "includes",
    "object": "status registers"
  },
  {
    "subject": "process state",
    "predicate": "includes",
    "object": "address space mapping"
  },
  {
    "subject": "a significant number of memory access operations",
    "predicate": "need to be performed to",
    "object": "store the state of the preempted task"
  },
  {
    "subject": "a significant number of memory access operations",
    "predicate": "need to be performed to",
    "object": "restore the state of the new task to be executed"
  },
  {
    "subject": "network loads",
    "predicate": "impact",
    "object": "interrupt latency in time-critical microcontroller units (MCUs)"
  },
  {
    "subject": "high overhead generated by the receiving of packets",
    "predicate": "can be seen in",
    "object": "continuous floods"
  },
  {
    "subject": "high overhead generated by the receiving of packets",
    "predicate": "can be seen in",
    "object": "short transmission bursts"
  },
  {
    "subject": "interrupt latency",
    "predicate": "reaches up to",
    "object": "50 task lateness"
  },
  {
    "subject": "task lateness",
    "predicate": "is defined as",
    "object": "the additional time a task takes to finish than its deadline allows"
  },
  {
    "subject": "task lateness",
    "predicate": "will start to accumulate over",
    "object": "iterations from the critical network load increase per packet per second"
  },
  {
    "subject": "HW-induced interrupt latency",
    "predicate": "is",
    "object": "one part of the problem"
  },
  {
    "subject": "Interrupt latency",
    "predicate": "breaks down into",
    "object": "SW-dependent contributions"
  },
  {
    "subject": "Interrupt latency",
    "predicate": "breaks down into",
    "object": "HW-dependent contributions"
  },
  {
    "subject": "Personal use",
    "predicate": "is",
    "object": "permitted"
  },
  {
    "subject": "republicationredistribution",
    "predicate": "requires",
    "object": "IEEE permission"
  },
  {
    "subject": "Authorized licensed use",
    "predicate": "is limited to",
    "object": "California Polytechnic State University San Luis Obispo"
  },
  {
    "subject": "interrupt state",
    "predicate": "gets pushed",
    "object": "unknown (implied process)"
  },
  {
    "subject": "The latter",
    "predicate": "reduces",
    "object": "the execution time of the Authorized licensed use limited to California Polytechnic State University San Luis Obispo"
  },
  {
    "subject": "Document",
    "predicate": "was downloaded on",
    "object": "May 28, 2025 at 17:50:39 UTC"
  },
  {
    "subject": "Document",
    "predicate": "was downloaded from",
    "object": "IEEE Xplore"
  },
  {
    "subject": "GPOSRTOS scheduler and the user code",
    "predicate": "primarily impacts",
    "object": "the capability of the system to provide timely responses to asynchronous events"
  },
  {
    "subject": "CV32RT",
    "predicate": "enables",
    "object": "fast interrupt and context switching"
  },
  {
    "subject": "Table I",
    "predicate": "describes",
    "object": "nested interrupt preemption scheme according to RISC-V CLIC"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "optimizes",
    "object": "interrupt latency in the non-nested interrupt case"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "optimizes",
    "object": "interrupt latency in the nested interrupt case"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "combines",
    "object": "bank switching in the non-nested interrupt case"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "uses",
    "object": "an automatic context-saving mechanism in the background for the nested interrupt case"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "has feature",
    "object": "Fast Interrupt Extension"
  },
  {
    "subject": "Fast Interrupt Extension",
    "predicate": "includes",
    "object": "Automatic Hardware Context Saving and Bank Switching"
  },
  {
    "subject": "A block diagram",
    "predicate": "of",
    "object": "CV32RTfastirq"
  },
  {
    "subject": "A block diagram of CV32RTfastirq",
    "predicate": "is shown in",
    "object": "Fig."
  },
  {
    "subject": "pointer",
    "predicate": "is adjusted",
    "object": "appropriately before triggering an SW interrupt"
  },
  {
    "subject": "SW interrupt",
    "predicate": "is triggered by",
    "object": "write to CLICs memory map"
  },
  {
    "subject": "instruction in machine mode (emret)",
    "predicate": "is able to",
    "object": "skip redundant context saving and restoring sequences"
  },
  {
    "subject": "instruction in machine mode (emret)",
    "predicate": "enables",
    "object": "fast interrupt and context switching"
  },
  {
    "subject": "instruction in machine mode (emret)",
    "predicate": "does this by",
    "object": "directly jumping to the next available interrupt handler"
  },
  {
    "subject": "Low interrupt latency and context switch time",
    "predicate": "are",
    "object": "crucial metrics for a wide range of platforms"
  },
  {
    "subject": "Platforms",
    "predicate": "range from",
    "object": "commodity MCU-class embedded systems to more advanced and complex application-class mixed criticality systems (MCSs)"
  },
  {
    "subject": "Timesafety-critical and non-critical applications",
    "predicate": "coexist on",
    "object": "different isolated partitions of the same HW platform"
  },
  {
    "subject": "Response and context switch time minimization",
    "predicate": "become",
    "object": "a challenge to be tackled at the HWSW interface"
  },
  {
    "subject": "SW programming techniques and HW interrupt controller architectures",
    "predicate": "can cooperate",
    "object": "to ensure minimal response time"
  },
  {
    "subject": "commercial vendors and IP providers",
    "predicate": "offer",
    "object": "such features as in-house solutions"
  },
  {
    "subject": "such features as in-house solutions",
    "predicate": "are",
    "object": "often proprietary"
  },
  {
    "subject": "such features as in-house solutions",
    "predicate": "are tightly coupled with",
    "object": "the vendors instruction set architecture (ISA), target HW family, and associated SW stack"
  },
  {
    "subject": "RISC-V ecosystem",
    "predicate": "has been offering",
    "object": "a modular, free, and open-source ISA"
  },
  {
    "subject": "RISC-V ecosystem",
    "predicate": "is becoming",
    "object": "the de facto lingua franca of computing"
  },
  {
    "subject": "RISC-V ecosystem",
    "predicate": "is",
    "object": "ever-growing"
  },
  {
    "subject": "time period",
    "predicate": "is",
    "object": "the last decade"
  },
  {
    "subject": "RISC-V support for fast interrupt and context switch handling",
    "predicate": "is not mature enough to compete with",
    "object": "incumbent proprietary architectures"
  },
  {
    "subject": "RISC-V support for fast interrupt and context switch handling",
    "predicate": "lacks",
    "object": "flexible interrupt prioritization"
  },
  {
    "subject": "RISC-V support for fast interrupt and context switch handling",
    "predicate": "lacks",
    "object": "preemption mechanisms"
  },
  {
    "subject": "RISC-V support for fast interrupt and context switch handling",
    "predicate": "lacks",
    "object": "low interrupt latency"
  },
  {
    "subject": "modular RISC-V ISA",
    "predicate": "enables",
    "object": "developing orthogonal custom extensions"
  },
  {
    "subject": "few published works",
    "predicate": "tackle",
    "object": "the problem of minimizing interrupt latency and context switch time from a holistic (HW and SW) viewpoint for RISC-V"
  },
  {
    "subject": "few published works",
    "predicate": "try to close",
    "object": "the gap with more established proprietary solutions"
  },
  {
    "subject": "closing the gap with more established proprietary solutions",
    "predicate": "promotes",
    "object": "RISC-V as a valuable candidate for time- and safety-critical application domains such as automotive and aerospace"
  },
  {
    "subject": "few published works",
    "predicate": "provide",
    "object": "an open-source solution to be shared with the community"
  },
  {
    "subject": "RISC-V core-specific interrupt controllers",
    "predicate": "have",
    "object": "various flavors"
  },
  {
    "subject": "interrupt controllers",
    "predicate": "support",
    "object": "nesting"
  },
  {
    "subject": "interrupt controllers",
    "predicate": "support",
    "object": "calling of C-functions within it"
  },
  {
    "subject": "calling of C-functions within interrupt controllers",
    "predicate": "involves",
    "object": "saving and restoring state following the C-ABI"
  },
  {
    "subject": "our design",
    "predicate": "can achieve",
    "object": "interrupt latencies of six clock cycles"
  },
  {
    "subject": "our design",
    "predicate": "can achieve",
    "object": "efficient back-to-back interrupt handling in 12 cycles"
  },
  {
    "subject": "interrupt latencies of six clock cycles and efficient back-to-back interrupt handling in 12 cycles",
    "predicate": "is as low as",
    "object": "the fastest available approaches currently implemented in the RISC-V landscape"
  },
  {
    "subject": "the fastest available approaches currently implemented in the RISC-V landscape",
    "predicate": "are",
    "object": "fully open-source"
  },
  {
    "subject": "the fastest available approaches currently implemented in the RISC-V landscape",
    "predicate": "are",
    "object": "competitive against closed-source and proprietary commercial solutions"
  },
  {
    "subject": "We",
    "predicate": "make available",
    "object": "the implementation under a permissive open-source license"
  },
  {
    "subject": "We",
    "predicate": "design",
    "object": "a fast interrupt extension (fastirq)"
  },
  {
    "subject": "fast interrupt extension (fastirq)",
    "predicate": "accelerates",
    "object": "both nested and non-nested interrupt case scenarios"
  },
  {
    "subject": "fastirq",
    "predicate": "reduces",
    "object": "interrupt latency"
  },
  {
    "subject": "fastirq",
    "predicate": "reduces interrupt latency by",
    "object": "hiding the latency through memory banks and a background-saving mechanism"
  },
  {
    "subject": "CLINT",
    "predicate": "have",
    "object": "about 33 cycles interrupt latency"
  },
  {
    "subject": "CLIC",
    "predicate": "have",
    "object": "about 33 cycles interrupt latency"
  },
  {
    "subject": "fastirq extension",
    "predicate": "is able to reduce",
    "object": "interrupt latency down to six cycles"
  },
  {
    "subject": "The same mechanism",
    "predicate": "allows",
    "object": "one to accelerate context switching through HWSW cooperation"
  },
  {
    "subject": "early mret (emret)",
    "predicate": "is",
    "object": "a novel instruction"
  },
  {
    "subject": "early mret (emret)",
    "predicate": "optimizes",
    "object": "tail-chaining"
  },
  {
    "subject": "early mret (emret)",
    "predicate": "optimizes tail-chaining compared to",
    "object": "the baseline strategy proposed in the CLIC standard (xnxti)"
  },
  {
    "subject": "early mret (emret)",
    "predicate": "optimizes tail-chaining compared to",
    "object": "its enhancement from 18 (jalxnxti)"
  },
  {
    "subject": "we",
    "predicate": "compare",
    "object": "CV32RT with leading COTS systems in both nested and non-nested interrupt scenarios"
  },
  {
    "subject": "the proposed solution",
    "predicate": "promotes",
    "object": "RISC-V"
  },
  {
    "subject": "RISC-V",
    "predicate": "is",
    "object": "a competitive candidate for building the next generation of time-critical systems"
  },
  {
    "subject": "This core",
    "predicate": "is embedded in",
    "object": "ControlPULP 19"
  },
  {
    "subject": "ControlPULP 19",
    "predicate": "is",
    "object": "a SoC specialized in running real-time workloads"
  },
  {
    "subject": "The system",
    "predicate": "contains",
    "object": "a CV32 manager core"
  },
  {
    "subject": "The system",
    "predicate": "contains",
    "object": "a programmable accelerator subsystem"
  },
  {
    "subject": "a programmable accelerator subsystem",
    "predicate": "consists of",
    "object": "eight CV32 cores"
  },
  {
    "subject": "The system",
    "predicate": "contains",
    "object": "a set of standard peripherals"
  },
  {
    "subject": "a set of standard peripherals",
    "predicate": "includes",
    "object": "quad serial peripheral interface (QSPI)"
  },
  {
    "subject": "a set of standard peripherals",
    "predicate": "includes",
    "object": "inter-integrated circuit (I2C)"
  },
  {
    "subject": "a set of standard peripherals",
    "predicate": "includes",
    "object": "universal asynchronous receiver-transmitter (UART)"
  },
  {
    "subject": "The manager core",
    "predicate": "is responsible for",
    "object": "scheduling tasks"
  },
  {
    "subject": "The manager core",
    "predicate": "is responsible for",
    "object": "communicating with the peripherals"
  },
  {
    "subject": "The manager core",
    "predicate": "is responsible for",
    "object": "offloading tasks to the accelerator subsystem"
  },
  {
    "subject": "The manager core",
    "predicate": "is responsible for",
    "object": "being responsive to asynchronous external events"
  },
  {
    "subject": "asynchronous external events",
    "predicate": "include",
    "object": "interrupts"
  },
  {
    "subject": "ControlPULP",
    "predicate": "hosts",
    "object": "a set of scratchpad memories (SPMs)"
  },
  {
    "subject": "scratchpad memories (SPMs)",
    "predicate": "guarantee",
    "object": "single-cycle access time from the CV32 manager core"
  },
  {
    "subject": "This design choice",
    "predicate": "enables",
    "object": "deterministic memory access latency for both data load, store, and instruction fetch"
  },
  {
    "subject": "This design choice",
    "predicate": "bounds",
    "object": "the worst case latency when handling unpredictable events"
  },
  {
    "subject": "Applications",
    "predicate": "run on top of",
    "object": "FreeRTOS 20"
  },
  {
    "subject": "FreeRTOS 20",
    "predicate": "is",
    "object": "an open-source, priority-based preemptive RTOS"
  },
  {
    "subject": "FreeRTOS 20",
    "predicate": "runs in",
    "object": "the manager core"
  },
  {
    "subject": "tasks",
    "predicate": "are scheduled and run from",
    "object": "the manager core"
  },
  {
    "subject": "nested interrupts",
    "predicate": "entails",
    "object": "preemption of a low-level interrupt by a high-level interrupt"
  },
  {
    "subject": "Transition",
    "predicate": "is between",
    "object": "different interrupt levels"
  },
  {
    "subject": "the latter",
    "predicate": "requires",
    "object": "the receiving side of the interrupt to clear the source often through accessing appropriate HW registers"
  },
  {
    "subject": "the former",
    "predicate": "is",
    "object": "unidirectional notification without confirmation"
  },
  {
    "subject": "the worst case interrupt latency",
    "predicate": "increases by",
    "object": "the time they remain disabled"
  },
  {
    "subject": "execution of the interrupt handler before all interrupt state has been pushed to memory",
    "predicate": "lowers",
    "object": "interrupt latency"
  },
  {
    "subject": "Interrupts",
    "predicate": "are",
    "object": "asynchronous events"
  },
  {
    "subject": "Interrupts",
    "predicate": "alter",
    "object": "the normal program order execution"
  },
  {
    "subject": "Interrupts",
    "predicate": "require",
    "object": "a switch to a different context to handle the event"
  },
  {
    "subject": "A processor",
    "predicate": "supports",
    "object": "vectored interrupts"
  },
  {
    "subject": "each interrupt",
    "predicate": "traps to",
    "object": "a specific interrupt service routine (ISR)"
  },
  {
    "subject": "each interrupt",
    "predicate": "traps according to",
    "object": "an interrupt vector table"
  },
  {
    "subject": "vectored interrupts",
    "predicate": "grant",
    "object": "fast interrupt response"
  },
  {
    "subject": "fast interrupt response",
    "predicate": "comes at the cost of",
    "object": "increased code size"
  },
  {
    "subject": "interrupt vectoring",
    "predicate": "is supported to",
    "object": "improve interrupt latencies"
  },
  {
    "subject": "non-vectored or direct interrupts",
    "predicate": "trap to",
    "object": "a shared ISR"
  },
  {
    "subject": "The latter approach",
    "predicate": "trades off",
    "object": "code size for a slower interrupt response"
  },
  {
    "subject": "The overhead of resolving the interruption cause and jumping to the correct ISR",
    "predicate": "are handled in",
    "object": "explicit instructions"
  },
  {
    "subject": "The interrupt table",
    "predicate": "can be made",
    "object": "much more compact"
  },
  {
    "subject": "Multiple sources",
    "predicate": "determine",
    "object": "the interrupt latency in a system"
  },
  {
    "subject": "the underlying HW",
    "predicate": "is a source of",
    "object": "interrupt latency"
  },
  {
    "subject": "the scheduler or OS",
    "predicate": "is a source of",
    "object": "interrupt latency"
  },
  {
    "subject": "the application running on top",
    "predicate": "is a source of",
    "object": "interrupt latency"
  },
  {
    "subject": "we",
    "predicate": "focus on",
    "object": "minimizing the latency imposed by the HW"
  },
  {
    "subject": "interrupt latency",
    "predicate": "means",
    "object": "its HW-contributed part"
  },
  {
    "subject": "The latter",
    "predicate": "consists of",
    "object": "restoring the interrupt context and the regular interrupt latency"
  },
  {
    "subject": "This breakdown",
    "predicate": "is detailed in",
    "object": "Fig."
  },
  {
    "subject": "Interrupt latency",
    "predicate": "is defined as",
    "object": "the time it takes from an interrupt edge arriving at the HW to the execution of the first instruction of the corresponding interrupt handler routine"
  },
  {
    "subject": "interrupt edge",
    "predicate": "arrives at",
    "object": "the HW"
  },
  {
    "subject": "HW",
    "predicate": "is usually",
    "object": "the interrupt controller"
  },
  {
    "subject": "interrupt latency",
    "predicate": "is measured as",
    "object": "the number of cycles it takes for an interrupt to arrive at the interrupt controller input to the first instruction of an interrupt handler that allows the calling of a C-function"
  },
  {
    "subject": "To make a fair comparison between SW-based and more HW-oriented interrupt solutions",
    "predicate": "we have to delineate",
    "object": "what exactly constitutes the first instruction of the interrupt handler"
  },
  {
    "subject": "Each HW configuration",
    "predicate": "has",
    "object": "a handwritten optimized interrupt handler"
  },
  {
    "subject": "a handwritten optimized interrupt handler",
    "predicate": "stores",
    "object": "all required general-purpose and machine-specific registers for nesting interrupts"
  },
  {
    "subject": "the first instruction",
    "predicate": "is counted as",
    "object": "the one after all necessary interrupt context has been saved on the stack to be able to call a function"
  },
  {
    "subject": "what exactly entails a function call",
    "predicate": "is dictated by",
    "object": "the used application binary interface (ABI)"
  },
  {
    "subject": "what exactly entails a function call",
    "predicate": "is dictated by",
    "object": "its calling convention"
  },
  {
    "subject": "interrupt handler and interrupt context saving code",
    "predicate": "can be interleaved",
    "object": ""
  },
  {
    "subject": "some of the context saving code",
    "predicate": "can be removed",
    "object": ""
  },
  {
    "subject": "some of the context saving code",
    "predicate": "might be",
    "object": "redundant"
  },
  {
    "subject": "The active interrupt handlers context",
    "predicate": "must be restored on",
    "object": "interrupt return"
  },
  {
    "subject": "The active interrupt handlers context",
    "predicate": "is immediately saved again due to",
    "object": "the next pending interrupt firing"
  },
  {
    "subject": "Restoring the pre-interrupt context",
    "predicate": "is handled in",
    "object": "SW for the nested interrupt case"
  },
  {
    "subject": "Context Switching Time",
    "predicate": "determines",
    "object": "the responsiveness of the architecture in swapping from one execution context to another"
  },
  {
    "subject": "The execution context",
    "predicate": "is dependent on",
    "object": "the OS being used"
  },
  {
    "subject": "The execution context",
    "predicate": "usually consists of",
    "object": "the state of the architectural registers of the ISA and the chosen ABI"
  },
  {
    "subject": "Preemption",
    "predicate": "refers to",
    "object": "an event such as an interrupt request temporarily interrupting a current task with the purpose of resuming its execution later"
  },
  {
    "subject": "The simplest case for preemption",
    "predicate": "occurs with",
    "object": "non-nested interrupt handlers"
  },
  {
    "subject": "interrupts",
    "predicate": "are disabled",
    "object": "globally during the execution of an ISR"
  },
  {
    "subject": "A more complex case for preemption",
    "predicate": "occurs with",
    "object": "nested interrupt handlers"
  },
  {
    "subject": "nested interrupt handlers",
    "predicate": "handle",
    "object": "the case of multiple interrupts at a time"
  },
  {
    "subject": "This situation",
    "predicate": "does not result in",
    "object": "preemption"
  },
  {
    "subject": "This situation",
    "predicate": "causes",
    "object": "pending interrupts to be serviced in sequence according to increasing priority"
  },
  {
    "subject": "levelpriority arbitration",
    "predicate": "is",
    "object": "SW-driven"
  },
  {
    "subject": "levelpriority arbitration",
    "predicate": "is driven by",
    "object": "priority simplestandard interrupt handlers"
  },
  {
    "subject": "highest priority interrupt identification code",
    "predicate": "is",
    "object": "not executed"
  },
  {
    "subject": "levelpriority arbitration logic",
    "predicate": "is designed within",
    "object": "interrupt controller"
  },
  {
    "subject": "highest levelpriority interrupt",
    "predicate": "is",
    "object": "pending but disabled"
  },
  {
    "subject": "highest levelpriority interrupt",
    "predicate": "is not propagated to",
    "object": "core"
  },
  {
    "subject": "levelpriority interrupt scheme",
    "predicate": "can be",
    "object": "SW or HW driven"
  },
  {
    "subject": "levelpriority interrupt scheme",
    "predicate": "introduces",
    "object": "additional masking of incoming interrupts"
  },
  {
    "subject": "additional masking",
    "predicate": "applies to",
    "object": "incoming interrupts of equal or lower levelpriority than the executing ISR"
  },
  {
    "subject": "additional masking",
    "predicate": "sometimes applies to",
    "object": "incoming interrupts larger than a configurable levelpriority threshold"
  },
  {
    "subject": "This scenario",
    "predicate": "is not ideal for",
    "object": "real-time and complex embedded systems"
  },
  {
    "subject": "interrupts",
    "predicate": "are served",
    "object": "sequentially"
  },
  {
    "subject": "attempts to handle a more complex interrupt scheme",
    "predicate": "would require",
    "object": "SW emulation"
  },
  {
    "subject": "SW emulation",
    "predicate": "incurs",
    "object": "untenable interrupt latencies"
  },
  {
    "subject": "A high-priority interrupt",
    "predicate": "has to wait for",
    "object": "a lower-priority interrupt to finish"
  },
  {
    "subject": "interrupts",
    "predicate": "are enabled",
    "object": "globally within the scope of an executing ISR"
  },
  {
    "subject": "interrupt handler",
    "predicate": "is entered",
    "object": "whenever"
  },
  {
    "subject": "global interrupts",
    "predicate": "are",
    "object": "disabled"
  },
  {
    "subject": "The ISR",
    "predicate": "need to be",
    "object": "designed to ensure they are reentrant"
  },
  {
    "subject": "The nesting",
    "predicate": "allows",
    "object": "higher priority interrupts to preempt a current lower priority ISR executing"
  },
  {
    "subject": "Redundant Interrupt Context",
    "predicate": "is",
    "object": "back-to-back interrupts"
  },
  {
    "subject": "back-to-back interrupts",
    "predicate": "need to be",
    "object": "served sequentially"
  },
  {
    "subject": "back-to-back interrupts",
    "predicate": "can happen",
    "object": "whenever there are multiple interrupts pending"
  },
  {
    "subject": "The transition from one interrupt to the next one",
    "predicate": "causes",
    "object": "a redundant sequence of context restores and context saves"
  },
  {
    "subject": "redundant context restore sequences",
    "predicate": "negatively impact",
    "object": "interrupt latency on higher interrupt loads"
  },
  {
    "subject": "redundant context restore",
    "predicate": "can introduce",
    "object": "unwanted additional interrupt latency"
  },
  {
    "subject": "redundant context restore",
    "predicate": "occurs with",
    "object": "non-nested or nested horizontal interrupts"
  },
  {
    "subject": "Redundant context restore",
    "predicate": "occurs for",
    "object": "two non-preemptive interrupts"
  },
  {
    "subject": "two non-preemptive interrupts",
    "predicate": "example",
    "object": "two interrupts with same level but different priorities"
  },
  {
    "subject": "tail-chaining",
    "predicate": "is used to",
    "object": "optimize redundant context restore"
  },
  {
    "subject": "interrupt context restore and store sequence",
    "predicate": "can be considered",
    "object": "redundant"
  },
  {
    "subject": "interrupt context restore and store sequence",
    "predicate": "occurs",
    "object": "between back-to-back interrupts"
  },
  {
    "subject": "Redundant Context Restoring",
    "predicate": "is described in",
    "object": "Section II-B"
  },
  {
    "subject": "the redundant context restoring sequences",
    "predicate": "contains",
    "object": "the full interrupt exit code sequence"
  },
  {
    "subject": "Redundant context restore with non-nested interrupts",
    "predicate": "is addressed by",
    "object": "chaining two back-to-back interrupts and bypassing the superfluous restoresave operation"
  },
  {
    "subject": "Section III-D",
    "predicate": "explores",
    "object": "the optimizations implemented in this work to address this scenario"
  },
  {
    "subject": "privileged specification 14",
    "predicate": "defines",
    "object": "a simple interrupt scheme with a set of timer and inter-processor interrupts"
  },
  {
    "subject": "privileged specification 14",
    "predicate": "is in",
    "object": "the RISC-V ecosystem"
  },
  {
    "subject": "pending and enabled interrupts",
    "predicate": "are masked",
    "object": "according to a threshold value representing an interrupt level"
  },
  {
    "subject": "threshold value representing an interrupt level",
    "predicate": "is configured through",
    "object": "a CSR"
  },
  {
    "subject": "pending and enabled interrupts",
    "predicate": "are masked",
    "object": "selectively"
  },
  {
    "subject": "masking of interrupts",
    "predicate": "is compared to",
    "object": "standard RISC-V privileged specifications"
  },
  {
    "subject": "RISC-V",
    "predicate": "has",
    "object": "Platform-Level Interrupt Controller Specification"
  },
  {
    "subject": "fixed priority interrupt scheme",
    "predicate": "has",
    "object": "16 predefined or reserved interrupts"
  },
  {
    "subject": "fixed priority interrupt scheme",
    "predicate": "has",
    "object": "16 implementation-defined interrupts"
  },
  {
    "subject": "interrupts",
    "predicate": "can be",
    "object": "optionally vectored"
  },
  {
    "subject": "cores",
    "predicate": "are",
    "object": "32-bit"
  },
  {
    "subject": "The CLINT",
    "predicate": "supports",
    "object": "prioritization of interrupts based on privilege mode"
  },
  {
    "subject": "CLINT-mode",
    "predicate": "has",
    "object": "inflexible interrupt scheme"
  },
  {
    "subject": "much more work",
    "predicate": "needs to be done in",
    "object": "managing interrupt mask (SOMEIRQMASK) and other machine state"
  },
  {
    "subject": "interrupts with lower priority than the current interrupt running",
    "predicate": "can fire",
    "object": "when global interrupts are re-enabled"
  },
  {
    "subject": "interrupts with lower priority than the current interrupt running",
    "predicate": "occur in",
    "object": "CLINT-mode"
  },
  {
    "subject": "CLINT",
    "predicate": "lacks",
    "object": "fine-grained control over interrupt prioritization for the embedded use cases"
  },
  {
    "subject": "PLIC 22",
    "predicate": "can be attached to",
    "object": "CLINT"
  },
  {
    "subject": "PLIC 22",
    "predicate": "increases",
    "object": "number of custom interrupts"
  },
  {
    "subject": "interrupt request IRQ2",
    "predicate": "is being",
    "object": "serviced"
  },
  {
    "subject": "another request IRQ1",
    "predicate": "is",
    "object": "enabled and pending"
  },
  {
    "subject": "an active interrupt handler",
    "predicate": "is servicing",
    "object": "irq2"
  },
  {
    "subject": "irq1",
    "predicate": "is",
    "object": "pending"
  },
  {
    "subject": "PREEMPTION",
    "predicate": "is regulated by",
    "object": "PRIVILEGE MODE (Vertical INTERRUPTS) and INTERRUPT LEVEL when the PRIVILEGE MODE is the same (Horizontal INTERRUPTS)"
  },
  {
    "subject": "number of interrupts",
    "predicate": "is",
    "object": "flexible (at design time)"
  },
  {
    "subject": "number of interrupts",
    "predicate": "can be assigned to",
    "object": "one or more targets"
  },
  {
    "subject": "Interrupts that are assigned a higher level",
    "predicate": "can pre-empt",
    "object": "lower-level interrupts"
  },
  {
    "subject": "A single HART",
    "predicate": "can correspond to",
    "object": "multiple targets"
  },
  {
    "subject": "Each interrupt",
    "predicate": "can be assigned",
    "object": "a priority"
  },
  {
    "subject": "Each target",
    "predicate": "can select",
    "object": "a threshold below which interrupts are disabled"
  },
  {
    "subject": "Interrupt selection",
    "predicate": "is driven by",
    "object": "the CLIC in HW"
  },
  {
    "subject": "the CLIC in HW",
    "predicate": "propagates",
    "object": "the highest level, highest priority pending interrupt to the cores interface"
  },
  {
    "subject": "Interrupt priority",
    "predicate": "serves as",
    "object": "a tie-breaker for the case of multiple interrupts pending with the same level"
  },
  {
    "subject": "selecting the interrupt with maximum level and priority",
    "predicate": "is implemented with",
    "object": "three binary trees"
  },
  {
    "subject": "Enabled interrupts and their level and priority information",
    "predicate": "are sent to",
    "object": "prioritization logic"
  },
  {
    "subject": "prioritization logic",
    "predicate": "uses",
    "object": "a binary arbitration tree"
  },
  {
    "subject": "a binary arbitration tree",
    "predicate": "selects",
    "object": "the highest-level interrupt"
  },
  {
    "subject": "Interrupts",
    "predicate": "can be assigned",
    "object": "a priority"
  },
  {
    "subject": "Interrupts",
    "predicate": "can be assigned",
    "object": "a level"
  },
  {
    "subject": "The priorities",
    "predicate": "allow",
    "object": "concurrent pending interrupts to be taken in the order preferred by the programmer"
  },
  {
    "subject": "the level information",
    "predicate": "enables",
    "object": "pre-emption of same-privilege level interrupts"
  },
  {
    "subject": "same-privilege level interrupts",
    "predicate": "are also called",
    "object": "horizontal interrupts"
  },
  {
    "subject": "This scheme",
    "predicate": "allows",
    "object": "interrupts to be divided according to their priorities on the PLIC-level"
  },
  {
    "subject": "This scheme",
    "predicate": "allows",
    "object": "some flexibility in terms of prioritization"
  },
  {
    "subject": "This scheme",
    "predicate": "does not address",
    "object": "the flexibility problem on the core local-level"
  },
  {
    "subject": "CLIC 15",
    "predicate": "addresses",
    "object": "these limitations"
  },
  {
    "subject": "CLIC 15",
    "predicate": "allows",
    "object": "interrupts to be prioritized by levels and priorities"
  },
  {
    "subject": "multiple horizontal interrupts",
    "predicate": "have",
    "object": "equal levels and priorities"
  },
  {
    "subject": "CLIC",
    "predicate": "selects",
    "object": "the highest numbered interrupt 15"
  },
  {
    "subject": "the highest numbered interrupt 15",
    "predicate": "is",
    "object": "an arbitrary assignment decided at design time"
  },
  {
    "subject": "Interrupts that are enabled, pending, and have a level below the threshold",
    "predicate": "are",
    "object": "masked"
  },
  {
    "subject": "others",
    "predicate": "can be",
    "object": "propagated"
  },
  {
    "subject": "This feature",
    "predicate": "is useful for",
    "object": "RTOSs that only want to disable a subset of all interrupts during critical sections"
  },
  {
    "subject": "Interrupts that do not interfere with the data accessed in such a critical section",
    "predicate": "can",
    "object": "still fire"
  },
  {
    "subject": "irq1",
    "predicate": "preempts",
    "object": "irq2"
  },
  {
    "subject": "irq1 level",
    "predicate": "is higher than",
    "object": "interrupt threshold"
  },
  {
    "subject": "irq1 level",
    "predicate": "is higher than",
    "object": "irq2 level"
  },
  {
    "subject": "interrupts fired from different privilege modes",
    "predicate": "are referred to as",
    "object": "vertical interrupts"
  },
  {
    "subject": "interrupts fired from the same privilege mode",
    "predicate": "are referred to as",
    "object": "horizontal interrupts"
  },
  {
    "subject": "Table I",
    "predicate": "shows",
    "object": "preemption conditions of two nested interrupts irq2 and irq1 according to the CLIC specification"
  },
  {
    "subject": "Reading from this CSR",
    "predicate": "allows",
    "object": "to fast-track interrupts that arrive late"
  },
  {
    "subject": "Reading from this CSR",
    "predicate": "allows",
    "object": "to avoid redundant context saverestore by running through pending interrupts back-to-back"
  },
  {
    "subject": "the core",
    "predicate": "is",
    "object": "within an active handler"
  },
  {
    "subject": "Entering an interrupt context or performing a context switch",
    "predicate": "requires",
    "object": "the HW to store enough information to resume operation correctly after returning from the aforementioned context"
  },
  {
    "subject": "we",
    "predicate": "can improve",
    "object": "interrupt latency and context switch times"
  },
  {
    "subject": "improving interrupt latency and context switch times",
    "predicate": "is done by",
    "object": "controlling the amount of state that needs to be preserved to enter and leave an interrupt context"
  },
  {
    "subject": "improving interrupt latency and context switch times",
    "predicate": "is done by",
    "object": "increasing the bandwidth and decreasing the latency to memory"
  },
  {
    "subject": "improving interrupt latency and context switch times",
    "predicate": "is done by",
    "object": "relying on latency-hiding techniques that defer the effective saving of the state to a later point in time"
  },
  {
    "subject": "CV32RT",
    "predicate": "has",
    "object": "architectural features and HWSW codesign"
  },
  {
    "subject": "proposed architecture",
    "predicate": "tackles",
    "object": "typical case scenarios"
  },
  {
    "subject": "The background-saving mechanism",
    "predicate": "updates",
    "object": "the stack pointer"
  },
  {
    "subject": "The background-saving mechanism",
    "predicate": "stores",
    "object": "the bank-switched contents in memory"
  },
  {
    "subject": "the execution of the core",
    "predicate": "proceeds",
    "object": "in parallel"
  },
  {
    "subject": "2",
    "predicate": "provides",
    "object": "an overview of the design"
  },
  {
    "subject": "Incoming interrupts",
    "predicate": "are filtered with",
    "object": "a Gateway module"
  },
  {
    "subject": "Gateway module",
    "predicate": "decides whether",
    "object": "there is a pending and enabled request for each interrupt source i (IRQ i)"
  },
  {
    "subject": "Interrupts",
    "predicate": "arrive at",
    "object": "the gateway"
  },
  {
    "subject": "Interrupts",
    "predicate": "are combined with",
    "object": "programmable configuration information"
  },
  {
    "subject": "programmable configuration information",
    "predicate": "is about",
    "object": "each interrupt line"
  },
  {
    "subject": "programmable configuration information",
    "predicate": "consists of",
    "object": "level"
  },
  {
    "subject": "programmable configuration information",
    "predicate": "consists of",
    "object": "priority"
  },
  {
    "subject": "programmable configuration information",
    "predicate": "consists of",
    "object": "enable status"
  },
  {
    "subject": "programmable configuration information",
    "predicate": "consists of",
    "object": "sensitivity (leveledge)"
  },
  {
    "subject": "The Interrupt Prioritization module",
    "predicate": "traverses",
    "object": "the tree from leaves to the root"
  },
  {
    "subject": "the sought-after maximum level and priority interrupt",
    "predicate": "is found",
    "object": "the root"
  },
  {
    "subject": "Each tree",
    "predicate": "has",
    "object": "low overhead in terms of area and delay"
  },
  {
    "subject": "overhead in terms of area",
    "predicate": "is",
    "object": "O(n)"
  },
  {
    "subject": "overhead in terms of delay",
    "predicate": "is",
    "object": "O(log(n))"
  },
  {
    "subject": "The interrupt",
    "predicate": "is presented to",
    "object": "the core"
  },
  {
    "subject": "The interrupt",
    "predicate": "is presented with",
    "object": "a handshake-based interface"
  },
  {
    "subject": "The additional kill signal",
    "predicate": "is there to allow for",
    "object": "a handshake to restart"
  },
  {
    "subject": "a handshake to restart",
    "predicate": "allows",
    "object": "a potentially more important interrupt to be presented to the core"
  },
  {
    "subject": "this work",
    "predicate": "can scale up to",
    "object": "n 4096 local interrupt sources"
  },
  {
    "subject": "additional pipeline stages",
    "predicate": "can be inserted in",
    "object": "the arbitration tree"
  },
  {
    "subject": "additional pipeline stages",
    "predicate": "can be inserted to",
    "object": "relax timing"
  },
  {
    "subject": "our version of the CLIC",
    "predicate": "supports",
    "object": "SHV"
  },
  {
    "subject": "our version of the CLIC",
    "predicate": "supports",
    "object": "the xnxti CSR in the core"
  },
  {
    "subject": "CV32",
    "predicate": "has",
    "object": "interrupt handling capabilities"
  },
  {
    "subject": "interrupt handling capabilities of CV32",
    "predicate": "are improved by",
    "object": "introducing priority and levels management in HW"
  },
  {
    "subject": "critical operations such as interrupt state and context saverestore",
    "predicate": "are not natively covered by",
    "object": "the CLIC"
  },
  {
    "subject": "critical operations such as interrupt state and context saverestore",
    "predicate": "need to be handled in",
    "object": "SW"
  },
  {
    "subject": "CV32fastirq",
    "predicate": "aims at",
    "object": "filling this gap"
  },
  {
    "subject": "The CLIC",
    "predicate": "addresses",
    "object": "this with the levelpriority scheme"
  },
  {
    "subject": "fastirq",
    "predicate": "improves upon",
    "object": "that"
  },
  {
    "subject": "fastirq",
    "predicate": "moves",
    "object": "the interrupt state saving logic in HW"
  },
  {
    "subject": "fastirq",
    "predicate": "adds",
    "object": "emret to handle redundant interrupt context sequences"
  },
  {
    "subject": "fastirq",
    "predicate": "is",
    "object": "a wrapper around the cores RF"
  },
  {
    "subject": "We",
    "predicate": "extend",
    "object": "the RF by an additional read port for the background-saving mechanism"
  },
  {
    "subject": "We",
    "predicate": "extend",
    "object": "registers for latching the additional processor state required for proper interrupt nesting"
  },
  {
    "subject": "A new interrupt at the CLIC",
    "predicate": "will be checked",
    "object": "whether the interrupt level exceeds the configured threshold"
  },
  {
    "subject": "The cores state machine",
    "predicate": "will flush",
    "object": "the pipeline"
  },
  {
    "subject": "The cores state machine",
    "predicate": "will update",
    "object": "the program counter"
  },
  {
    "subject": "the program counter",
    "predicate": "is updated according to",
    "object": "the vector table entry"
  },
  {
    "subject": "the saving logic",
    "predicate": "triggers",
    "object": "a bank switch"
  },
  {
    "subject": "the bank switch",
    "predicate": "allows",
    "object": "the interrupt context to have a fresh set of registers"
  },
  {
    "subject": "the bank switch",
    "predicate": "allows",
    "object": "draining the other bank contents through a separate port to the main memory"
  },
  {
    "subject": "RF banks",
    "predicate": "are switched",
    "object": "on an interrupt"
  },
  {
    "subject": "we",
    "predicate": "need to update",
    "object": "the stack pointer"
  },
  {
    "subject": "stack pointer",
    "predicate": "is updated",
    "object": "during a bank switch"
  },
  {
    "subject": "we",
    "predicate": "have",
    "object": "a dedicated adder between the two RFs"
  },
  {
    "subject": "The RISC-V embedded and integer ABI",
    "predicate": "dictate",
    "object": "that the stack pointer points below the last saved register on the stack"
  },
  {
    "subject": "The stack pointer",
    "predicate": "is adjusted",
    "object": "appropriately to maintain ABI invariants"
  },
  {
    "subject": "program code running in the interrupt handler",
    "predicate": "could clobber",
    "object": "the values on the stack"
  },
  {
    "subject": "interactions",
    "predicate": "exist between",
    "object": "background-saving mechanism and regular loadstore instructions of the core"
  },
  {
    "subject": "interactions",
    "predicate": "could result in",
    "object": "incorrect execution"
  },
  {
    "subject": "a load instruction",
    "predicate": "is trying to update",
    "object": "an architectural register"
  },
  {
    "subject": "the background-saving mechanism",
    "predicate": "is trying to read",
    "object": "the same register"
  },
  {
    "subject": "no conflict",
    "predicate": "arises because",
    "object": "interrupts are injected into the pipeline and only acted upon in the write-back stage of the core"
  },
  {
    "subject": "interrupts",
    "predicate": "are injected into",
    "object": "the pipeline"
  },
  {
    "subject": "interrupts",
    "predicate": "are only acted upon in",
    "object": "the write-back stage of the core"
  },
  {
    "subject": "updates to the RF",
    "predicate": "are resolved",
    "object": "at this point"
  },
  {
    "subject": "the bank switching operation",
    "predicate": "takes place",
    "object": "after updates to the RF are resolved"
  },
  {
    "subject": "the bank switching operation",
    "predicate": "ensures",
    "object": "correctness of the execution"
  },
  {
    "subject": "interrupt handler",
    "predicate": "is",
    "object": "already executing"
  },
  {
    "subject": "loads or stores accessing stack memory regions",
    "predicate": "need to be",
    "object": "properly resolved"
  },
  {
    "subject": "stack memory regions",
    "predicate": "are",
    "object": "where the background-saving mechanism is writing to"
  },
  {
    "subject": "execution of the handler",
    "predicate": "has to wait",
    "object": "if this happens while the background-saving mechanism is still at work"
  },
  {
    "subject": "we",
    "predicate": "could read",
    "object": "stale data"
  },
  {
    "subject": "we",
    "predicate": "could write",
    "object": "data that is immediately overwritten"
  },
  {
    "subject": "A straightforward solution",
    "predicate": "is",
    "object": "to stall the cores pipeline while the background-saving mechanism is at work"
  },
  {
    "subject": "we",
    "predicate": "want to issue",
    "object": "a load soon in the interrupt handler"
  },
  {
    "subject": "We",
    "predicate": "address",
    "object": "this problem"
  },
  {
    "subject": "We",
    "predicate": "check",
    "object": "whether the load-store unit tries to access the memory in the range of the stack pointer"
  },
  {
    "subject": "the stack pointer",
    "predicate": "is decremented",
    "object": "on an interrupt"
  },
  {
    "subject": "decrementing the stack pointer",
    "predicate": "makes",
    "object": "space available"
  },
  {
    "subject": "the background-saving mechanism",
    "predicate": "will start storing",
    "object": "the interrupt state word by word"
  },
  {
    "subject": "the address offset of the last word pushed out by the background-saving mechanism",
    "predicate": "is compared against",
    "object": "any incoming load and stores"
  },
  {
    "subject": "the address offset of the last word pushed out by the background-saving mechanism",
    "predicate": "is in",
    "object": "the load-store unit"
  },
  {
    "subject": "Load and stores that try to access data that is not yet pushed to memory",
    "predicate": "cause",
    "object": "the cores pipeline to stall"
  },
  {
    "subject": "This mechanism",
    "predicate": "ensures",
    "object": "the correctness of loads and stores issued by the core"
  },
  {
    "subject": "A system call handler",
    "predicate": "is issued through",
    "object": "the ecall instruction in RISC-V"
  },
  {
    "subject": "A system call handler",
    "predicate": "wants to access",
    "object": "user-provided arguments"
  },
  {
    "subject": "Most",
    "predicate": "will be passed through",
    "object": "general-purpose registers"
  },
  {
    "subject": "some",
    "predicate": "might be placed on",
    "object": "the stack"
  },
  {
    "subject": "Short interrupt handlers",
    "predicate": "want to return before",
    "object": "the full interrupt state has been saved"
  },
  {
    "subject": "Each of these cases",
    "predicate": "would potentially engage",
    "object": "the stalling logic outlined in Section III-C3"
  },
  {
    "subject": "the stalling logic outlined in Section III-C3",
    "predicate": "causes",
    "object": "higher interrupt latencies"
  },
  {
    "subject": "Some register values",
    "predicate": "cannot be forwarded",
    "object": "because they might not have reached the load-store unit yet"
  },
  {
    "subject": "the approach",
    "predicate": "increases",
    "object": "HW complexity"
  },
  {
    "subject": "the approach",
    "predicate": "requires",
    "object": "a dynamic address lookup into a queue-like buffer"
  },
  {
    "subject": "We",
    "predicate": "propose",
    "object": "an SW-based solution that does not cause any kind of stalling"
  },
  {
    "subject": "we",
    "predicate": "do not need to engage",
    "object": "the pipeline stalling logic"
  },
  {
    "subject": "the pipeline stalling logic",
    "predicate": "is engaged by",
    "object": "ordering the loads to access the already stored interrupt state first"
  },
  {
    "subject": "We",
    "predicate": "give",
    "object": "an analysis of the functional improvements"
  },
  {
    "subject": "The cv32s RF",
    "predicate": "is extended with",
    "object": "additional logic for the background-saving mechanism"
  },
  {
    "subject": "Parts of the old memory bank (the interrupt context)",
    "predicate": "are copied to",
    "object": "the cores stack location"
  },
  {
    "subject": "execution",
    "predicate": "can go ahead by using",
    "object": "the new bank"
  },
  {
    "subject": "this design",
    "predicate": "has",
    "object": "a dedicated memory port for the background-saving mechanism"
  },
  {
    "subject": "the dedicated memory port for the background-saving mechanism",
    "predicate": "can be shared with",
    "object": "the port from the load-store unit"
  },
  {
    "subject": "we",
    "predicate": "push out",
    "object": "the general-purpose registers x1, x2"
  },
  {
    "subject": "the programmer",
    "predicate": "has to be aware of",
    "object": "that to achieve the best possible latency"
  },
  {
    "subject": "4",
    "predicate": "gives an overview of",
    "object": "how nested interrupt handling code works for the basic CLINT-mode, the baseline CLIC, and our fastirq extension"
  },
  {
    "subject": "Routines",
    "predicate": "are for",
    "object": "saving state for vectored nesting interrupts"
  },
  {
    "subject": "Routines",
    "predicate": "use",
    "object": "CLINT"
  },
  {
    "subject": "Routines",
    "predicate": "use",
    "object": "CLIC"
  },
  {
    "subject": "Routines",
    "predicate": "use",
    "object": "proposed fastirq extension"
  },
  {
    "subject": "RISC-V",
    "predicate": "defines",
    "object": "RV32E as a variant of RV32I"
  },
  {
    "subject": "RV32E",
    "predicate": "has",
    "object": "16 registers"
  },
  {
    "subject": "RV32I",
    "predicate": "has",
    "object": "32 registers"
  },
  {
    "subject": "Reducing the RF size",
    "predicate": "helps",
    "object": "lower context switch times"
  },
  {
    "subject": "Reducing the RF size",
    "predicate": "does not affect",
    "object": "the interrupt latency"
  },
  {
    "subject": "the set of caller-save registers",
    "predicate": "remains",
    "object": "the same when using the embedded-application binary interface (EABI)"
  },
  {
    "subject": "Our implementation",
    "predicate": "allows",
    "object": "the core to dynamically switch between RV32I and RV32E with fastirq depending on the workload"
  },
  {
    "subject": "increased pressure on the RF",
    "predicate": "is",
    "object": "not acceptable"
  },
  {
    "subject": "one",
    "predicate": "could add",
    "object": "additional registers for the seven caller-save registers"
  },
  {
    "subject": "adding additional registers for the seven caller-save registers",
    "predicate": "purpose",
    "object": "to save area"
  },
  {
    "subject": "instead of doubling the RF size for the banking logic",
    "predicate": "alternative to",
    "object": "adding additional registers for the seven caller-save registers"
  },
  {
    "subject": "the interrupt state",
    "predicate": "can be quickly restored by",
    "object": "simply switching register banks"
  },
  {
    "subject": "mret",
    "predicate": "is used for",
    "object": "regular return from an interrupt handler"
  },
  {
    "subject": "mret",
    "predicate": "assumes",
    "object": "the interrupt state has been restored by SW"
  },
  {
    "subject": "we",
    "predicate": "add",
    "object": "a new instruction emret instead"
  },
  {
    "subject": "This instruction",
    "predicate": "performs the same function as",
    "object": "mret"
  },
  {
    "subject": "This instruction",
    "predicate": "performs",
    "object": "switching register banks"
  },
  {
    "subject": "this situation",
    "predicate": "can be optimized by",
    "object": "directly checking for other interrupts pending on the same level before restoring the executions interrupt context"
  },
  {
    "subject": "The CLIC",
    "predicate": "offers",
    "object": "an HW-assisted solution to address such a scenario with the xnxti CSRs"
  },
  {
    "subject": "Nucleis enhanced CLIC (ECLIC) 18",
    "predicate": "extends",
    "object": "xnxti"
  },
  {
    "subject": "Nucleis enhanced CLIC (ECLIC) 18",
    "predicate": "embeds",
    "object": "the jump to the queuing interrupt handler in the xnxti HW (jalxnxti)"
  },
  {
    "subject": "Nuclei System Technology ECLIC 39",
    "predicate": "extends",
    "object": "traditional xnxti"
  },
  {
    "subject": "Nuclei System Technology ECLIC 39",
    "predicate": "has",
    "object": "a novel CSR for machine privilege mode, jalmnxti 18"
  },
  {
    "subject": "jalmnxti 18",
    "predicate": "is discussed in",
    "object": "this work in Section IV"
  },
  {
    "subject": "emret",
    "predicate": "redirects",
    "object": "the control flow to the pending interrupts handler"
  },
  {
    "subject": "Some HW",
    "predicate": "refers to",
    "object": "this concept of removing redundant context restores as tail-chaining"
  },
  {
    "subject": "We",
    "predicate": "address",
    "object": "this scenario"
  },
  {
    "subject": "We",
    "predicate": "minimize",
    "object": "interrupt latency"
  },
  {
    "subject": "We",
    "predicate": "hide",
    "object": "latency"
  },
  {
    "subject": "the first instruction",
    "predicate": "will be",
    "object": "re-enabling global interrupts"
  },
  {
    "subject": "a high-level interrupt",
    "predicate": "could preempt",
    "object": "the current running interrupt handler"
  },
  {
    "subject": "This combination of latency hiding and background saving",
    "predicate": "allows",
    "object": "the core to quickly enter a first-level interrupt handler"
  },
  {
    "subject": "mie",
    "predicate": "has to be manually adjusted",
    "object": "to prevent that"
  },
  {
    "subject": "corresponding lower-priority interrupts",
    "predicate": "are",
    "object": "disabled"
  },
  {
    "subject": "this return path",
    "predicate": "could be handled in",
    "object": "HW by adding an additional write port to the cores RF"
  },
  {
    "subject": "exiting an interrupt handler",
    "predicate": "is",
    "object": "less time-critical"
  },
  {
    "subject": "we",
    "predicate": "mostly care about",
    "object": "how quickly an external event is addressed"
  },
  {
    "subject": "context switches",
    "predicate": "can be divided into",
    "object": "OS-specific and HW-specific parts"
  },
  {
    "subject": "The OS part",
    "predicate": "entails",
    "object": "all contributions to the context switch time that is specific to the OS itself"
  },
  {
    "subject": "The OS part",
    "predicate": "includes",
    "object": "computing the next task to be scheduled"
  },
  {
    "subject": "The OS part",
    "predicate": "includes",
    "object": "bookkeeping operations"
  },
  {
    "subject": "The remainder",
    "predicate": "is",
    "object": "the HW-dependent saving and restoring of the state belonging to the new context"
  },
  {
    "subject": "The idea",
    "predicate": "is to use",
    "object": "the background-saving mechanism"
  },
  {
    "subject": "the background-saving mechanism",
    "predicate": "to accelerate",
    "object": "the state saving and restoring part of context Fig."
  },
  {
    "subject": "switches",
    "predicate": "interleave",
    "object": "the loading of a new state with the automatic saving HW pushing out the previous register state to memory in the background"
  },
  {
    "subject": "the HW mechanism",
    "predicate": "to swap",
    "object": "the registers"
  },
  {
    "subject": "the HW mechanism",
    "predicate": "to save",
    "object": "them in the background"
  },
  {
    "subject": "we",
    "predicate": "can proceed with",
    "object": "the rest of the context switch routine"
  },
  {
    "subject": "the initial part of the context switch routine",
    "predicate": "changes",
    "object": "for that"
  },
  {
    "subject": "we",
    "predicate": "want to save",
    "object": "the current running tasks state to memory"
  },
  {
    "subject": "we",
    "predicate": "set up",
    "object": "the stack"
  },
  {
    "subject": "Additional RISC-V extensions",
    "predicate": "introduce",
    "object": "more context switching state"
  },
  {
    "subject": "more context switching state",
    "predicate": "run contrary to",
    "object": "the goals of fastirq regarding latencies"
  },
  {
    "subject": "adding more state to fastirq",
    "predicate": "has no",
    "object": "technical limitations"
  },
  {
    "subject": "the resulting design",
    "predicate": "would incur",
    "object": "a significant increase in area and power"
  },
  {
    "subject": "a dirty bit",
    "predicate": "could help to",
    "object": "keep the fast path competitive"
  },
  {
    "subject": "This section",
    "predicate": "gives",
    "object": "a functional and quantitative evaluation of the various flavors of the CV32RT"
  },
  {
    "subject": "CLINT",
    "predicate": "is",
    "object": "the first standardized RISC-V interrupt controller"
  },
  {
    "subject": "interrupt lines",
    "predicate": "have",
    "object": "a hardwired prioritization scheme"
  },
  {
    "subject": "The baseline CLIC",
    "predicate": "addresses",
    "object": "these weaknesses"
  },
  {
    "subject": "a level threshold register per privilege level (xintthresh)",
    "predicate": "controls",
    "object": "the set of allowed horizontal interrupts"
  },
  {
    "subject": "a level threshold register per privilege level (xintthresh)",
    "predicate": "limits the set of allowed horizontal interrupts to",
    "object": "those whose level exceeds the given value in the register"
  },
  {
    "subject": "Vectoring",
    "predicate": "can be enabled or disabled",
    "object": "per interrupt line"
  },
  {
    "subject": "This solution",
    "predicate": "works for",
    "object": "both vectored and non-vectored interrupts"
  },
  {
    "subject": "The baseline CLIC",
    "predicate": "does not differ from",
    "object": "the regular CLINT"
  },
  {
    "subject": "storing and restoring the interrupt context",
    "predicate": "is fully handled in",
    "object": "SW"
  },
  {
    "subject": "The optional xnxti extension",
    "predicate": "allows",
    "object": "multiple horizontal interrupts to be serviced in sequence without redundant context-restoring operations in between"
  },
  {
    "subject": "the first interrupt",
    "predicate": "has to pay",
    "object": "the full latency cost"
  },
  {
    "subject": "xnxti",
    "predicate": "does not touch",
    "object": "the interrupt context storing part"
  },
  {
    "subject": "This approach",
    "predicate": "loses",
    "object": "the latency advantage of HW vectoring"
  },
  {
    "subject": "This approach",
    "predicate": "runs",
    "object": "an SW emulation of HW vectoring"
  },
  {
    "subject": "The discussed differences",
    "predicate": "are summarized in",
    "object": "Table II"
  },
  {
    "subject": "We",
    "predicate": "take measurements by running",
    "object": "RTL simulations of the different versions of CV32RT as part of ControlPULP"
  },
  {
    "subject": "memory subsystem",
    "predicate": "has",
    "object": "single cycle (zero wait state) access to static random access memory (SRAM)"
  },
  {
    "subject": "The memory bank we are using",
    "predicate": "is not contended by",
    "object": "other bus masters"
  },
  {
    "subject": "interrupt lines",
    "predicate": "have",
    "object": "no additional latencies introduced on the system level"
  },
  {
    "subject": "interrupt lines",
    "predicate": "are between",
    "object": "interrupt sources and the CLIC"
  },
  {
    "subject": "We",
    "predicate": "measure",
    "object": "HW contributed interrupt latency of our fastirq extension"
  },
  {
    "subject": "HW contributed interrupt latency",
    "predicate": "is described in",
    "object": "Section II-B3"
  },
  {
    "subject": "We",
    "predicate": "compare",
    "object": "HW contributed interrupt latency of our fastirq extension to the CV32 and CV32RT variations"
  },
  {
    "subject": "CV32 and CV32RT variations",
    "predicate": "include",
    "object": "standard CLIC, xnxti, jalxnxti"
  },
  {
    "subject": "all caller-save registers",
    "predicate": "need to be saved",
    "object": "true"
  },
  {
    "subject": "The saved general-purpose registers",
    "predicate": "are",
    "object": "all caller-save registers in the respective ABI"
  },
  {
    "subject": "Interrupt handler routines",
    "predicate": "use",
    "object": "SW-based mechanisms to save and restore interrupt state"
  },
  {
    "subject": "Interrupt handler routines",
    "predicate": "can fully inline",
    "object": "the handler code"
  },
  {
    "subject": "Interrupt handler routines",
    "predicate": "can save",
    "object": "some caller-save registers"
  },
  {
    "subject": "Interrupt handler routines",
    "predicate": "can fully inline the handler code and save some caller-save registers",
    "object": "if the compiler permits"
  },
  {
    "subject": "we",
    "predicate": "measure",
    "object": "the interrupt latency in the optimal case"
  },
  {
    "subject": "the optimal case",
    "predicate": "is",
    "object": "only one caller-save register needs saving for SW-based interrupt handlers"
  },
  {
    "subject": "Interrupts",
    "predicate": "are injected into",
    "object": "the design at the interrupt controller inputs"
  },
  {
    "subject": "We",
    "predicate": "evaluate",
    "object": "both the EABI and regular integer ABI of RISC-V"
  },
  {
    "subject": "this amount of state",
    "predicate": "is always saved",
    "object": "for our fastirq extension"
  },
  {
    "subject": "HW",
    "predicate": "does not know a priori",
    "object": "which caller-save registers need to be saved"
  },
  {
    "subject": "Table III",
    "predicate": "compares",
    "object": "the main techniques for optimizing interrupt context and task context save/restore with nested and non-nested interrupts employed by industry and academia in the embedded and real-time application domains"
  },
  {
    "subject": "Several designs",
    "predicate": "automatically save and restore",
    "object": "the interrupt context directly in HW"
  },
  {
    "subject": "automatic interrupt context saverestore",
    "predicate": "reduces",
    "object": "SW housekeeping overhead before and after handling the interrupt routine"
  },
  {
    "subject": "automatic interrupt context saverestore",
    "predicate": "only partially addresses",
    "object": "the acceleration of the complete task context switch"
  },
  {
    "subject": "the presented solutions",
    "predicate": "are effective in",
    "object": "optimizing context"
  },
  {
    "subject": "saverestore",
    "predicate": "has",
    "object": "HW and SW cooperation"
  },
  {
    "subject": "the presented solutions",
    "predicate": "lack",
    "object": "a cohesive approach to address both interrupt context and task context switch acceleration"
  },
  {
    "subject": "the presented solutions",
    "predicate": "lack",
    "object": "none of the existing RISC-V-based approaches can close the gap with well-established industry vendors"
  },
  {
    "subject": "none of the existing RISC-V-based approaches",
    "predicate": "can close",
    "object": "the gap with well-established industry vendors"
  },
  {
    "subject": "Interrupt context saverestore",
    "predicate": "takes advantage of",
    "object": "the former"
  },
  {
    "subject": "Interrupt context saverestore",
    "predicate": "defers operations to",
    "object": "the HW"
  },
  {
    "subject": "xnxti",
    "predicate": "perform",
    "object": "even worse"
  },
  {
    "subject": "jalxnxti",
    "predicate": "perform",
    "object": "even worse"
  },
  {
    "subject": "xnxti",
    "predicate": "require",
    "object": "42 cycles"
  },
  {
    "subject": "jalxnxti",
    "predicate": "require",
    "object": "35 cycles"
  },
  {
    "subject": "xnxti and jalxnxti",
    "predicate": "insert",
    "object": "additional instructions in the code path between the handler and interrupt event"
  },
  {
    "subject": "xnxti and jalxnxti",
    "predicate": "improve upon",
    "object": "this situation"
  },
  {
    "subject": "xnxti and jalxnxti",
    "predicate": "improve upon this situation by",
    "object": "checking for pending interrupts"
  },
  {
    "subject": "xnxti and jalxnxti",
    "predicate": "improve upon this situation by",
    "object": "directly jumping to the respective handlers"
  },
  {
    "subject": "xnxti",
    "predicate": "returns",
    "object": "a pointer to the address of the next handler"
  },
  {
    "subject": "xnxti",
    "predicate": "needs",
    "object": "a small code sequence (load, jump, and retry loop)"
  },
  {
    "subject": "jalxnxti",
    "predicate": "fuses",
    "object": "these operations into one instruction"
  },
  {
    "subject": "jalxnxti",
    "predicate": "results in",
    "object": "saving nine cycles"
  },
  {
    "subject": "Arm Cortex-M4",
    "predicate": "has",
    "object": "an interrupt latency of 12 cycles given a single-cycle memory"
  },
  {
    "subject": "The Arm Cortex-M4",
    "predicate": "is able to do",
    "object": "the same task in six cycles"
  },
  {
    "subject": "The Arm Cortex-M4",
    "predicate": "has access to",
    "object": "single-cycle memory 24"
  },
  {
    "subject": "baseline CLIC",
    "predicate": "takes",
    "object": "68 cycles when using the integer ABI"
  },
  {
    "subject": "baseline CLIC",
    "predicate": "takes",
    "object": "50 cycles when using the embedded ABI"
  },
  {
    "subject": "no interrupt state",
    "predicate": "is affected",
    "object": ""
  },
  {
    "subject": "The emret mechanism of fastirq",
    "predicate": "works",
    "object": "similarly"
  },
  {
    "subject": "The emret mechanism of fastirq",
    "predicate": "costs",
    "object": "eight clock cycles"
  },
  {
    "subject": "The emret mechanism of fastirq",
    "predicate": "is not restricted to",
    "object": "non-vectored interrupts"
  },
  {
    "subject": "context switch time",
    "predicate": "is shown in",
    "object": "number of clock cycles between two FreeRTOS dummy tasks"
  },
  {
    "subject": "context switch time",
    "predicate": "is compared between",
    "object": "baseline CV32RT and CV32RTfastirq"
  },
  {
    "subject": "Average context switch time",
    "predicate": "is measured in",
    "object": "FreeRTOS for two tasks of various flavors of CV32RT"
  },
  {
    "subject": "All compile time options",
    "predicate": "were turned off",
    "object": "to minimize the context switch code"
  },
  {
    "subject": "All compile time options",
    "predicate": "include",
    "object": "tracing"
  },
  {
    "subject": "All compile time options",
    "predicate": "include",
    "object": "stack overflow signaling"
  },
  {
    "subject": "All compile time options",
    "predicate": "include",
    "object": "the more generic task selection mechanism"
  },
  {
    "subject": "We",
    "predicate": "left out",
    "object": "configurations that do not have Fig."
  },
  {
    "subject": "Cortex-M4 core",
    "predicate": "has",
    "object": "single-cycle access to memory"
  },
  {
    "subject": "Arm Cortex-M",
    "predicate": "has",
    "object": "16 core registers"
  },
  {
    "subject": "fastirq",
    "predicate": "allows",
    "object": "us to skip ahead the saving of the general-purpose registers"
  },
  {
    "subject": "fastirq",
    "predicate": "triggers",
    "object": "an SW interrupt as part of the save sequence"
  },
  {
    "subject": "The SW interrupt",
    "predicate": "will trigger",
    "object": "the fastirq mechanism"
  },
  {
    "subject": "the fastirq mechanism",
    "predicate": "starts",
    "object": "saving the general-purpose registers to memory"
  },
  {
    "subject": "we",
    "predicate": "can save up to",
    "object": "31 cycles (19) for a context switch when using the I-extension"
  },
  {
    "subject": "we",
    "predicate": "can save up to",
    "object": "16 cycles (12) for the E-extension"
  },
  {
    "subject": "registers",
    "predicate": "are still being saved by",
    "object": "the background-saving mechanism"
  },
  {
    "subject": "the background-saving mechanism",
    "predicate": "is described in",
    "object": "Section III-C4"
  },
  {
    "subject": "The FreeRTOS website 20",
    "predicate": "claims",
    "object": "context switches as low as 96 cycles for a Cortex-M4 implementation"
  },
  {
    "subject": "We",
    "predicate": "synthesize",
    "object": "CV32RT as part of the ControlPULP platform"
  },
  {
    "subject": "CV32RT",
    "predicate": "is synthesized using",
    "object": "Synopsys Design Compiler 2022.03"
  },
  {
    "subject": "Synopsys Design Compiler 2022.03",
    "predicate": "targets",
    "object": "GlobalFoundries 12LP FinFet technology"
  },
  {
    "subject": "GlobalFoundries 12LP FinFet technology",
    "predicate": "operates at",
    "object": "500 MHz, TT corner, and 25 C"
  },
  {
    "subject": "One gate equivalent (GE) for this technology",
    "predicate": "equals",
    "object": "0.121 m2"
  },
  {
    "subject": "STM32L476RG",
    "predicate": "is a",
    "object": "SoC"
  },
  {
    "subject": "higher latencies",
    "predicate": "were observed on",
    "object": "STM32L476RG"
  },
  {
    "subject": "higher latencies",
    "predicate": "are due to",
    "object": "memory access stalls and other implementation choices in the memory subsystem"
  },
  {
    "subject": "3This",
    "predicate": "can be seen as",
    "object": "a lower bound"
  },
  {
    "subject": "The RISC-V E-Extension",
    "predicate": "reduces",
    "object": "the available general-purpose registers from 32 to 16"
  },
  {
    "subject": "The RISC-V E-Extension",
    "predicate": "lowers",
    "object": "the context switch state that needs to be saved and restored"
  },
  {
    "subject": "RISC-V CLIC",
    "predicate": "has",
    "object": "area breakdown at varying numbers of interrupt sources"
  },
  {
    "subject": "8",
    "predicate": "reports",
    "object": "the area breakdown of the CLIC implemented in the proposed with different interrupt sources"
  },
  {
    "subject": "Area overhead",
    "predicate": "of",
    "object": "CV32RT in the two main configurations"
  },
  {
    "subject": "The overhead of fastirq in CV32RTfastirq core",
    "predicate": "results in",
    "object": "a minimal 10 area increase concentrated around the ID stage"
  },
  {
    "subject": "The design",
    "predicate": "has been synthesized in",
    "object": "GF12LP technology"
  },
  {
    "subject": "GF12LP technology",
    "predicate": "has frequency",
    "object": "500 MHz"
  },
  {
    "subject": "GF12LP technology",
    "predicate": "has corner",
    "object": "TT corner"
  },
  {
    "subject": "GF12LP technology",
    "predicate": "has temperature",
    "object": "25 C"
  },
  {
    "subject": "GF12LP technology",
    "predicate": "has voltage",
    "object": "0.8 V"
  },
  {
    "subject": "GF12LP technology",
    "predicate": "uses",
    "object": "super low VT standard cells"
  },
  {
    "subject": "CV32E40PRT ID stage",
    "predicate": "has",
    "object": "area breakdown with the proposed HW extensions"
  },
  {
    "subject": "each interrupt",
    "predicate": "is associated with",
    "object": "one 32-bit register"
  },
  {
    "subject": "one 32-bit register",
    "predicate": "incurs",
    "object": "an area overhead of about 176 GE"
  },
  {
    "subject": "The remaining area",
    "predicate": "implements",
    "object": "the gateway and binary tree arbitration logic at the core of the CLIC working principle"
  },
  {
    "subject": "The remaining area",
    "predicate": "implements",
    "object": "additional housekeeping control logic that scales linearly with the number of interrupt sources"
  },
  {
    "subject": "the fraction of the design occupied by the arbitration tree",
    "predicate": "is kept constant",
    "object": "when increasing the number of sources"
  },
  {
    "subject": "this design",
    "predicate": "incurs",
    "object": "a larger area overhead compared to traditional RISC-V CLINT 14"
  },
  {
    "subject": "the gain in flexibility",
    "predicate": "enables",
    "object": "a broader application scope with time-critical systems"
  },
  {
    "subject": "CV32RTfastirq",
    "predicate": "incurs",
    "object": "10 overall area increase compared to baseline CLIC only"
  },
  {
    "subject": "The ID stage",
    "predicate": "is",
    "object": "the HW block where the additional registers and the automatic stacking-unstacking logic are localized"
  },
  {
    "subject": "A breakdown of the ID stage",
    "predicate": "is shown in",
    "object": "Fig."
  },
  {
    "subject": "additional storage space for automatic context save and restore in HW",
    "predicate": "increases",
    "object": "the area of the RF by about 36 in the proposed implementation"
  },
  {
    "subject": "the logic for managing the shadow registers",
    "predicate": "accounts for",
    "object": "an overhead of 40 on the baseline ID stage controller"
  },
  {
    "subject": "HW overhead",
    "predicate": "comes from",
    "object": "the additional emret instruction"
  },
  {
    "subject": "HW overhead",
    "predicate": "is",
    "object": "negligible"
  },
  {
    "subject": "increased size of the ID stage",
    "predicate": "trades off",
    "object": "benefits of a simplified programming model that moves several SW operations in HW"
  },
  {
    "subject": "increased size of the ID stage",
    "predicate": "trades off",
    "object": "benefits of significantly lowered interrupt latency than standard RISC-V"
  },
  {
    "subject": "increased size of the ID stage",
    "predicate": "does not impact",
    "object": "the critical path of the base core design"
  },
  {
    "subject": "time-critical systems",
    "predicate": "shift design priorities from",
    "object": "area efficiency"
  },
  {
    "subject": "time-critical systems",
    "predicate": "shift design priorities to",
    "object": "safety, security, and reliability"
  },
  {
    "subject": "this section",
    "predicate": "describes",
    "object": "the leading solutions to optimize handling asynchronous events in state-of-the-art embedded and real-time MCUs"
  },
  {
    "subject": "We",
    "predicate": "differentiate between",
    "object": "existing PLICs and CLICs"
  },
  {
    "subject": "PLICs and CLICs",
    "predicate": "are introduced in",
    "object": "Section II-C"
  },
  {
    "subject": "We",
    "predicate": "focus on",
    "object": "the latter"
  },
  {
    "subject": "We",
    "predicate": "discuss",
    "object": "solutions across various platforms in industry and academia"
  },
  {
    "subject": "solutions",
    "predicate": "address",
    "object": "interrupt context saverestore techniques"
  },
  {
    "subject": "solutions",
    "predicate": "address",
    "object": "context switch techniques"
  },
  {
    "subject": "solutions",
    "predicate": "address",
    "object": "dedicated strategies to optimize redundant context restore with back-to-back interrupts"
  },
  {
    "subject": "We",
    "predicate": "propose",
    "object": "a modified version of the return"
  },
  {
    "subject": "Table III",
    "predicate": "summarizes",
    "object": "the overview"
  },
  {
    "subject": "interrupt latency",
    "predicate": "definition",
    "object": "presented in Section II-B"
  },
  {
    "subject": "we",
    "predicate": "provide references to",
    "object": "different variants adopted by SOTA in Table III"
  },
  {
    "subject": "Arms generic interrupt controller (GIC)",
    "predicate": "redistributes",
    "object": "incoming asynchronous events"
  },
  {
    "subject": "incoming asynchronous events",
    "predicate": "are redistributed as",
    "object": "non-critical (IRQ) or critical interrupts (fast IRQ, or FIQ)"
  },
  {
    "subject": "interrupt handler",
    "predicate": "uses",
    "object": "a dedicated register bank"
  },
  {
    "subject": "dedicated register bank",
    "predicate": "has",
    "object": "up to eight registers"
  },
  {
    "subject": "up to eight registers",
    "predicate": "are employed to",
    "object": "minimize context switching"
  },
  {
    "subject": "Arm Cortex-M series",
    "predicate": "integrates",
    "object": "nested vectored interrupt controller (NVIC)"
  },
  {
    "subject": "a state machine 32",
    "predicate": "performs",
    "object": "caller-save register stacking in the background"
  },
  {
    "subject": "the HW",
    "predicate": "encodes in",
    "object": "the link register a value (EXCRETURN)"
  },
  {
    "subject": "EXCRETURN",
    "predicate": "notifies",
    "object": "the core to start unwinding the stack"
  },
  {
    "subject": "the core",
    "predicate": "starts",
    "object": "unwinding the stack to return to normal program execution"
  },
  {
    "subject": "interrupt control unit (ICU) 33, 34, 35",
    "predicate": "is in",
    "object": "Infineon AURIX MCU-class TriCore family"
  },
  {
    "subject": "context of the calling routine",
    "predicate": "is saved in",
    "object": "memory autonomously"
  },
  {
    "subject": "restoring the context",
    "predicate": "is embedded in",
    "object": "RET instruction"
  },
  {
    "subject": "restoring the context",
    "predicate": "happens in parallel with",
    "object": "return jump 36"
  },
  {
    "subject": "27",
    "predicate": "are the first to propose",
    "object": "extensions for the RISC-V CLIC"
  },
  {
    "subject": "interrupt handling",
    "predicate": "is enhanced with",
    "object": "automatic stacking in HW"
  },
  {
    "subject": "automatic stacking in HW",
    "predicate": "benefits from",
    "object": "the cores Harvard architecture"
  },
  {
    "subject": "automatic stacking in HW",
    "predicate": "benefits from",
    "object": "simultaneous data and instruction memory access"
  },
  {
    "subject": "Register banking",
    "predicate": "is a technique adopted by",
    "object": "several architectures"
  },
  {
    "subject": "Register banking",
    "predicate": "swaps",
    "object": "a task's context without pushing/popping register values to the stack"
  },
  {
    "subject": "Register banking",
    "predicate": "has",
    "object": "an additional area overhead in the design"
  },
  {
    "subject": "A task's context switch",
    "predicate": "benefits from",
    "object": "quickly transferring the suspended context to the dedicated register bank"
  },
  {
    "subject": "A task's context switch",
    "predicate": "benefits from",
    "object": "already restoring the next task to be executed"
  },
  {
    "subject": "HW register banking",
    "predicate": "is the case of",
    "object": "PLICs (GIC)"
  },
  {
    "subject": "HW register banking",
    "predicate": "is used in",
    "object": "Arm designs"
  },
  {
    "subject": "A similar approach",
    "predicate": "is implemented in",
    "object": "the Renesas M32C80 series 30"
  },
  {
    "subject": "A dual register bank",
    "predicate": "allows",
    "object": "quickly swapping the context without saving/restoring to/from the stack"
  },
  {
    "subject": "The second register bank",
    "predicate": "is reserved for",
    "object": "high-speed interrupts"
  },
  {
    "subject": "The Aurix family",
    "predicate": "implements",
    "object": "an SW managed solution"
  },
  {
    "subject": "The SW managed solution",
    "predicate": "features",
    "object": "a specific organization of the context layout in the system memory"
  },
  {
    "subject": "The specific organization of the context layout",
    "predicate": "is based on",
    "object": "context save area (CSA) chained in a linked list fashion"
  },
  {
    "subject": "The latter approach",
    "predicate": "is similar to",
    "object": "leveraging RISC-Vs RV32E base instruction set by re-using the lower 16 architectural registers of the RF"
  },
  {
    "subject": "The evaluation in 28",
    "predicate": "lacks",
    "object": "HW implementation"
  },
  {
    "subject": "The evaluation in 28",
    "predicate": "lacks",
    "object": "area overhead assessment"
  },
  {
    "subject": "The evaluation in 28",
    "predicate": "reduces",
    "object": "context switching overhead by 24 on the DSPstone benchmark"
  },
  {
    "subject": "These approaches",
    "predicate": "trade-off",
    "object": "HW- and SW-induced latencies when handling asynchronous events"
  },
  {
    "subject": "26",
    "predicate": "propose",
    "object": "a full HW solution based on a hardware scheduling engine (HSE)"
  },
  {
    "subject": "hardware scheduling engine (HSE)",
    "predicate": "directly attaches",
    "object": "interrupts to running tasks"
  },
  {
    "subject": "hardware scheduling engine (HSE)",
    "predicate": "does not need",
    "object": "a specialized interrupt controller"
  },
  {
    "subject": "this approach",
    "predicate": "allows",
    "object": "lowering interrupt latency and task context switches dramatically"
  },
  {
    "subject": "this approach",
    "predicate": "lacks",
    "object": "flexibility"
  },
  {
    "subject": "its area overhead",
    "predicate": "grows for",
    "object": "a high number of tasks"
  },
  {
    "subject": "this approach",
    "predicate": "requires",
    "object": "replicating hardware resources per task"
  },
  {
    "subject": "fast context switching",
    "predicate": "is often required in",
    "object": "architectures such as superscalar central processing units (CPUs)"
  },
  {
    "subject": "fast context switching",
    "predicate": "is often required to",
    "object": "hide latency in graphic processing units (GPUs)"
  },
  {
    "subject": "such works",
    "predicate": "highlight",
    "object": "the difference in memory footprint between such architectures (MB size RFs) and low-end embedded microcontrollers targeted in this work"
  },
  {
    "subject": "such works",
    "predicate": "adopt",
    "object": "RF caching rather than register shadowing or banking"
  },
  {
    "subject": "RF caching",
    "predicate": "is adopted for",
    "object": "performance reasons"
  },
  {
    "subject": "RF caching",
    "predicate": "provides",
    "object": "lower access latency to the RF"
  },
  {
    "subject": "register shadowing or banking",
    "predicate": "provides",
    "object": "higher thread-level parallelism (TLP)"
  },
  {
    "subject": "such techniques",
    "predicate": "may deteriorate",
    "object": "the systems predictability"
  },
  {
    "subject": "such techniques",
    "predicate": "are not considered",
    "object": ""
  },
  {
    "subject": "RISC-V",
    "predicate": "addresses",
    "object": "this scenario"
  },
  {
    "subject": "RISC-V",
    "predicate": "adds",
    "object": "the xnxti CSR with SW-managed interrupt service loops"
  },
  {
    "subject": "xnxti CSR with SW-managed interrupt service loops",
    "predicate": "is part of",
    "object": "the CLIC specifications"
  },
  {
    "subject": "RISC-V",
    "predicate": "finds",
    "object": "early commercial examples with 31"
  },
  {
    "subject": "RISC-V AIA without APLIC",
    "predicate": "has a similar approach to",
    "object": "mnxti with the xtopi CSR"
  },
  {
    "subject": "xtopi CSR",
    "predicate": "reports",
    "object": "the highest-priority, pending, and enabled interrupt for a specific privilege mode"
  },
  {
    "subject": "RISC-V AIA without APLIC",
    "predicate": "allows",
    "object": "both late arrival and redundant context restore mechanisms"
  },
  {
    "subject": "This work",
    "predicate": "proposes",
    "object": "a combination of the background-saving with a register banking approach"
  },
  {
    "subject": "we",
    "predicate": "improve",
    "object": "task context switch times in FreeRTOS to 104 clock cycles using fastirq"
  },
  {
    "subject": "fastirq",
    "predicate": "is",
    "object": "20 faster than an SW-only approach"
  },
  {
    "subject": "the authors",
    "predicate": "consider for future work",
    "object": "analyzing fastirqs impact on timing channels"
  },
  {
    "subject": "the authors",
    "predicate": "consider for future work",
    "object": "its integration with different RISC-V extensions"
  },
  {
    "subject": "C. Rochange, S. Uhrig, and P. Sainrat",
    "predicate": "are authors of",
    "object": "Time-Predictable Architectures (FOCUS Computer Engineering Series)"
  },
  {
    "subject": "Hoboken, NJ, USA",
    "predicate": "is location of publisher",
    "object": "Wiley"
  },
  {
    "subject": "Wiley",
    "predicate": "published in year",
    "object": "2014"
  },
  {
    "subject": "2 L. M. Pinho et al.",
    "predicate": "authored",
    "object": "High-Performance and Time-Predictable Embedded Computing"
  },
  {
    "subject": "High-Performance and Time-Predictable Embedded Computing",
    "predicate": "available at",
    "object": "http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1848215932.html"
  },
  {
    "subject": "River",
    "predicate": "published in",
    "object": "Wharton, TX, USA"
  },
  {
    "subject": "River",
    "predicate": "published in year",
    "object": "2018"
  },
  {
    "subject": "3 F. Reghenzani, G. Massari, and W. Fornaciari",
    "predicate": "authored",
    "object": "The real-time Linux kernel: A survey on PREEMPTRT"
  },
  {
    "subject": "The real-time Linux kernel: A survey on PREEMPTRT",
    "predicate": "published in",
    "object": "ACM Comput."
  },
  {
    "subject": "M. Liu, D. Liu, Y. Wang, M. Wang, and Z. Shao",
    "predicate": "authored",
    "object": "On improving real-time interrupt latencies of hybrid operating systems with two-level hardware interrupts"
  },
  {
    "subject": "On improving real-time interrupt latencies of hybrid operating systems with two-level hardware interrupts",
    "predicate": "published_in",
    "object": "IEEE Trans."
  },
  {
    "subject": "5 P. Mantegazza, E. L. Dozio, and S. Papacharalambous",
    "predicate": "authored",
    "object": "RTAI: Real time application interface"
  },
  {
    "subject": "RTAI: Real time application interface",
    "predicate": "published in",
    "object": "Linux J."
  },
  {
    "subject": "J. Valvano",
    "predicate": "author of",
    "object": "Introduction to Embedded Systems"
  },
  {
    "subject": "http:web.engr.oregonstate.edutraylorece473 pdfsminimizeinterruptresponsetime.pdf",
    "predicate": "is available at",
    "object": "web.engr.oregonstate.edu"
  },
  {
    "subject": "CreateSpace",
    "predicate": "published",
    "object": "Scotts Valley, CA, USA in Aug. 2016"
  },
  {
    "subject": "9 Y. Huang, L. Shi, J. Li, Q. Li, and C. J. Xue",
    "predicate": "wrote",
    "object": "WCET-aware re-scheduling register allocation for real-time embedded systems with clustered VLIW architecture"
  },
  {
    "subject": "WCET-aware re-scheduling register allocation",
    "predicate": "is for",
    "object": "real-time embedded systems with clustered VLIW architecture"
  },
  {
    "subject": "WCET-aware re-scheduling register allocation",
    "predicate": "published in",
    "object": "IEEE Trans."
  },
  {
    "subject": "X. Zhou and P. Petrov",
    "predicate": "authored",
    "object": "Rapid and low-cost context-switch through embedded processor customization for real-time and control applications"
  },
  {
    "subject": "Rapid and low-cost context-switch through embedded processor customization for real-time and control applications",
    "predicate": "published in",
    "object": "Proc."
  },
  {
    "subject": "Association for Computing Machinery",
    "predicate": "location",
    "object": "New York, NY, USA"
  },
  {
    "subject": "Association for Computing Machinery",
    "predicate": "publication year",
    "object": "2006"
  },
  {
    "subject": "Association for Computing Machinery",
    "predicate": "page",
    "object": "352"
  },
  {
    "subject": "Association for Computing Machinery",
    "predicate": "doi",
    "object": "10.11451146909.1147001"
  },
  {
    "subject": "I. Behnke, L. Pirl, L. Thamsen, R. Danicki, A. Polze, and O. Kao",
    "predicate": "authored",
    "object": "Interrupting real-time IoT tasks: How bad can it be to connect your critical embedded system to the Internet?"
  },
  {
    "subject": "12 F. Rehm et al.",
    "predicate": "wrote",
    "object": "The road towards predictable automotive high Performance platforms"
  },
  {
    "subject": "The road towards predictable automotive high Performance platforms",
    "predicate": "was published in",
    "object": "Proc."
  },
  {
    "subject": "K. Asanovic and D. A. Patterson",
    "predicate": "wrote",
    "object": "Instruction sets should be free: The case for RISC-V"
  },
  {
    "subject": "The RISC-V instruction set manual volume II",
    "predicate": "is authored by",
    "object": "A. Waterman, Y. Lee, R. Avizienis, D. A. Patterson, and K. Asanovic"
  },
  {
    "subject": "The RISC-V instruction set manual volume II",
    "predicate": "has version",
    "object": "1.9"
  },
  {
    "subject": "The RISC-V instruction set manual volume II",
    "predicate": "covers",
    "object": "Privileged architecture"
  },
  {
    "subject": "The RISC-V instruction set manual volume II",
    "predicate": "is available at",
    "object": "http:www2.eecs.berkeley.eduPubsTechRpts2014EECS-2014-146.html"
  },
  {
    "subject": "The RISC-V instruction set manual volume II",
    "predicate": "is published by",
    "object": "Dept."
  },
  {
    "subject": "EECS",
    "predicate": "is part of",
    "object": "Univ."
  },
  {
    "subject": "California",
    "predicate": "contains",
    "object": "Berkeley"
  },
  {
    "subject": "Berkeley",
    "predicate": "is located in",
    "object": "CA"
  },
  {
    "subject": "CA",
    "predicate": "is located in",
    "object": "USA"
  },
  {
    "subject": "Berkeley",
    "predicate": "has",
    "object": "Tech"
  },
  {
    "subject": "CA",
    "predicate": "is part of",
    "object": "USA"
  },
  {
    "subject": "Berkeley",
    "predicate": "is associated with",
    "object": "Tech"
  },
  {
    "subject": "clic",
    "predicate": "is available at",
    "object": "https://github.com/riscv/riscv-fast-interrupt/blob/master/clic"
  },
  {
    "subject": "M. Gautschi et al.",
    "predicate": "authored",
    "object": "Near-threshold RISC-V core with DSP extensions for scalable IoT endpoint devices"
  },
  {
    "subject": "Near-threshold RISC-V core with DSP extensions for scalable IoT endpoint devices",
    "predicate": "published in",
    "object": "IEEE Trans."
  },
  {
    "subject": "OpenHW Group CV32E40P",
    "predicate": "is",
    "object": "User Manual"
  },
  {
    "subject": "OpenHW Group",
    "predicate": "is",
    "object": "an organization"
  },
  {
    "subject": "cv32e40p",
    "predicate": "is available at",
    "object": "https"
  },
  {
    "subject": "readthedocs.io",
    "predicate": "hosts",
    "object": "Nuclei System Technology documentation"
  },
  {
    "subject": "Nuclei System Technology",
    "predicate": "has version",
    "object": "18"
  },
  {
    "subject": "39 Nuclei System Technology Co. Ltd.",
    "predicate": "has",
    "object": "ECLIC Unit Introduction"
  },
  {
    "subject": "Nuclei",
    "predicate": "has",
    "object": "ISA Spec"
  },
  {
    "subject": "A. Ottaviano et al.",
    "predicate": "authored",
    "object": "ControlPULP: A RISC-V on-chip parallel power controller for many-core HPC processors with FPGA-based hardware-in-the-loop power and thermal emulation"
  },
  {
    "subject": "ControlPULP",
    "predicate": "is",
    "object": "a RISC-V on-chip parallel power controller for many-core HPC processors"
  },
  {
    "subject": "ControlPULP",
    "predicate": "uses",
    "object": "FPGA-based hardware-in-the-loop power and thermal emulation"
  },
  {
    "subject": "Text",
    "predicate": "is available at",
    "object": "https://doc.nucleisys.com/nucleispecisaintroduction.html"
  },
  {
    "subject": "FreeRTOS",
    "predicate": "is",
    "object": "Real-Time Operating System for Microcontrollers"
  },
  {
    "subject": "Real Time Engineers Ltd.",
    "predicate": "is",
    "object": "Online"
  },
  {
    "subject": "C.-M. Lin",
    "predicate": "authored",
    "object": "Nested interrupt analysis of low cost and high performance embedded systems using GSPN framework"
  },
  {
    "subject": "Nested interrupt analysis of low cost and high performance embedded systems using GSPN framework",
    "predicate": "published in",
    "object": "IEICE Trans."
  },
  {
    "subject": "Document",
    "predicate": "available at",
    "object": "https:www.freertos.orgindex.html"
  },
  {
    "subject": "22",
    "predicate": "is associated with",
    "object": "RISC-V International"
  },
  {
    "subject": "The Definitive Guide to ARM Cortex-M3 Cortex-M4 Processors",
    "predicate": "author",
    "object": "J. Yiu"
  },
  {
    "subject": "The Definitive Guide to ARM Cortex-M3 Cortex-M4 Processors",
    "predicate": "edition",
    "object": "3rd ed."
  },
  {
    "subject": "riscv-plic-1.0.0.pdf",
    "predicate": "available at",
    "object": "https://github.com/riscv/riscv-plic-spec/blob/master/riscv-plic-1.0.0.pdf"
  },
  {
    "subject": "Newnes",
    "predicate": "published",
    "object": "Boston, MA, USA in 2013"
  },
  {
    "subject": "Cortex-M4",
    "predicate": "is",
    "object": "Tech"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "https://developer.arm.com/documentation/100166/0001"
  },
  {
    "subject": "J. Yiu",
    "predicate": "is author of",
    "object": "the document"
  },
  {
    "subject": "Interrupt Latency",
    "predicate": "is related to",
    "object": "Arm Cortex-M Processors"
  },
  {
    "subject": "V. G. Gaitan, N. C. Gaitan, and I. Ungurean",
    "predicate": "authored",
    "object": "CPU architecture based on a hardware scheduler and independent pipeline registers"
  },
  {
    "subject": "CPU architecture",
    "predicate": "is based on",
    "object": "a hardware scheduler and independent pipeline registers"
  },
  {
    "subject": "CPU architecture",
    "predicate": "published in",
    "object": "IEEE Trans."
  },
  {
    "subject": "Text",
    "predicate": "available at",
    "object": "https://community.arm.com/arm-community-blogs/b-architectures-and-processors-blog/posts/beginner-guide-on-interrupt-latency-and-interrupt-latency-of-the-arm-cortex-m-processors?pifragment=227142"
  },
  {
    "subject": "Circuits Microsystems (ICICM)",
    "predicate": "occurred in",
    "object": "Oct. 2021"
  },
  {
    "subject": "Li and J. K. Lee",
    "predicate": "support",
    "object": "paged register files for improving context switching on embedded processors"
  },
  {
    "subject": "29 R. Balas and L. Benini",
    "predicate": "authored",
    "object": "RISC-V for real-time MCUs Software optimization and microarchitectural gap analysis"
  },
  {
    "subject": "RISC-V for real-time MCUs Software optimization and microarchitectural gap analysis",
    "predicate": "was presented in",
    "object": "Proc."
  },
  {
    "subject": "30",
    "predicate": "is",
    "object": "Renesas"
  },
  {
    "subject": "Hardware Manual",
    "predicate": "is for",
    "object": "RENESAS MCU M16C"
  },
  {
    "subject": "SiFive Inc.",
    "predicate": "published",
    "object": "hardware manual for M32C87, M32C87A, M32C87B"
  },
  {
    "subject": "hardware manual",
    "predicate": "is available at",
    "object": "https://www.renesas.com/us/en/document/mahm32c87-group-m32c87-m32c87a-m32c87b-hardware-manual"
  },
  {
    "subject": "SiFive Inc.",
    "predicate": "published year",
    "object": "2021"
  },
  {
    "subject": "SiFive E21",
    "predicate": "is described in",
    "object": "Core Complex Manual"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "https:sifive.cdn.prismic.iosifive7c22c2ec-8af4-4b6c-a5fe-9327d91e7808e21corecomplexmanual21G1.pdf"
  },
  {
    "subject": "STMicroelectronics",
    "predicate": "is mentioned in",
    "object": "the document"
  },
  {
    "subject": "STM32L5-System-NestedVectoredInterruptControlNVIC.pdf",
    "predicate": "is available at",
    "object": "https://www.st.com/content/ccc/resource/training/technical/product_training/group/16135/d207346f4e83/STM32L5-System-NestedVectoredInterruptControlNVIC/files/STM32L5-System-NestedVectoredInterruptControlNVIC.pdf/jcr:content/translations/en.STM32L5-System-NestedVectoredInterruptControlNVIC.pdf"
  },
  {
    "subject": "Infineon Technologies AG",
    "predicate": "is mentioned in",
    "object": "STM32L5-System-NestedVectoredInterruptControlNVIC.pdf"
  },
  {
    "subject": "A Fast Powertrain Microcontroller",
    "predicate": "is",
    "object": "a microcontroller"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "https://old.hotchips.org/wp-content/uploads/hcarchives/hc16/3Tue6HC16Sess7Pres1bw.pdf"
  },
  {
    "subject": "Infineon Technologies AG",
    "predicate": "is mentioned in",
    "object": "Document at https://old.hotchips.org/wp-content/uploads/hcarchives/hc16/3Tue6HC16Sess7Pres1bw.pdf"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "https://hitex.co.uk/fileadmin/uk-files/downloads/ShieldBuddy_tc27xDum_v2.2.pdf"
  },
  {
    "subject": "Infineon Technologies AG",
    "predicate": "is mentioned in",
    "object": "the document"
  },
  {
    "subject": "TC27x D-Step",
    "predicate": "is",
    "object": "32-Bit Single-Chip Microcontroller"
  },
  {
    "subject": "TriCore V1.6",
    "predicate": "has",
    "object": "Core Architecture"
  },
  {
    "subject": "Infineon Technologies AG",
    "predicate": "has",
    "object": "Task context switching RTOS"
  },
  {
    "subject": "Task context switching RTOS",
    "predicate": "is associated with",
    "object": "U.S. Patent 7 434 222 B2"
  },
  {
    "subject": "U.S. Patent 7 434 222 B2",
    "predicate": "was issued in",
    "object": "October 2008"
  },
  {
    "subject": "Document",
    "predicate": "is available at",
    "object": "https:www.infineon.comdgdltc16 architecturevol1.pdf?fileIddb3a3043372d5cc801373b0f374d5d67"
  },
  {
    "subject": "H. Zeng and K. Ghose",
    "predicate": "authored",
    "object": "Register file caching for energy efficiency"
  },
  {
    "subject": "Register file caching for energy efficiency",
    "predicate": "was presented in",
    "object": "ISLPED Proc."
  },
  {
    "subject": "Date",
    "predicate": "is",
    "object": "6, June 2024"
  },
  {
    "subject": "M. Sadrosadati et al.",
    "predicate": "authored",
    "object": "Highly concurrent latency-tolerant register files for GPUs"
  },
  {
    "subject": "Highly concurrent latency-tolerant register files for GPUs",
    "predicate": "published in",
    "object": "ACM Trans."
  },
  {
    "subject": "Access date",
    "predicate": "is",
    "object": "Aug. 4, 2023"
  },
  {
    "subject": "Robert Balas",
    "predicate": "is",
    "object": "Graduate Student Member, IEEE"
  },
  {
    "subject": "Robert Balas",
    "predicate": "received",
    "object": "B.Sc."
  },
  {
    "subject": "degrees",
    "predicate": "are from",
    "object": "ETH Zurich, Zurich, Switzerland"
  },
  {
    "subject": "degrees",
    "predicate": "were obtained in",
    "object": "2015 and 2017, respectively"
  },
  {
    "subject": "Ph.D. degree",
    "predicate": "is at",
    "object": "Digital Circuits and Systems Group of Prof. Benini"
  },
  {
    "subject": "the Digital Circuits and Systems Group",
    "predicate": "is of",
    "object": "Prof. Benini"
  },
  {
    "subject": "Prof. Benini",
    "predicate": "is at",
    "object": "ETH Zurich, Zurich, Switzerland"
  },
  {
    "subject": "His research interests",
    "predicate": "include",
    "object": "real-time computing"
  },
  {
    "subject": "His research interests",
    "predicate": "include",
    "object": "compilers"
  },
  {
    "subject": "His research interests",
    "predicate": "include",
    "object": "operating systems"
  },
  {
    "subject": "His research interests",
    "predicate": "include",
    "object": "power management of HPC processors"
  },
  {
    "subject": "His research interests",
    "predicate": "include",
    "object": "energy-efficient processor architecture"
  },
  {
    "subject": "Alessandro Ottaviano",
    "predicate": "is",
    "object": "Graduate Student Member of IEEE"
  },
  {
    "subject": "Alessandro Ottaviano",
    "predicate": "received",
    "object": "B.Sc."
  },
  {
    "subject": "degree",
    "predicate": "is in",
    "object": "physical engineering"
  },
  {
    "subject": "degree",
    "predicate": "is from",
    "object": "Politecnico di Turino, Turin, Italy"
  },
  {
    "subject": "degree",
    "predicate": "was obtained in",
    "object": "2018"
  },
  {
    "subject": "degree",
    "predicate": "field",
    "object": "electrical engineering"
  },
  {
    "subject": "degree",
    "predicate": "awarded by",
    "object": "Politecnico di Turino"
  },
  {
    "subject": "degree",
    "predicate": "awarded by",
    "object": "Grenoble INP-Phelma, Grenoble, France"
  },
  {
    "subject": "degree",
    "predicate": "awarded by",
    "object": "EPFL Lausanne, Lausanne, Switzerland"
  },
  {
    "subject": "degree",
    "predicate": "year",
    "object": "2020"
  },
  {
    "subject": "Dr. Benini",
    "predicate": "is a fellow of",
    "object": "the ACM"
  },
  {
    "subject": "Dr. Benini",
    "predicate": "is a member of",
    "object": "the Academia Europaea"
  },
  {
    "subject": "McCluskey Award",
    "predicate": "is",
    "object": "an award"
  }
]